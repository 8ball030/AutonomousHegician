'use strict'
Object.defineProperty(exports, '__esModule', { value: true })
const contract = require('@truffle/contract')
const SchnorrSECP256K1 = contract({
 "contractName": "SchnorrSECP256K1",
 "abi": [
  {
   "constant": true,
   "inputs": [],
   "name": "HALF_Q",
   "outputs": [
    {
     "name": "",
     "type": "uint256"
    }
   ],
   "payable": false,
   "stateMutability": "view",
   "type": "function"
  },
  {
   "constant": true,
   "inputs": [],
   "name": "Q",
   "outputs": [
    {
     "name": "",
     "type": "uint256"
    }
   ],
   "payable": false,
   "stateMutability": "view",
   "type": "function"
  },
  {
   "constant": true,
   "inputs": [
    {
     "name": "signingPubKeyX",
     "type": "uint256"
    },
    {
     "name": "pubKeyYParity",
     "type": "uint8"
    },
    {
     "name": "signature",
     "type": "uint256"
    },
    {
     "name": "msgHash",
     "type": "uint256"
    },
    {
     "name": "nonceTimesGeneratorAddress",
     "type": "address"
    }
   ],
   "name": "verifySignature",
   "outputs": [
    {
     "name": "",
     "type": "bool"
    }
   ],
   "payable": false,
   "stateMutability": "pure",
   "type": "function"
  }
 ],
 "evm": {
  "bytecode": {
   "linkReferences": {},
   "object": "0x608060405234801561001057600080fd5b506105dd806100206000396000f3fe608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638efb3bb21461005c578063e493ef8c14610087578063ff51dff2146100b2575b600080fd5b34801561006857600080fd5b50610071610146565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b5061009c610178565b6040518082815260200191505060405180910390f35b3480156100be57600080fd5b5061012c600480360360a08110156100d557600080fd5b8101908080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019c565b604051808215151515815260200191505060405180910390f35b6001807ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141908060020a82049150500181565b7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414181565b60006001807ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141908060020a82049150500186101515610243576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f5075626c69632d6b65792078203e3d2048414c465f510000000000000000000081525060200191505060405180910390fd5b7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414184101515610300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f7369676e6174757265206d7573742062652072656475636564206d6f64756c6f81526020017f205100000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561033d5750600086115b80156103495750600084115b80156103555750600083115b15156103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6e6f207a65726f20696e7075747320616c6c6f7765640000000000000000000081525060200191505060405180910390fd5b600086868585604051602001808581526020018460ff1660ff167f01000000000000000000000000000000000000000000000000000000000000000281526001018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140194505050505060405160208183030381529060405280519060200120600190049050600060017ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418015156104a157fe5b878a097ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641410360010260008960ff16146104db57601c6104de565b601b5b8a6001027ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414180151561050c57fe5b8c870960010260405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610569573d6000803e3d6000fd5b5050506020604051035190508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614925050509594505050505056fea165627a7a72305820811d41c503d9f0a7513e54a78200446ec2f10057b1a7723f1da0259d55181ac00029",
   "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8EFB3BB2 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0xE493EF8C EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xFF51DFF2 EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SWAP1 DUP1 PUSH1 0x2 EXP DUP3 DIV SWAP2 POP POP ADD DUP2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SWAP1 DUP1 PUSH1 0x2 EXP DUP3 DIV SWAP2 POP POP ADD DUP7 LT ISZERO ISZERO PUSH2 0x243 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5075626C69632D6B65792078203E3D2048414C465F5100000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP5 LT ISZERO ISZERO PUSH2 0x300 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7369676E6174757265206D7573742062652072656475636564206D6F64756C6F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2051000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x33D JUMPI POP PUSH1 0x0 DUP7 GT JUMPDEST DUP1 ISZERO PUSH2 0x349 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST DUP1 ISZERO PUSH2 0x355 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST ISZERO ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F207A65726F20696E7075747320616C6C6F77656400000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x1 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 ISZERO ISZERO PUSH2 0x4A1 JUMPI INVALID JUMPDEST DUP8 DUP11 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SUB PUSH1 0x1 MUL PUSH1 0x0 DUP10 PUSH1 0xFF AND EQ PUSH2 0x4DB JUMPI PUSH1 0x1C PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x1B JUMPDEST DUP11 PUSH1 0x1 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 ISZERO ISZERO PUSH2 0x50C JUMPI INVALID JUMPDEST DUP13 DUP8 MULMOD PUSH1 0x1 MUL PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP2 SAR COINBASE 0xc5 SUB 0xd9 CREATE 0xa7 MLOAD RETURNDATACOPY SLOAD 0xa7 DUP3 STOP DIFFICULTY PUSH15 0xC2F10057B1A7723F1DA0259D55181A 0xc0 STOP 0x29 ",
   "sourceMap": "261:7589:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;261:7589:11;;;;;;;"
  },
  "deployedBytecode": {
   "linkReferences": {},
   "object": "0x608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638efb3bb21461005c578063e493ef8c14610087578063ff51dff2146100b2575b600080fd5b34801561006857600080fd5b50610071610146565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b5061009c610178565b6040518082815260200191505060405180910390f35b3480156100be57600080fd5b5061012c600480360360a08110156100d557600080fd5b8101908080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019c565b604051808215151515815260200191505060405180910390f35b6001807ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141908060020a82049150500181565b7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414181565b60006001807ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141908060020a82049150500186101515610243576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f5075626c69632d6b65792078203e3d2048414c465f510000000000000000000081525060200191505060405180910390fd5b7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414184101515610300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f7369676e6174757265206d7573742062652072656475636564206d6f64756c6f81526020017f205100000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561033d5750600086115b80156103495750600084115b80156103555750600083115b15156103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6e6f207a65726f20696e7075747320616c6c6f7765640000000000000000000081525060200191505060405180910390fd5b600086868585604051602001808581526020018460ff1660ff167f01000000000000000000000000000000000000000000000000000000000000000281526001018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140194505050505060405160208183030381529060405280519060200120600190049050600060017ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418015156104a157fe5b878a097ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641410360010260008960ff16146104db57601c6104de565b601b5b8a6001027ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414180151561050c57fe5b8c870960010260405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610569573d6000803e3d6000fd5b5050506020604051035190508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614925050509594505050505056fea165627a7a72305820811d41c503d9f0a7513e54a78200446ec2f10057b1a7723f1da0259d55181ac00029",
   "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8EFB3BB2 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0xE493EF8C EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xFF51DFF2 EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SWAP1 DUP1 PUSH1 0x2 EXP DUP3 DIV SWAP2 POP POP ADD DUP2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SWAP1 DUP1 PUSH1 0x2 EXP DUP3 DIV SWAP2 POP POP ADD DUP7 LT ISZERO ISZERO PUSH2 0x243 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5075626C69632D6B65792078203E3D2048414C465F5100000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP5 LT ISZERO ISZERO PUSH2 0x300 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7369676E6174757265206D7573742062652072656475636564206D6F64756C6F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2051000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x33D JUMPI POP PUSH1 0x0 DUP7 GT JUMPDEST DUP1 ISZERO PUSH2 0x349 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST DUP1 ISZERO PUSH2 0x355 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST ISZERO ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F207A65726F20696E7075747320616C6C6F77656400000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x1 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 ISZERO ISZERO PUSH2 0x4A1 JUMPI INVALID JUMPDEST DUP8 DUP11 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SUB PUSH1 0x1 MUL PUSH1 0x0 DUP10 PUSH1 0xFF AND EQ PUSH2 0x4DB JUMPI PUSH1 0x1C PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x1B JUMPDEST DUP11 PUSH1 0x1 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 ISZERO ISZERO PUSH2 0x50C JUMPI INVALID JUMPDEST DUP13 DUP8 MULMOD PUSH1 0x1 MUL PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP2 SAR COINBASE 0xc5 SUB 0xd9 CREATE 0xa7 MLOAD RETURNDATACOPY SLOAD 0xa7 DUP3 STOP DIFFICULTY PUSH15 0xC2F10057B1A7723F1DA0259D55181A 0xc0 STOP 0x29 ",
   "sourceMap": "261:7589:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;594:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;594:45:11;;;;;;;;;;;;;;;;;;;;;;;356:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;356:170:11;;;;;;;;;;;;;;;;;;;;;;;5755:2093;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5755:2093:11;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5755:2093:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;594:45;638:1;633;460:66;628:6;52:12:-1;49:1;45:20;29:14;25:41;7:59;;628:6:11;627:12;594:45;:::o;356:170::-;460:66;356:170;:::o;5755:2093::-;5941:4;638:1;633;460:66;628:6;52:12:-1;49:1;45:20;29:14;25:41;7:59;;628:6:11;627:12;5961:14;:23;5953:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;460:66;6109:9;:13;6101:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6521:1;6483:40;;:26;:40;;;;:62;;;;;6544:1;6527:14;:18;6483:62;:85;;;;;6567:1;6555:9;:13;6483:85;:100;;;;;6582:1;6572:7;:11;6483:100;6475:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6661:20;6778:14;6794:13;6817:7;6826:26;6761:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6761:92:11;;;6751:103;;;;;;6743:117;;;6661:199;;7338:24;7365:419;460:66;7462:36;;;;;;;7485:9;7469:14;7462:36;460:66;7458:40;7450:49;;7684:1;7667:13;:18;;;7666:30;;7694:2;7666:30;;;7689:2;7666:30;7712:14;7704:23;;460:66;7743:39;;;;;;;7764:14;7750:12;7743:39;7735:48;;7365:419;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7365:419:11;;;;;;;;7338:446;;7827:16;7797:46;;:26;:46;;;7790:53;;;;5755:2093;;;;;;;:::o"
  },
  "methodIdentifiers": {
   "HALF_Q()": "8efb3bb2",
   "Q()": "e493ef8c",
   "verifySignature(uint256,uint8,uint256,uint256,address)": "ff51dff2"
  }
 },
 "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"HALF_Q\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Q\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"signingPubKeyX\",\"type\":\"uint256\"},{\"name\":\"pubKeyYParity\",\"type\":\"uint8\"},{\"name\":\"signature\",\"type\":\"uint256\"},{\"name\":\"msgHash\",\"type\":\"uint256\"},{\"name\":\"nonceTimesGeneratorAddress\",\"type\":\"address\"}],\"name\":\"verifySignature\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"verifySignature(uint256,uint8,uint256,uint256,address)\":{\"details\":\"See https://en.wikipedia.org/wiki/Schnorr_signature for reference.In what follows, let d be your secret key, PK be your public key, PKx be the x ordinate of your public key, and PKyp be the parity bit for the y ordinate (i.e., 0 if PKy is even, 1 if odd.)**************************************************************************TO CREATE A VALID SIGNATURE FOR THIS METHODFirst PKx must be less than HALF_Q. Then follow these instructions (see evm/test/schnorr_test.js, for an example of carrying them out):1. Hash the target message to a uint256, called msgHash here, using keccak2562. Pick k uniformly and cryptographically securely randomly from {0,...,Q-1}. It is critical that k remains confidential, as your private key can be reconstructed from k and the signature.3. Compute k*g in the secp256k1 group, where g is the group generator. (This is the same as computing the public key from the secret key k. But it's OK if k*g's x ordinate is greater than HALF_Q.)4. Compute the ethereum address for k*g. This is the lower 160 bits of the keccak hash of the concatenated affine coordinates of k*g, as 32-byte big-endians. (For instance, you could pass k to ethereumjs-utils's privateToAddress to compute this, though that should be strictly a development convenience, not for handling live secrets, unless you've locked your javascript environment down very carefully.) Call this address nonceTimesGeneratorAddress.5. Compute e=uint256(keccak256(PKx as a 32-byte big-endian \\u2016 PKyp as a single byte \\u2016 msgHash \\u2016 nonceTimesGeneratorAddress)) This value e is called \\\"msgChallenge\\\" in verifySignature's source code below. Here \\\"\\u2016\\\" means concatenation of the listed byte arrays.6. Let x be your secret key. Compute s = (k - d * e) % Q. Add Q to it, if it's negative. This is your signature. (d is your secret key.)**************************************************************************TO VERIFY A SIGNATUREGiven a signature (s, e) of msgHash, constructed as above, compute S=e*PK+s*generator in the secp256k1 group law, and then the ethereum address of S, as described in step 4. Call that nonceTimesGeneratorAddress. Then call the verifySignature method as:verifySignature(PKx, PKyp, s, msgHash, nonceTimesGeneratorAddress)**************************************************************************This signging scheme deviates slightly from the classical Schnorr signature, in that the address of k*g is used in place of k*g itself, both when calculating e and when verifying sum S as described in the verification paragraph above. This reduces the difficulty of brute-forcing a signature by trying random secp256k1 points in place of k*g in the signature verification process from 256 bits to 160 bits. However, the difficulty of cracking the public key using \\\"baby-step, giant-step\\\" is only 128 bits, so this weakening constitutes no compromise in the security of the signatures or the key.The constraint signingPubKeyX < HALF_Q comes from Eq. (281), p. 24 of Yellow Paper version 78d7b9a. ecrecover only accepts \\\"s\\\" inputs less than HALF_Q, to protect against a signature- malleability vulnerability in ECDSA. Schnorr does not have this vulnerability, but we must account for ecrecover's defense anyway. And since we are abusing ecrecover by putting signingPubKeyX in ecrecover's \\\"s\\\" argument the constraint applies to signingPubKeyX, even though it represents a value in the base field, and has no natural relationship to the order of the curve's cyclic group.**************************************************************************\",\"params\":{\"msgHash\":\"is a 256-bit hash of the message being signed.\",\"nonceTimesGeneratorAddress\":\"is the ethereum address of k*g in the above instructions**************************************************************************\",\"pubKeyYParity\":\"is 0 if the y ordinate of the public key is even, 1  if it's odd.\",\"signature\":\"is the actual signature, described as s in the above instructions.\",\"signingPubKeyX\":\"is the x ordinate of the public key. This must be less than HALF_Q. \"},\"return\":\"True if passed a valid signature, false otherwise. \"}}},\"userdoc\":{\"methods\":{\"verifySignature(uint256,uint8,uint256,uint256,address)\":{\"notice\":\"**************************************************************************verifySignature returns true iff passed a valid Schnorr signature.\"}},\"notice\":\"/////////////////////////////////////////////////////////////////////////////\"}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.5/dev/SchnorrSECP256K1.sol\":\"SchnorrSECP256K1\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.5/dev/SchnorrSECP256K1.sol\":{\"keccak256\":\"0x5c82b83c6aca50fa2ab07bc0b31bac6ee33c7ade303102ecc688087c351f5317\",\"urls\":[\"bzzr://e4d63d170c40da3609bfe0e10fa679bc4318083e6f9d42dbee72ba5e91312d8d\"]}},\"version\":1}"
})

if (process.env.NODE_ENV === 'test') {
  try {
    eval('SchnorrSECP256K1.setProvider(web3.currentProvider)')
  } catch (e) {}
}

exports.SchnorrSECP256K1 = SchnorrSECP256K1
