/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { MedianTestHelper } from "./MedianTestHelper";

export class MedianTestHelperFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(): Promise<MedianTestHelper> {
    return super.deploy() as Promise<MedianTestHelper>;
  }
  getDeployTransaction(): UnsignedTransaction {
    return super.getDeployTransaction();
  }
  attach(address: string): MedianTestHelper {
    return super.attach(address) as MedianTestHelper;
  }
  connect(signer: Signer): MedianTestHelperFactory {
    return super.connect(signer) as MedianTestHelperFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MedianTestHelper {
    return new Contract(address, _abi, signerOrProvider) as MedianTestHelper;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "_list",
        type: "int256[]"
      }
    ],
    name: "publicGet",
    outputs: [
      {
        name: "",
        type: "int256"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107b6806100206000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063115efb2014610046575b600080fd5b34801561005257600080fd5b506101096004803603602081101561006957600080fd5b810190808035906020019064010000000081111561008657600080fd5b82018360208201111561009857600080fd5b803590602001918460208302840111640100000000831117156100ba57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929050505061011f565b6040518082815260200191505060405180910390f35b600061012a82610131565b9050919050565b60008082519050600061014e60028361023690919063ffffffff16565b9050600060028381151561015e57fe5b06141561020f576000610179610173866102c9565b83610359565b9050600061019a8661019560018661059290919063ffffffff16565b610359565b90506000600280838115156101ab57fe5b076002858115156101b857fe5b07018115156101c357fe5b059050610203816101f56002858115156101d957fe5b056002878115156101e657fe5b0561061c90919063ffffffff16565b61061c90919063ffffffff16565b95505050505050610231565b61022c8461022760018461059290919063ffffffff16565b610359565b925050505b919050565b600080821115156102af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848115156102bc57fe5b0490508091505092915050565b60608082516040519080825280602002602001820160405280156102fc5781602001602082028038833980820191505090505b50905060008090505b835181101561034f57838181518110151561031c57fe5b90602001906020020151828281518110151561033457fe5b90602001906020020181815250508080600101915050610305565b5080915050919050565b60006060839050600083905060008251905060608160405190808252806020026020018201604052801561039c5781602001602082028038833980820191505090505b5090506060826040519080825280602002602001820160405280156103d05781602001602082028038833980820191505090505b5090506000806000805b60011561058257886103f660028961023690919063ffffffff16565b81518110151561040257fe5b9060200190602002015191506000935060009250600090505b868110156104ed5781898281518110151561043257fe5b90602001906020020151121561048357888181518110151561045057fe5b90602001906020020151868581518110151561046857fe5b906020019060200201818152505083806001019450506104e0565b81898281518110151561049257fe5b9060200190602002015113156104df5788818151811015156104b057fe5b9060200190602002015185848151811015156104c857fe5b906020019060200201818152505082806001019350505b5b808060010191505061041b565b83881115156105105783965061050389876106ef565b809750819a50505061057d565b61052383886106ff90919063ffffffff16565b88111561056b5761054f61054084896106ff90919063ffffffff16565b896106ff90919063ffffffff16565b975082965061055e89866106ef565b809650819a50505061057c565b81995050505050505050505061058c565b5b6103da565b5050505050505050505b92915050565b6000808284019050838110151515610612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000808284019050600083121580156106355750838112155b8061064b575060008312801561064a57508381125b5b15156106e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8091505092915050565b6060808284915091509250929050565b6000828211151515610779576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b60008284039050809150509291505056fea165627a7a723058207c8a2ab31fc306de7735ca587c8b868cb824a665adbd7c36bf4a4c250c375cf00029";
