/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { CoordinatorInterface } from "./CoordinatorInterface";

export class CoordinatorInterfaceFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoordinatorInterface {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CoordinatorInterface;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_requestId",
        type: "bytes32"
      },
      {
        name: "_aggregatorArgs",
        type: "bytes32"
      }
    ],
    name: "fulfillOracleRequest",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_serviceAgreementData",
        type: "bytes"
      },
      {
        name: "_oracleSignaturesData",
        type: "bytes"
      }
    ],
    name: "initiateServiceAgreement",
    outputs: [
      {
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];
