/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface ConcreteSignedSafeMathInterface extends Interface {
  functions: {
    testAdd: TypedFunctionDescription<{
      encode([_a, _b]: [BigNumberish, BigNumberish]): string;
    }>;
  };

  events: {};
}

export class ConcreteSignedSafeMath extends Contract {
  connect(signerOrProvider: Signer | Provider | string): ConcreteSignedSafeMath;
  attach(addressOrName: string): ConcreteSignedSafeMath;
  deployed(): Promise<ConcreteSignedSafeMath>;

  on(event: EventFilter | string, listener: Listener): ConcreteSignedSafeMath;
  once(event: EventFilter | string, listener: Listener): ConcreteSignedSafeMath;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): ConcreteSignedSafeMath;
  removeAllListeners(eventName: EventFilter | string): ConcreteSignedSafeMath;
  removeListener(eventName: any, listener: Listener): ConcreteSignedSafeMath;

  interface: ConcreteSignedSafeMathInterface;

  functions: {
    testAdd(_a: BigNumberish, _b: BigNumberish): Promise<BigNumber>;
  };

  testAdd(_a: BigNumberish, _b: BigNumberish): Promise<BigNumber>;

  filters: {};

  estimate: {
    testAdd(_a: BigNumberish, _b: BigNumberish): Promise<BigNumber>;
  };
}
