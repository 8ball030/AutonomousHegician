import { ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { Arrayish, BigNumberish } from "ethers/utils";
import { PrepaidAggregator } from "./PrepaidAggregator";
export declare class PrepaidAggregatorFactory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(_link: string, _paymentAmount: BigNumberish, _timeout: BigNumberish, _decimals: BigNumberish, _description: Arrayish): Promise<PrepaidAggregator>;
    getDeployTransaction(_link: string, _paymentAmount: BigNumberish, _timeout: BigNumberish, _decimals: BigNumberish, _description: Arrayish): UnsignedTransaction;
    attach(address: string): PrepaidAggregator;
    connect(signer: Signer): PrepaidAggregatorFactory;
    static connect(address: string, signerOrProvider: Signer | Provider): PrepaidAggregator;
}
//# sourceMappingURL=PrepaidAggregatorFactory.d.ts.map