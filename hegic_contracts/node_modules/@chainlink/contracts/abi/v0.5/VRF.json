{
	"schemaVersion": "2.0.0",
	"contractName": "VRF",
	"compilerOutput": {
		"abi": [
			{
				"constant": true,
				"inputs": [
					{
						"name": "c",
						"type": "uint256"
					},
					{
						"name": "p",
						"type": "uint256[2]"
					},
					{
						"name": "s",
						"type": "uint256"
					},
					{
						"name": "lcWitness",
						"type": "address"
					}
				],
				"name": "verifyLinearCombinationWithGenerator",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "x1",
						"type": "uint256"
					},
					{
						"name": "z1",
						"type": "uint256"
					},
					{
						"name": "x2",
						"type": "uint256"
					},
					{
						"name": "z2",
						"type": "uint256"
					}
				],
				"name": "projectiveAdd",
				"outputs": [
					{
						"name": "x3",
						"type": "uint256"
					},
					{
						"name": "z3",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "c",
						"type": "uint256"
					},
					{
						"name": "p1",
						"type": "uint256[2]"
					},
					{
						"name": "cp1Witness",
						"type": "uint256[2]"
					},
					{
						"name": "s",
						"type": "uint256"
					},
					{
						"name": "p2",
						"type": "uint256[2]"
					},
					{
						"name": "sp2Witness",
						"type": "uint256[2]"
					},
					{
						"name": "zInv",
						"type": "uint256"
					}
				],
				"name": "linearCombination",
				"outputs": [
					{
						"name": "",
						"type": "uint256[2]"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "x1",
						"type": "uint256"
					},
					{
						"name": "z1",
						"type": "uint256"
					},
					{
						"name": "x2",
						"type": "uint256"
					},
					{
						"name": "z2",
						"type": "uint256"
					}
				],
				"name": "projectiveSub",
				"outputs": [
					{
						"name": "x3",
						"type": "uint256"
					},
					{
						"name": "z3",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "base",
						"type": "uint256"
					},
					{
						"name": "exponent",
						"type": "uint256"
					},
					{
						"name": "modulus",
						"type": "uint256"
					}
				],
				"name": "bigModExp",
				"outputs": [
					{
						"name": "exponentiation",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "p1",
						"type": "uint256[2]"
					},
					{
						"name": "p2",
						"type": "uint256[2]"
					},
					{
						"name": "invZ",
						"type": "uint256"
					}
				],
				"name": "affineECAdd",
				"outputs": [
					{
						"name": "",
						"type": "uint256[2]"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "pk",
						"type": "uint256[2]"
					},
					{
						"name": "gamma",
						"type": "uint256[2]"
					},
					{
						"name": "c",
						"type": "uint256"
					},
					{
						"name": "s",
						"type": "uint256"
					},
					{
						"name": "seed",
						"type": "uint256"
					},
					{
						"name": "uWitness",
						"type": "address"
					},
					{
						"name": "cGammaWitness",
						"type": "uint256[2]"
					},
					{
						"name": "sHashWitness",
						"type": "uint256[2]"
					},
					{
						"name": "zInv",
						"type": "uint256"
					}
				],
				"name": "verifyVRFProof",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "MINUS_ONE",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "k",
						"type": "uint256[2]"
					},
					{
						"name": "input",
						"type": "uint256"
					}
				],
				"name": "hashToCurve",
				"outputs": [
					{
						"name": "rv",
						"type": "uint256[2]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "q",
						"type": "uint256"
					},
					{
						"name": "x",
						"type": "uint256"
					}
				],
				"name": "zqHash",
				"outputs": [
					{
						"name": "x_",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "WORD_LENGTH_BYTES",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "FIELD_SIZE",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "BOTTOM_160_BITS",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "x",
						"type": "uint256[2]"
					},
					{
						"name": "scalar",
						"type": "uint256"
					},
					{
						"name": "q",
						"type": "uint256[2]"
					}
				],
				"name": "ecmulVerify",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "pk",
						"type": "uint256[2]"
					},
					{
						"name": "gamma",
						"type": "uint256[2]"
					},
					{
						"name": "c",
						"type": "uint256"
					},
					{
						"name": "s",
						"type": "uint256"
					},
					{
						"name": "seed",
						"type": "uint256"
					},
					{
						"name": "uWitness",
						"type": "address"
					},
					{
						"name": "cGammaWitness",
						"type": "uint256[2]"
					},
					{
						"name": "sHashWitness",
						"type": "uint256[2]"
					},
					{
						"name": "zInv",
						"type": "uint256"
					},
					{
						"name": "output",
						"type": "uint256"
					}
				],
				"name": "isValidVRFOutput",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "x1",
						"type": "uint256"
					},
					{
						"name": "z1",
						"type": "uint256"
					},
					{
						"name": "x2",
						"type": "uint256"
					},
					{
						"name": "z2",
						"type": "uint256"
					}
				],
				"name": "projectiveDiv",
				"outputs": [
					{
						"name": "x3",
						"type": "uint256"
					},
					{
						"name": "z3",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "x1",
						"type": "uint256"
					},
					{
						"name": "z1",
						"type": "uint256"
					},
					{
						"name": "x2",
						"type": "uint256"
					},
					{
						"name": "z2",
						"type": "uint256"
					}
				],
				"name": "projectiveMul",
				"outputs": [
					{
						"name": "x3",
						"type": "uint256"
					},
					{
						"name": "z3",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "x",
						"type": "uint256"
					}
				],
				"name": "squareRoot",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "GROUP_ORDER",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "MULTIPLICATIVE_GROUP_ORDER",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "hash",
						"type": "uint256[2]"
					},
					{
						"name": "pk",
						"type": "uint256[2]"
					},
					{
						"name": "gamma",
						"type": "uint256[2]"
					},
					{
						"name": "uWitness",
						"type": "address"
					},
					{
						"name": "v",
						"type": "uint256[2]"
					}
				],
				"name": "scalarFromCurve",
				"outputs": [
					{
						"name": "s",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "x",
						"type": "uint256"
					}
				],
				"name": "ySquared",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "point",
						"type": "uint256[2]"
					}
				],
				"name": "pointAddress",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "SQRT_POWER",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "x1",
						"type": "uint256"
					},
					{
						"name": "y1",
						"type": "uint256"
					},
					{
						"name": "x2",
						"type": "uint256"
					},
					{
						"name": "y2",
						"type": "uint256"
					}
				],
				"name": "projectiveECAdd",
				"outputs": [
					{
						"name": "x3",
						"type": "uint256"
					},
					{
						"name": "y3",
						"type": "uint256"
					},
					{
						"name": "z3",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "PURPOSEReggie the Random Oracle (not his real job) wants to provide randomness to Vera the verifier in such a way that Vera can be sure he's not making his output up to suit himself. Reggie provides Vera a public key to which he knows the secret key. Each time Vera provides a seed to Reggie, he gives back a value which is computed completely deterministically from the seed and the secret key, but which is indistinguishable from randomness to Vera. Nonetheless, Vera is able to verify that Reggie's output came from her seed and his secret key.The purpose of this contract is to perform that verification.****************************************************************************USAGEThe main entry point is isValidVRFOutput. See its docstring. Design notes ------------ An elliptic curve point is generally represented in the solidity code as a uint256[2], corresponding to its affine coordinates in GF(fieldSize). For the sake of efficiency, this implementation deviates from the spec in some minor ways: - Keccak hash rather than SHA256. This is because it's provided natively by the EVM, and therefore costs much less gas. The impact on security should be minor. - Secp256k1 curve instead of P-256. It abuses ECRECOVER for the most expensive ECC arithmetic. - scalarFromCurve recursively hashes and takes the relevant hash bits until it finds a point less than the group order. This results in uniform sampling over the the possible values scalarFromCurve could take. The spec recommends just uing the first hash output as a uint256, which is a slightly biased sample. See the zqHash function. - hashToCurve recursively hashes until it finds a curve x-ordinate. The spec recommends that the initial input should be concatenated with a nonce and then hashed, and this input should be rehashed with the nonce updated until an x-ordinate is found. Recursive hashing is slightly more efficient. The spec also recommends (https://tools.ietf.org/html/rfc8032#section-5.1.3 , by the specification of RS2ECP) that the x-ordinate should be rejected if it is greater than the modulus. - In the calculation of the challenge value \"c\", the \"u\" value (or \"k*g\", if you know the secret nonce) The spec also requires the y ordinate of the hashToCurve to be negated if y is odd. See http://www.secg.org/sec1-v2.pdf#page=17 . This sacrifices one bit of entropy in the random output. Instead, here y is chosen based on whether an extra hash of the inputs is even or odd. ",
			"methods": {
				"isValidVRFOutput(uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256,uint256)": {
					"details": "See the invocation of verifyVRFProof in VRF.js, for an example.**************************************************************************Let x be the secret key associated with the public key pk",
					"params": {
						"c": "The challenge value for proof that gamma = x*hashToCurve(seed) See the variable c on  p. 28 of https://www.cs.bu.edu/~goldbe/papers/VRF_ietf99_print.pdf",
						"cGammaWitness": "c*gamma on the elliptic-curve",
						"gamma": "Intermediate output of the VRF as an affine secp256k1 point",
						"output": "The actual output of the VRF.**************************************************************************",
						"pk": "Affine coordinates of the secp256k1 public key for this VRF",
						"s": "The response value for the proof. See s on p. 28",
						"sHashWitness": "s*hashToCurve(seed) on the elliptic-curve",
						"seed": "The input seed from which the VRF output is computed",
						"uWitness": "The ethereum address of c*pk + s*<generator>, in elliptic-curve arithmetic",
						"zInv": "Inverse of the third ordinate of the return value from projectiveECAdd(c*gamma, s*hashToCurve(seed)). Passed in here to save gas, because computing modular inverses is expensive in the EVM."
					},
					"return": "True iff all the above parameters are correct"
				},
				"projectiveECAdd(uint256,uint256,uint256,uint256)": {
					"details": "Using projective coordinates avoids costly divisionsTo use this with x and y in affine coordinates, compute projectiveECAdd(x[0], x[1], 1, y[0], y[1], 1)This can be used to calculate the z which is the inverse to zInv in isValidVRFOutput. But consider using a faster re-implementation.This function assumes [x1,y1,z1],[x2,y2,z2] are valid projective coordinates of secp256k1 points. That is safe in this contract, because this method is only used by linearCombination, which checks points are on the curve via ecrecover, and ensures valid projective coordinates by passing z1=z2=1.**************************************************************************",
					"params": {
						"x1": "The first affine coordinate of the first summand",
						"x2": "The first affine coordinate of the second summand",
						"y1": "The second affine coordinate of the first summand",
						"y2": "The second affine coordinate of the second summand**************************************************************************"
					},
					"return": "[x1,y1,z1]+[x2,y2,z2] as points on secp256k1, in P²(𝔽ₙ)"
				}
			}
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50612581806100206000396000f3fe608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063042df7881461014e57806319880e611461020c578063321eda1514610280578063329a001b14610410578063340128b61461048457806337321d04146104e75780633848d209146105e05780633c71f00a146107765780633c9e1489146107a15780633ea3075e1461085957806340cef14b146108b2578063414a37ba146108dd57806342e5338b14610908578063581e7b52146109335780635ad17fcd14610a085780636365cc7714610acc5780636bfe3efe14610b405780637b019f8914610bb45780638e692fa114610c0357806394f0fc6f14610c2e578063aca9a90914610c59578063ad6df90a14610dc3578063cb3a123414610e12578063e2ab3b5514610e8d578063f1b3a57c14610eb8575b600080fd5b34801561015a57600080fd5b506101f2600480360360a081101561017157600080fd5b810190808035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f33565b604051808215151515815260200191505060405180910390f35b34801561021857600080fd5b506102636004803603608081101561022f57600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035906020019092919050505061117b565b604051808381526020018281526020019250505060405180910390f35b34801561028c57600080fd5b506103d260048036036101608110156102a457600080fd5b810190808035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050611255565b6040518082600260200280838360005b838110156103fd5780820151818401526020810190506103e2565b5050505090500191505060405180910390f35b34801561041c57600080fd5b506104676004803603608081101561043357600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035906020019092919050505061145d565b604051808381526020018281526020019250505060405180910390f35b34801561049057600080fd5b506104d1600480360360608110156104a757600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611551565b6040518082815260200191505060405180910390f35b3480156104f357600080fd5b506105a2600480360360a081101561050a57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290803590602001909291905050506116a2565b6040518082600260200280838360005b838110156105cd5780820151818401526020810190506105b2565b5050505090500191505060405180910390f35b3480156105ec57600080fd5b5061075c60048036036101a081101561060457600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050611830565b604051808215151515815260200191505060405180910390f35b34801561078257600080fd5b5061078b611925565b6040518082815260200191505060405180910390f35b3480156107ad57600080fd5b5061081b600480360360608110156107c457600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919050505061194c565b6040518082600260200280838360005b8381101561084657808201518184015260208101905061082b565b5050505090500191505060405180910390f35b34801561086557600080fd5b5061089c6004803603604081101561087c57600080fd5b810190808035906020019092919080359060200190929190505050611bc8565b6040518082815260200191505060405180910390f35b3480156108be57600080fd5b506108c7611c0f565b6040518082815260200191505060405180910390f35b3480156108e957600080fd5b506108f2611c14565b6040518082815260200191505060405180910390f35b34801561091457600080fd5b5061091d611c38565b6040518082815260200191505060405180910390f35b34801561093f57600080fd5b506109ee600480360360a081101561095657600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611c51565b604051808215151515815260200191505060405180910390f35b348015610a1457600080fd5b50610ab260048036036101c0811015610a2c57600080fd5b810190808060400190919291929080604001909192919290803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080604001909192919290806040019091929192908035906020019092919080359060200190929190505050611df1565b604051808215151515815260200191505060405180910390f35b348015610ad857600080fd5b50610b2360048036036080811015610aef57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611f30565b604051808381526020018281526020019250505060405180910390f35b348015610b4c57600080fd5b50610b9760048036036080811015610b6357600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611f9e565b604051808381526020018281526020019250505060405180910390f35b348015610bc057600080fd5b50610bed60048036036020811015610bd757600080fd5b810190808035906020019092919050505061200c565b6040518082815260200191505060405180910390f35b348015610c0f57600080fd5b50610c1861206f565b6040518082815260200191505060405180910390f35b348015610c3a57600080fd5b50610c43612093565b6040518082815260200191505060405180910390f35b348015610c6557600080fd5b50610dad6004803603610120811015610c7d57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506120ba565b6040518082815260200191505060405180910390f35b348015610dcf57600080fd5b50610dfc60048036036020811015610de657600080fd5b810190808035906020019092919050505061221b565b6040518082815260200191505060405180910390f35b348015610e1e57600080fd5b50610e4b60048036036040811015610e3557600080fd5b810190808060400190919291929050505061227e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e9957600080fd5b50610ea26122da565b6040518082815260200191505060405180910390f35b348015610ec457600080fd5b50610f0f60048036036080811015610edb57600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035906020019092919050505061230d565b60405180848152602001838152602001828152602001935050505060405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610fd9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f626164207769746e65737300000000000000000000000000000000000000000081525060200191505060405180910390fd5b60007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414180151561100557fe5b8486600060028110151561101557fe5b6020020151097ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141036001029050600080600287600160028110151561105657fe5b602002015181151561106457fe5b061461107157601c611074565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418015156110a257fe5b8760006002811015156110b157fe5b6020020151890960010290506000600184848a60006002811015156110d257fe5b60200201516001028560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611132573d6000803e3d6000fd5b5050506020604051035190508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614945050505050949350505050565b60008060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8015156111aa57fe5b878509905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8015156111db57fe5b868809905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561120c57fe5b868909905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561123d57fe5b83850890508082955095505050505094509492505050565b61125d6124ed565b82600060028110151561126c57fe5b602002015186600060028110151561128057fe5b6020020151141515156112fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f706f696e7473206d7573742064696666657220696e2073756d0000000000000081525060200191505060405180910390fd5b611306878988611c51565b15156113a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4669727374206d756c7469706c69636174696f6e20636865636b206661696c6581526020017f640000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6113ab848685611c51565b1515611445576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f5365636f6e64206d756c7469706c69636174696f6e20636865636b206661696c81526020017f656400000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6114508684846116a2565b9050979650505050505050565b60008060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561148c57fe5b878509905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8015156114bd57fe5b87877ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f030990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561150e57fe5b8183087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561153b57fe5b8689098094508195505050505094509492505050565b60008061155c61250f565b602081600060068110151561156d57fe5b602002018181525050602081600160068110151561158757fe5b60200201818152505060208160026006811015156115a157fe5b602002018181525050858160036006811015156115ba57fe5b602002018181525050848160046006811015156115d357fe5b602002018181525050838160056006811015156115ec57fe5b6020020181815250506115fd612532565b60208160c0846005613300fa92506000831415611682576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6269674d6f64457870206661696c75726521000000000000000000000000000081525060200191505060405180910390fd5b80600060018110151561169157fe5b602002015193505050509392505050565b6116aa6124ed565b60008060006117078760006002811015156116c157fe5b60200201518860016002811015156116d557fe5b60200201518860006002811015156116e957fe5b60200201518960016002811015156116fd57fe5b602002015161230d565b80935081945082955050505060017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561173f57fe5b8683091415156117b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5f696e765a206d75737420626520696e7665727365206f66207a00000000000081525060200191505060405180910390fd5b60408051908101604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8015156117ec57fe5b87860981526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561181e57fe5b87850981525093505050509392505050565b600061183e888b8988610f33565b15156118d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001807f436f756c64206e6f74207665726966792074686174206164647265737328632a81526020017f706b2b732a67656e657261746f72293d5f755769746e6573730000000000000081525060400191505060405180910390fd5b6118e06124ed565b6118ea8b8861194c565b90506118f46124ed565b6119038a8c888c868a8a611255565b9050611912828d8d8a856120ba565b8a14925050509998505050505050505050565b60017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f0381565b6119546124ed565b600083836040516020018083600260200280838360005b8381101561198657808201518184015260208101905061196b565b50505050905001828152602001925050506040516020818303038152906040528051906020012090506119dd7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8260019004611bc8565b8260006002811015156119ec57fe5b6020020181815250505b600115611b3757611a647ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f836000600281101515611a3057fe5b6020020151604051602001808281526020019150506040516020818303038152906040528051906020012060019004611bc8565b826000600281101515611a7357fe5b602002018181525050611aa0611a9b836000600281101515611a9157fe5b602002015161221b565b61200c565b826001600281101515611aaf57fe5b602002018181525050611ad4826000600281101515611aca57fe5b602002015161221b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f801515611afe57fe5b836001600281101515611b0d57fe5b6020020151846001600281101515611b2157fe5b6020020151091415611b3257611b37565b6119f6565b60006002836000600281101515611b4a57fe5b60200201518560405160200180838152602001828152602001925050506040516020818303038152906040528051906020012060019004811515611b8a57fe5b061415611bc157816001600281101515611ba057fe5b6020020151600003826001600281101515611bb757fe5b6020020181815250505b5092915050565b60008190505b8281101515611c0957806040516020018082815260200191505060405160208183030381529060405280519060200120600190049050611bce565b92915050565b602081565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f81565b7401ffffffffffffffffffffffffffffffffffffffff81565b6000807ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141801515611c7e57fe5b856000600281101515611c8d57fe5b6020020151850960010290506000806002876001600281101515611cad57fe5b6020020151811515611cbb57fe5b061415611cc957601b611ccc565b601c5b90507401ffffffffffffffffffffffffffffffffffffffff846040516020018082600260200280838360005b83811015611d13578082015181840152602081019050611cf8565b5050505090500191505060405160208183030381529060405280519060200120600190041673ffffffffffffffffffffffffffffffffffffffff166001600060010283896000600281101515611d6557fe5b60200201516001028660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611dc5573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b6000611ee08b6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508b6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508b8b8b8b8b6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508b6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508b611830565b8015611f205750818a6040516020018082600260200280828437808301925050509150506040516020818303038152906040528051906020012060019004145b90509a9950505050505050505050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f801515611f5d57fe5b8387097ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f801515611f8a57fe5b858709809250819350505094509492505050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f801515611fcb57fe5b8487097ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f801515611ff857fe5b848709809250819350505094509492505050565b600061206882600260017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f01908060020a82049150507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f611551565b9050919050565b7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414181565b60017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f0381565b60008086868685876040516020018086600260200280838360005b838110156120f05780820151818401526020810190506120d5565b5050505090500185600260200280838360005b8381101561211e578082015181840152602081019050612103565b5050505090500184600260200280838360005b8381101561214c578082015181840152602081019050612131565b5050505090500183600260200280838360005b8381101561217a57808201518184015260208101905061215f565b505050509050018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019550505050505060405160208183030381529060405280519060200120905061220f7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418260019004611bc8565b91505095945050505050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f600761226c8460037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f611551565b0181151561227657fe5b069050919050565b600060608260405160200180826002602002808284378083019250505091505060405160208183030381529060405290507401ffffffffffffffffffffffffffffffffffffffff81805190602001206001900416915050919050565b600260017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f01908060020a820491505081565b60008060008060006001809150915060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561234857fe5b897ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038808905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561239b57fe5b8b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038a08905060006123d083838585611f9e565b80925081995050506123e488828e8861145d565b80925081995050506123f888828c8761145d565b8092508199505050600061240e8d878b8561145d565b809250819950505061242288828686611f9e565b809250819950505061243688828e8961145d565b809250819950505080821415156124d9577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561247157fe5b818a0998507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8015156124a057fe5b82890997507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8015156124cf57fe5b81830996506124dd565b8196505b5050505050509450945094915050565b6040805190810160405280600290602082028038833980820191505090505090565b60c060405190810160405280600690602082028038833980820191505090505090565b60206040519081016040528060019060208202803883398082019150509050509056fea165627a7a72305820011337c3df56ea6d75db01917566e066319c5adf9c2e1d85b2ab4cceecc522440029",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2581 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x149 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x42DF788 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x19880E61 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x321EDA15 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x329A001B EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x340128B6 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x37321D04 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x3848D209 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x3C71F00A EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0x3C9E1489 EQ PUSH2 0x7A1 JUMPI DUP1 PUSH4 0x3EA3075E EQ PUSH2 0x859 JUMPI DUP1 PUSH4 0x40CEF14B EQ PUSH2 0x8B2 JUMPI DUP1 PUSH4 0x414A37BA EQ PUSH2 0x8DD JUMPI DUP1 PUSH4 0x42E5338B EQ PUSH2 0x908 JUMPI DUP1 PUSH4 0x581E7B52 EQ PUSH2 0x933 JUMPI DUP1 PUSH4 0x5AD17FCD EQ PUSH2 0xA08 JUMPI DUP1 PUSH4 0x6365CC77 EQ PUSH2 0xACC JUMPI DUP1 PUSH4 0x6BFE3EFE EQ PUSH2 0xB40 JUMPI DUP1 PUSH4 0x7B019F89 EQ PUSH2 0xBB4 JUMPI DUP1 PUSH4 0x8E692FA1 EQ PUSH2 0xC03 JUMPI DUP1 PUSH4 0x94F0FC6F EQ PUSH2 0xC2E JUMPI DUP1 PUSH4 0xACA9A909 EQ PUSH2 0xC59 JUMPI DUP1 PUSH4 0xAD6DF90A EQ PUSH2 0xDC3 JUMPI DUP1 PUSH4 0xCB3A1234 EQ PUSH2 0xE12 JUMPI DUP1 PUSH4 0xE2AB3B55 EQ PUSH2 0xE8D JUMPI DUP1 PUSH4 0xF1B3A57C EQ PUSH2 0xEB8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x160 DUP2 LT ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3E2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x50A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5CD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5B2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x75C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1A0 DUP2 LT ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78B PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x194C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x846 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x82B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x89C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x87C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C7 PUSH2 0x1C0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F2 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91D PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9EE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1C0 DUP2 LT ISZERO PUSH2 0xA2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB23 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB97 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xB63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x200C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC18 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC43 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDAD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x120 DUP2 LT ISZERO PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDFC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x227E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA2 PUSH2 0x22DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xEDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x230D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xFD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x626164207769746E657373000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 ISZERO ISZERO PUSH2 0x1005 JUMPI INVALID JUMPDEST DUP5 DUP7 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1015 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SUB PUSH1 0x1 MUL SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP8 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1056 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 ISZERO ISZERO PUSH2 0x1064 JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x1071 JUMPI PUSH1 0x1C PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 ISZERO ISZERO PUSH2 0x10A2 JUMPI INVALID JUMPDEST DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x10B1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 MULMOD PUSH1 0x1 MUL SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP5 DUP5 DUP11 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x10D2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 MUL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1132 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x11AA JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x11DB JUMPI INVALID JUMPDEST DUP7 DUP9 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x120C JUMPI INVALID JUMPDEST DUP7 DUP10 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x123D JUMPI INVALID JUMPDEST DUP4 DUP6 ADDMOD SWAP1 POP DUP1 DUP3 SWAP6 POP SWAP6 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x125D PUSH2 0x24ED JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x126C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1280 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD EQ ISZERO ISZERO ISZERO PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F696E7473206D7573742064696666657220696E2073756D00000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1306 DUP8 DUP10 DUP9 PUSH2 0x1C51 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4669727374206D756C7469706C69636174696F6E20636865636B206661696C65 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13AB DUP5 DUP7 DUP6 PUSH2 0x1C51 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1445 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5365636F6E64206D756C7469706C69636174696F6E20636865636B206661696C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1450 DUP7 DUP5 DUP5 PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x148C JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x14BD JUMPI INVALID JUMPDEST DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x150E JUMPI INVALID JUMPDEST DUP2 DUP4 ADDMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x153B JUMPI INVALID JUMPDEST DUP7 DUP10 MULMOD DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x155C PUSH2 0x250F JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0x0 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x156D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x1 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1587 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x2 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x15A1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 PUSH1 0x3 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x15BA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x4 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x15D3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x5 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x15EC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x15FD PUSH2 0x2532 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x5 PUSH2 0x3300 STATICCALL SWAP3 POP PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x1682 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6269674D6F64457870206661696C757265210000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 LT ISZERO ISZERO PUSH2 0x1691 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16AA PUSH2 0x24ED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1707 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x16C1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x16D5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x16E9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x16FD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x230D JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x173F JUMPI INVALID JUMPDEST DUP7 DUP4 MULMOD EQ ISZERO ISZERO PUSH2 0x17B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5F696E765A206D75737420626520696E7665727365206F66207A000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x17EC JUMPI INVALID JUMPDEST DUP8 DUP7 MULMOD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x181E JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183E DUP9 DUP12 DUP10 DUP9 PUSH2 0xF33 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x18D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C64206E6F74207665726966792074686174206164647265737328632A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x706B2B732A67656E657261746F72293D5F755769746E65737300000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18E0 PUSH2 0x24ED JUMP JUMPDEST PUSH2 0x18EA DUP12 DUP9 PUSH2 0x194C JUMP JUMPDEST SWAP1 POP PUSH2 0x18F4 PUSH2 0x24ED JUMP JUMPDEST PUSH2 0x1903 DUP11 DUP13 DUP9 DUP13 DUP7 DUP11 DUP11 PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP PUSH2 0x1912 DUP3 DUP14 DUP14 DUP11 DUP6 PUSH2 0x20BA JUMP JUMPDEST DUP11 EQ SWAP3 POP POP POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP2 JUMP JUMPDEST PUSH2 0x1954 PUSH2 0x24ED JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1986 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x196B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x19DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP3 PUSH1 0x1 SWAP1 DIV PUSH2 0x1BC8 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x19EC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1B37 JUMPI PUSH2 0x1A64 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1A30 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV PUSH2 0x1BC8 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1A73 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1AA0 PUSH2 0x1A9B DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1A91 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x221B JUMP JUMPDEST PUSH2 0x200C JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1AAF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1AD4 DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1ACA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x221B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x1AFE JUMPI INVALID JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1B0D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1B21 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD EQ ISZERO PUSH2 0x1B32 JUMPI PUSH2 0x1B37 JUMP JUMPDEST PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1B4A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV DUP2 ISZERO ISZERO PUSH2 0x1B8A JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x1BC1 JUMPI DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1BA0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x0 SUB DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1BB7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO ISZERO PUSH2 0x1C09 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV SWAP1 POP PUSH2 0x1BCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 JUMP JUMPDEST PUSH21 0x1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 ISZERO ISZERO PUSH2 0x1C7E JUMPI INVALID JUMPDEST DUP6 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1C8D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 MULMOD PUSH1 0x1 MUL SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP8 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1CAD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 ISZERO ISZERO PUSH2 0x1CBB JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x1CC9 JUMPI PUSH1 0x1B PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x1C JUMPDEST SWAP1 POP PUSH21 0x1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D13 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 MUL DUP4 DUP10 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1D65 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 MUL DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE0 DUP12 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP DUP12 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP DUP12 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP DUP12 PUSH2 0x1830 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F20 JUMPI POP DUP2 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV EQ JUMPDEST SWAP1 POP SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x1F5D JUMPI INVALID JUMPDEST DUP4 DUP8 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x1F8A JUMPI INVALID JUMPDEST DUP6 DUP8 MULMOD DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x1FCB JUMPI INVALID JUMPDEST DUP5 DUP8 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x1FF8 JUMPI INVALID JUMPDEST DUP5 DUP8 MULMOD DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2068 DUP3 PUSH1 0x2 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F ADD SWAP1 DUP1 PUSH1 0x2 EXP DUP3 DIV SWAP2 POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F PUSH2 0x1551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP6 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x211E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2103 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x214C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2131 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x217A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x215F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x220F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP3 PUSH1 0x1 SWAP1 DIV PUSH2 0x1BC8 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F PUSH1 0x7 PUSH2 0x226C DUP5 PUSH1 0x3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F PUSH2 0x1551 JUMP JUMPDEST ADD DUP2 ISZERO ISZERO PUSH2 0x2276 JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH21 0x1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F ADD SWAP1 DUP1 PUSH1 0x2 EXP DUP3 DIV SWAP2 POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x2348 JUMPI INVALID JUMPDEST DUP10 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP9 ADDMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x239B JUMPI INVALID JUMPDEST DUP12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP11 ADDMOD SWAP1 POP PUSH1 0x0 PUSH2 0x23D0 DUP4 DUP4 DUP6 DUP6 PUSH2 0x1F9E JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x23E4 DUP9 DUP3 DUP15 DUP9 PUSH2 0x145D JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x23F8 DUP9 DUP3 DUP13 DUP8 PUSH2 0x145D JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH1 0x0 PUSH2 0x240E DUP14 DUP8 DUP12 DUP6 PUSH2 0x145D JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x2422 DUP9 DUP3 DUP7 DUP7 PUSH2 0x1F9E JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x2436 DUP9 DUP3 DUP15 DUP10 PUSH2 0x145D JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP DUP1 DUP3 EQ ISZERO ISZERO PUSH2 0x24D9 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x2471 JUMPI INVALID JUMPDEST DUP2 DUP11 MULMOD SWAP9 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x24A0 JUMPI INVALID JUMPDEST DUP3 DUP10 MULMOD SWAP8 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x24CF JUMPI INVALID JUMPDEST DUP2 DUP4 MULMOD SWAP7 POP PUSH2 0x24DD JUMP JUMPDEST DUP2 SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 ADD SGT CALLDATACOPY 0xc3 0xdf JUMP 0xea PUSH14 0x75DB01917566E066319C5ADF9C2E SAR DUP6 0xb2 0xab 0x4c 0xce 0xec 0xc5 0x22 DIFFICULTY STOP 0x29 ",
				"sourceMap": "3407:15560:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3407:15560:13;;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063042df7881461014e57806319880e611461020c578063321eda1514610280578063329a001b14610410578063340128b61461048457806337321d04146104e75780633848d209146105e05780633c71f00a146107765780633c9e1489146107a15780633ea3075e1461085957806340cef14b146108b2578063414a37ba146108dd57806342e5338b14610908578063581e7b52146109335780635ad17fcd14610a085780636365cc7714610acc5780636bfe3efe14610b405780637b019f8914610bb45780638e692fa114610c0357806394f0fc6f14610c2e578063aca9a90914610c59578063ad6df90a14610dc3578063cb3a123414610e12578063e2ab3b5514610e8d578063f1b3a57c14610eb8575b600080fd5b34801561015a57600080fd5b506101f2600480360360a081101561017157600080fd5b810190808035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f33565b604051808215151515815260200191505060405180910390f35b34801561021857600080fd5b506102636004803603608081101561022f57600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035906020019092919050505061117b565b604051808381526020018281526020019250505060405180910390f35b34801561028c57600080fd5b506103d260048036036101608110156102a457600080fd5b810190808035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050611255565b6040518082600260200280838360005b838110156103fd5780820151818401526020810190506103e2565b5050505090500191505060405180910390f35b34801561041c57600080fd5b506104676004803603608081101561043357600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035906020019092919050505061145d565b604051808381526020018281526020019250505060405180910390f35b34801561049057600080fd5b506104d1600480360360608110156104a757600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611551565b6040518082815260200191505060405180910390f35b3480156104f357600080fd5b506105a2600480360360a081101561050a57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290803590602001909291905050506116a2565b6040518082600260200280838360005b838110156105cd5780820151818401526020810190506105b2565b5050505090500191505060405180910390f35b3480156105ec57600080fd5b5061075c60048036036101a081101561060457600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050611830565b604051808215151515815260200191505060405180910390f35b34801561078257600080fd5b5061078b611925565b6040518082815260200191505060405180910390f35b3480156107ad57600080fd5b5061081b600480360360608110156107c457600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919050505061194c565b6040518082600260200280838360005b8381101561084657808201518184015260208101905061082b565b5050505090500191505060405180910390f35b34801561086557600080fd5b5061089c6004803603604081101561087c57600080fd5b810190808035906020019092919080359060200190929190505050611bc8565b6040518082815260200191505060405180910390f35b3480156108be57600080fd5b506108c7611c0f565b6040518082815260200191505060405180910390f35b3480156108e957600080fd5b506108f2611c14565b6040518082815260200191505060405180910390f35b34801561091457600080fd5b5061091d611c38565b6040518082815260200191505060405180910390f35b34801561093f57600080fd5b506109ee600480360360a081101561095657600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611c51565b604051808215151515815260200191505060405180910390f35b348015610a1457600080fd5b50610ab260048036036101c0811015610a2c57600080fd5b810190808060400190919291929080604001909192919290803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080604001909192919290806040019091929192908035906020019092919080359060200190929190505050611df1565b604051808215151515815260200191505060405180910390f35b348015610ad857600080fd5b50610b2360048036036080811015610aef57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611f30565b604051808381526020018281526020019250505060405180910390f35b348015610b4c57600080fd5b50610b9760048036036080811015610b6357600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611f9e565b604051808381526020018281526020019250505060405180910390f35b348015610bc057600080fd5b50610bed60048036036020811015610bd757600080fd5b810190808035906020019092919050505061200c565b6040518082815260200191505060405180910390f35b348015610c0f57600080fd5b50610c1861206f565b6040518082815260200191505060405180910390f35b348015610c3a57600080fd5b50610c43612093565b6040518082815260200191505060405180910390f35b348015610c6557600080fd5b50610dad6004803603610120811015610c7d57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506120ba565b6040518082815260200191505060405180910390f35b348015610dcf57600080fd5b50610dfc60048036036020811015610de657600080fd5b810190808035906020019092919050505061221b565b6040518082815260200191505060405180910390f35b348015610e1e57600080fd5b50610e4b60048036036040811015610e3557600080fd5b810190808060400190919291929050505061227e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e9957600080fd5b50610ea26122da565b6040518082815260200191505060405180910390f35b348015610ec457600080fd5b50610f0f60048036036080811015610edb57600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035906020019092919050505061230d565b60405180848152602001838152602001828152602001935050505060405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610fd9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f626164207769746e65737300000000000000000000000000000000000000000081525060200191505060405180910390fd5b60007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414180151561100557fe5b8486600060028110151561101557fe5b6020020151097ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141036001029050600080600287600160028110151561105657fe5b602002015181151561106457fe5b061461107157601c611074565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418015156110a257fe5b8760006002811015156110b157fe5b6020020151890960010290506000600184848a60006002811015156110d257fe5b60200201516001028560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611132573d6000803e3d6000fd5b5050506020604051035190508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614945050505050949350505050565b60008060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8015156111aa57fe5b878509905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8015156111db57fe5b868809905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561120c57fe5b868909905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561123d57fe5b83850890508082955095505050505094509492505050565b61125d6124ed565b82600060028110151561126c57fe5b602002015186600060028110151561128057fe5b6020020151141515156112fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f706f696e7473206d7573742064696666657220696e2073756d0000000000000081525060200191505060405180910390fd5b611306878988611c51565b15156113a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4669727374206d756c7469706c69636174696f6e20636865636b206661696c6581526020017f640000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6113ab848685611c51565b1515611445576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f5365636f6e64206d756c7469706c69636174696f6e20636865636b206661696c81526020017f656400000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6114508684846116a2565b9050979650505050505050565b60008060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561148c57fe5b878509905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8015156114bd57fe5b87877ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f030990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561150e57fe5b8183087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561153b57fe5b8689098094508195505050505094509492505050565b60008061155c61250f565b602081600060068110151561156d57fe5b602002018181525050602081600160068110151561158757fe5b60200201818152505060208160026006811015156115a157fe5b602002018181525050858160036006811015156115ba57fe5b602002018181525050848160046006811015156115d357fe5b602002018181525050838160056006811015156115ec57fe5b6020020181815250506115fd612532565b60208160c0846005613300fa92506000831415611682576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6269674d6f64457870206661696c75726521000000000000000000000000000081525060200191505060405180910390fd5b80600060018110151561169157fe5b602002015193505050509392505050565b6116aa6124ed565b60008060006117078760006002811015156116c157fe5b60200201518860016002811015156116d557fe5b60200201518860006002811015156116e957fe5b60200201518960016002811015156116fd57fe5b602002015161230d565b80935081945082955050505060017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561173f57fe5b8683091415156117b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5f696e765a206d75737420626520696e7665727365206f66207a00000000000081525060200191505060405180910390fd5b60408051908101604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8015156117ec57fe5b87860981526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561181e57fe5b87850981525093505050509392505050565b600061183e888b8988610f33565b15156118d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001807f436f756c64206e6f74207665726966792074686174206164647265737328632a81526020017f706b2b732a67656e657261746f72293d5f755769746e6573730000000000000081525060400191505060405180910390fd5b6118e06124ed565b6118ea8b8861194c565b90506118f46124ed565b6119038a8c888c868a8a611255565b9050611912828d8d8a856120ba565b8a14925050509998505050505050505050565b60017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f0381565b6119546124ed565b600083836040516020018083600260200280838360005b8381101561198657808201518184015260208101905061196b565b50505050905001828152602001925050506040516020818303038152906040528051906020012090506119dd7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8260019004611bc8565b8260006002811015156119ec57fe5b6020020181815250505b600115611b3757611a647ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f836000600281101515611a3057fe5b6020020151604051602001808281526020019150506040516020818303038152906040528051906020012060019004611bc8565b826000600281101515611a7357fe5b602002018181525050611aa0611a9b836000600281101515611a9157fe5b602002015161221b565b61200c565b826001600281101515611aaf57fe5b602002018181525050611ad4826000600281101515611aca57fe5b602002015161221b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f801515611afe57fe5b836001600281101515611b0d57fe5b6020020151846001600281101515611b2157fe5b6020020151091415611b3257611b37565b6119f6565b60006002836000600281101515611b4a57fe5b60200201518560405160200180838152602001828152602001925050506040516020818303038152906040528051906020012060019004811515611b8a57fe5b061415611bc157816001600281101515611ba057fe5b6020020151600003826001600281101515611bb757fe5b6020020181815250505b5092915050565b60008190505b8281101515611c0957806040516020018082815260200191505060405160208183030381529060405280519060200120600190049050611bce565b92915050565b602081565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f81565b7401ffffffffffffffffffffffffffffffffffffffff81565b6000807ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141801515611c7e57fe5b856000600281101515611c8d57fe5b6020020151850960010290506000806002876001600281101515611cad57fe5b6020020151811515611cbb57fe5b061415611cc957601b611ccc565b601c5b90507401ffffffffffffffffffffffffffffffffffffffff846040516020018082600260200280838360005b83811015611d13578082015181840152602081019050611cf8565b5050505090500191505060405160208183030381529060405280519060200120600190041673ffffffffffffffffffffffffffffffffffffffff166001600060010283896000600281101515611d6557fe5b60200201516001028660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611dc5573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b6000611ee08b6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508b6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508b8b8b8b8b6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508b6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508b611830565b8015611f205750818a6040516020018082600260200280828437808301925050509150506040516020818303038152906040528051906020012060019004145b90509a9950505050505050505050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f801515611f5d57fe5b8387097ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f801515611f8a57fe5b858709809250819350505094509492505050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f801515611fcb57fe5b8487097ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f801515611ff857fe5b848709809250819350505094509492505050565b600061206882600260017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f01908060020a82049150507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f611551565b9050919050565b7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414181565b60017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f0381565b60008086868685876040516020018086600260200280838360005b838110156120f05780820151818401526020810190506120d5565b5050505090500185600260200280838360005b8381101561211e578082015181840152602081019050612103565b5050505090500184600260200280838360005b8381101561214c578082015181840152602081019050612131565b5050505090500183600260200280838360005b8381101561217a57808201518184015260208101905061215f565b505050509050018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019550505050505060405160208183030381529060405280519060200120905061220f7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418260019004611bc8565b91505095945050505050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f600761226c8460037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f611551565b0181151561227657fe5b069050919050565b600060608260405160200180826002602002808284378083019250505091505060405160208183030381529060405290507401ffffffffffffffffffffffffffffffffffffffff81805190602001206001900416915050919050565b600260017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f01908060020a820491505081565b60008060008060006001809150915060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561234857fe5b897ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038808905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561239b57fe5b8b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038a08905060006123d083838585611f9e565b80925081995050506123e488828e8861145d565b80925081995050506123f888828c8761145d565b8092508199505050600061240e8d878b8561145d565b809250819950505061242288828686611f9e565b809250819950505061243688828e8961145d565b809250819950505080821415156124d9577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80151561247157fe5b818a0998507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8015156124a057fe5b82890997507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8015156124cf57fe5b81830996506124dd565b8196505b5050505050509450945094915050565b6040805190810160405280600290602082028038833980820191505090505090565b60c060405190810160405280600690602082028038833980820191505090505090565b60206040519081016040528060019060208202803883398082019150509050509056fea165627a7a72305820011337c3df56ea6d75db01917566e066319c5adf9c2e1d85b2ab4cceecc522440029",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x149 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x42DF788 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x19880E61 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x321EDA15 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x329A001B EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x340128B6 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x37321D04 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x3848D209 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x3C71F00A EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0x3C9E1489 EQ PUSH2 0x7A1 JUMPI DUP1 PUSH4 0x3EA3075E EQ PUSH2 0x859 JUMPI DUP1 PUSH4 0x40CEF14B EQ PUSH2 0x8B2 JUMPI DUP1 PUSH4 0x414A37BA EQ PUSH2 0x8DD JUMPI DUP1 PUSH4 0x42E5338B EQ PUSH2 0x908 JUMPI DUP1 PUSH4 0x581E7B52 EQ PUSH2 0x933 JUMPI DUP1 PUSH4 0x5AD17FCD EQ PUSH2 0xA08 JUMPI DUP1 PUSH4 0x6365CC77 EQ PUSH2 0xACC JUMPI DUP1 PUSH4 0x6BFE3EFE EQ PUSH2 0xB40 JUMPI DUP1 PUSH4 0x7B019F89 EQ PUSH2 0xBB4 JUMPI DUP1 PUSH4 0x8E692FA1 EQ PUSH2 0xC03 JUMPI DUP1 PUSH4 0x94F0FC6F EQ PUSH2 0xC2E JUMPI DUP1 PUSH4 0xACA9A909 EQ PUSH2 0xC59 JUMPI DUP1 PUSH4 0xAD6DF90A EQ PUSH2 0xDC3 JUMPI DUP1 PUSH4 0xCB3A1234 EQ PUSH2 0xE12 JUMPI DUP1 PUSH4 0xE2AB3B55 EQ PUSH2 0xE8D JUMPI DUP1 PUSH4 0xF1B3A57C EQ PUSH2 0xEB8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x160 DUP2 LT ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3E2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x50A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5CD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5B2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x75C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1A0 DUP2 LT ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78B PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x194C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x846 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x82B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x89C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x87C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C7 PUSH2 0x1C0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F2 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91D PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9EE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1C0 DUP2 LT ISZERO PUSH2 0xA2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB23 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB97 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xB63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x200C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC18 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC43 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDAD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x120 DUP2 LT ISZERO PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDFC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x227E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA2 PUSH2 0x22DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xEDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x230D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xFD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x626164207769746E657373000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 ISZERO ISZERO PUSH2 0x1005 JUMPI INVALID JUMPDEST DUP5 DUP7 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1015 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SUB PUSH1 0x1 MUL SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP8 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1056 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 ISZERO ISZERO PUSH2 0x1064 JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x1071 JUMPI PUSH1 0x1C PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 ISZERO ISZERO PUSH2 0x10A2 JUMPI INVALID JUMPDEST DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x10B1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 MULMOD PUSH1 0x1 MUL SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP5 DUP5 DUP11 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x10D2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 MUL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1132 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x11AA JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x11DB JUMPI INVALID JUMPDEST DUP7 DUP9 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x120C JUMPI INVALID JUMPDEST DUP7 DUP10 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x123D JUMPI INVALID JUMPDEST DUP4 DUP6 ADDMOD SWAP1 POP DUP1 DUP3 SWAP6 POP SWAP6 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x125D PUSH2 0x24ED JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x126C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1280 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD EQ ISZERO ISZERO ISZERO PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F696E7473206D7573742064696666657220696E2073756D00000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1306 DUP8 DUP10 DUP9 PUSH2 0x1C51 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4669727374206D756C7469706C69636174696F6E20636865636B206661696C65 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13AB DUP5 DUP7 DUP6 PUSH2 0x1C51 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1445 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5365636F6E64206D756C7469706C69636174696F6E20636865636B206661696C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1450 DUP7 DUP5 DUP5 PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x148C JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x14BD JUMPI INVALID JUMPDEST DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x150E JUMPI INVALID JUMPDEST DUP2 DUP4 ADDMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x153B JUMPI INVALID JUMPDEST DUP7 DUP10 MULMOD DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x155C PUSH2 0x250F JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0x0 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x156D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x1 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1587 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x2 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x15A1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 PUSH1 0x3 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x15BA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x4 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x15D3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x5 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x15EC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x15FD PUSH2 0x2532 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x5 PUSH2 0x3300 STATICCALL SWAP3 POP PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x1682 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6269674D6F64457870206661696C757265210000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 LT ISZERO ISZERO PUSH2 0x1691 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16AA PUSH2 0x24ED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1707 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x16C1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x16D5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x16E9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x16FD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x230D JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x173F JUMPI INVALID JUMPDEST DUP7 DUP4 MULMOD EQ ISZERO ISZERO PUSH2 0x17B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5F696E765A206D75737420626520696E7665727365206F66207A000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x17EC JUMPI INVALID JUMPDEST DUP8 DUP7 MULMOD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x181E JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183E DUP9 DUP12 DUP10 DUP9 PUSH2 0xF33 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x18D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C64206E6F74207665726966792074686174206164647265737328632A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x706B2B732A67656E657261746F72293D5F755769746E65737300000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18E0 PUSH2 0x24ED JUMP JUMPDEST PUSH2 0x18EA DUP12 DUP9 PUSH2 0x194C JUMP JUMPDEST SWAP1 POP PUSH2 0x18F4 PUSH2 0x24ED JUMP JUMPDEST PUSH2 0x1903 DUP11 DUP13 DUP9 DUP13 DUP7 DUP11 DUP11 PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP PUSH2 0x1912 DUP3 DUP14 DUP14 DUP11 DUP6 PUSH2 0x20BA JUMP JUMPDEST DUP11 EQ SWAP3 POP POP POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP2 JUMP JUMPDEST PUSH2 0x1954 PUSH2 0x24ED JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1986 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x196B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x19DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP3 PUSH1 0x1 SWAP1 DIV PUSH2 0x1BC8 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x19EC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1B37 JUMPI PUSH2 0x1A64 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1A30 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV PUSH2 0x1BC8 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1A73 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1AA0 PUSH2 0x1A9B DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1A91 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x221B JUMP JUMPDEST PUSH2 0x200C JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1AAF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1AD4 DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1ACA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x221B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x1AFE JUMPI INVALID JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1B0D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1B21 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD EQ ISZERO PUSH2 0x1B32 JUMPI PUSH2 0x1B37 JUMP JUMPDEST PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1B4A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV DUP2 ISZERO ISZERO PUSH2 0x1B8A JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x1BC1 JUMPI DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1BA0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x0 SUB DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1BB7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO ISZERO PUSH2 0x1C09 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV SWAP1 POP PUSH2 0x1BCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 JUMP JUMPDEST PUSH21 0x1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 ISZERO ISZERO PUSH2 0x1C7E JUMPI INVALID JUMPDEST DUP6 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1C8D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 MULMOD PUSH1 0x1 MUL SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP8 PUSH1 0x1 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1CAD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 ISZERO ISZERO PUSH2 0x1CBB JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x1CC9 JUMPI PUSH1 0x1B PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x1C JUMPDEST SWAP1 POP PUSH21 0x1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D13 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 MUL DUP4 DUP10 PUSH1 0x0 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x1D65 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 MUL DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE0 DUP12 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP DUP12 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP DUP12 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP DUP12 PUSH2 0x1830 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F20 JUMPI POP DUP2 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV EQ JUMPDEST SWAP1 POP SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x1F5D JUMPI INVALID JUMPDEST DUP4 DUP8 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x1F8A JUMPI INVALID JUMPDEST DUP6 DUP8 MULMOD DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x1FCB JUMPI INVALID JUMPDEST DUP5 DUP8 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x1FF8 JUMPI INVALID JUMPDEST DUP5 DUP8 MULMOD DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2068 DUP3 PUSH1 0x2 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F ADD SWAP1 DUP1 PUSH1 0x2 EXP DUP3 DIV SWAP2 POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F PUSH2 0x1551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP6 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x211E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2103 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x214C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2131 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x217A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x215F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x220F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP3 PUSH1 0x1 SWAP1 DIV PUSH2 0x1BC8 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F PUSH1 0x7 PUSH2 0x226C DUP5 PUSH1 0x3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F PUSH2 0x1551 JUMP JUMPDEST ADD DUP2 ISZERO ISZERO PUSH2 0x2276 JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH21 0x1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x1 SWAP1 DIV AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F ADD SWAP1 DUP1 PUSH1 0x2 EXP DUP3 DIV SWAP2 POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x2348 JUMPI INVALID JUMPDEST DUP10 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP9 ADDMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x239B JUMPI INVALID JUMPDEST DUP12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP11 ADDMOD SWAP1 POP PUSH1 0x0 PUSH2 0x23D0 DUP4 DUP4 DUP6 DUP6 PUSH2 0x1F9E JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x23E4 DUP9 DUP3 DUP15 DUP9 PUSH2 0x145D JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x23F8 DUP9 DUP3 DUP13 DUP8 PUSH2 0x145D JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH1 0x0 PUSH2 0x240E DUP14 DUP8 DUP12 DUP6 PUSH2 0x145D JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x2422 DUP9 DUP3 DUP7 DUP7 PUSH2 0x1F9E JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x2436 DUP9 DUP3 DUP15 DUP10 PUSH2 0x145D JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP DUP1 DUP3 EQ ISZERO ISZERO PUSH2 0x24D9 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x2471 JUMPI INVALID JUMPDEST DUP2 DUP11 MULMOD SWAP9 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x24A0 JUMPI INVALID JUMPDEST DUP3 DUP10 MULMOD SWAP8 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 ISZERO ISZERO PUSH2 0x24CF JUMPI INVALID JUMPDEST DUP2 DUP4 MULMOD SWAP7 POP PUSH2 0x24DD JUMP JUMPDEST DUP2 SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 ADD SGT CALLDATACOPY 0xc3 0xdf JUMP 0xea PUSH14 0x75DB01917566E066319C5ADF9C2E SAR DUP6 0xb2 0xab 0x4c 0xce 0xec 0xc5 0x22 DIFFICULTY STOP 0x29 ",
				"sourceMap": "3407:15560:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13913:1041;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13913:1041:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;13913:1041:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;13913:1041:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8402:427;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8402:427:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8402:427:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14975:532;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14975:532:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;14975:532:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14975:532:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14975:532:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14975:532:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14975:532:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14975:532:13;;;;;;;;;;;;;;;;8919:316;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8919:316:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8919:316:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4541:1076;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4541:1076:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4541:1076:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13316:518;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13316:518:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;13316:518:13;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;13316:518:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;13316:518:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13316:518:13;;;;;;;;;;;;;;;;16120:775;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16120:775:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;16120:775:13;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16120:775:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16120:775:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16120:775:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16120:775:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4033:50;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4033:50:13;;;;;;;;;;;;;;;;;;;;;;;6308:650;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6308:650:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6308:650:13;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6308:650:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6308:650:13;;;;;;;;;;;;;;;;6092:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6092:169:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6092:169:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4375:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4375:48:13;;;;;;;;;;;;;;;;;;;;;;;3823:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3823:151:13;;;;;;;;;;;;;;;;;;;;;;;6997:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6997:52:13;;;;;;;;;;;;;;;;;;;;;;;7530:782;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7530:782:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7530:782:13;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7530:782:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7530:782:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18501:464;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18501:464:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;18501:464:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9610:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9610:203:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9610:203:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9321:201;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9321:201:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9321:201:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5687:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5687:115:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5687:115:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3492:185;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3492:185:13;;;;;;;;;;;;;;;;;;;;;;;4087:67;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4087:67:13;;;;;;;;;;;;;;;;;;;;;;;15589:318;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15589:318:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;15589:318:13;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15589:318:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15589:318:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15589:318:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15589:318:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5806:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5806:163:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5806:163:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7111:274;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7111:274:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7111:274:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4312:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4312:58:13;;;;;;;;;;;;;;;;;;;;;;;11174:1968;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11174:1968:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;11174:1968:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13913:1041;14051:4;14175:1;14154:23;;:9;:23;;;;14146:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14561:18;3611:66;14604:28;;;;;;;14617:1;14611;14613;14611:4;;;;;;;;;;;;;14604:28;3611:66;14590:42;14582:51;;14561:72;;14722:7;14745:1;14740;14733;14735;14733:4;;;;;;;;;;;;;:8;;;;;;;;:13;14732:25;;14755:2;14732:25;;;14750:2;14732:25;14722:35;;14765:23;3611:66;14799:28;;;;;;;14809:1;14811;14809:4;;;;;;;;;;;;;14806:1;14799:28;14791:37;;14765:63;;14836:16;14855:56;14865:10;14877:1;14888;14890;14888:4;;;;;;;;;;;;;14880:13;;14895:15;14855:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14855:56:13;;;;;;;;14836:75;;14938:9;14926:21;;:8;:21;;;14919:28;;;;;;13913:1041;;;;;;:::o;8402:427::-;8499:10;8511;8531:27;3908:66;8561:26;;;;;;;8572:2;8568;8561:26;8531:56;;8595:27;3908:66;8625:26;;;;;;;8636:2;8632;8625:26;8595:56;;8659:13;3908:66;8675:26;;;;;;;8686:2;8682;8675:26;8659:42;;8709:17;3908:66;8729:60;;;;;;;8757:19;8736;8729:60;8709:80;;8805:9;8816:5;8797:25;;;;;;;;8402:427;;;;;;;:::o;14975:532::-;15180:17;;:::i;:::-;15232:10;15243:1;15232:13;;;;;;;;;;;;;15215:10;15226:1;15215:13;;;;;;;;;;;;;:30;;15207:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15291:30;15303:2;15307:1;15310:10;15291:11;:30::i;:::-;15283:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15375:30;15387:2;15391:1;15394:10;15375:11;:30::i;:::-;15367:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15459:41;15471:10;15483;15495:4;15459:11;:41::i;:::-;15452:48;;14975:532;;;;;;;;;:::o;8919:316::-;9014:10;9026;9046:12;3908:66;9061:26;;;;;;;9072:2;9068;9061:26;9046:41;;9095:12;3908:66;9110:39;;;;;;;9134:2;9130;3908:66;9117:15;9110:39;9095:54;;3908:66;9169:30;;;;;;;9182:4;9176;9169:30;3908:66;9201:26;;;;;;;9212:2;9208;9201:26;9157:71;;;;;;;;8919:316;;;;;;;;;:::o;4541:1076::-;4634:22;4666:18;4692:41;;:::i;:::-;4419:4;4741:23;4765:1;4741:26;;;;;;;;;;;;:46;;;;;4419:4;4814:23;4838:1;4814:26;;;;;;;;;;;;:46;;;;;4419:4;4891:23;4915:1;4891:26;;;;;;;;;;;;:46;;;;;4996:4;4967:23;4991:1;4967:26;;;;;;;;;;;;:33;;;;;5037:8;5008:23;5032:1;5008:26;;;;;;;;;;;;:37;;;;;5082:7;5053:23;5077:1;5053:26;;;;;;;;;;;;:36;;;;;5097:24;;:::i;:::-;5467:4;5449:6;5386:4;5351:23;5285:4;5222:5;5211:261;5189:283;;5553:1;5539:10;:15;5535:52;;;5557:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5535:52;5601:6;5608:1;5601:9;;;;;;;;;;;;;5594:16;;;;;4541:1076;;;;;:::o;13316:518::-;13425:17;;:::i;:::-;13450:9;13465;13480;13507:43;13523:2;13526:1;13523:5;;;;;;;;;;;;;13530:2;13533:1;13530:5;;;;;;;;;;;;;13537:2;13540:1;13537:5;;;;;;;;;;;;;13544:2;13547:1;13544:5;;;;;;;;;;;;;13507:15;:43::i;:::-;13495:55;;;;;;;;;;;;13595:1;3908:66;13564:27;;;;;;;13574:4;13571:1;13564:27;:32;13556:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13764:65;;;;;;;;;3908:66;13772:27;;;;;;;13782:4;13779:1;13772:27;13764:65;;;;3908:66;13801:27;;;;;;;13811:4;13808:1;13801:27;13764:65;;;;;;;;13316:518;;;;;:::o;16120:775::-;16362:4;16531:56;16568:1;16571:2;16575:1;16578:8;16531:36;:56::i;:::-;16514:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16665:22;;:::i;:::-;16690:21;16702:2;16706:4;16690:11;:21::i;:::-;16665:46;;16719:19;;:::i;:::-;16741:80;16768:1;16771:5;16778:13;16793:1;16796:4;16802:12;16816:4;16741:17;:80::i;:::-;16719:102;;16842:45;16858:4;16864:2;16868:5;16875:8;16885:1;16842:15;:45::i;:::-;16837:1;:50;16829:59;;;;16120:775;;;;;;;;;;;:::o;4033:50::-;4082:1;3908:66;4069:14;4033:50;:::o;6308:650::-;6390:20;;:::i;:::-;6420:12;6462:1;6465:5;6445:26;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6445:26:13;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6445:26:13;;;6435:37;;;;;;6420:52;;6488:33;3908:66;6515:4;6507:13;;;6488:6;:33::i;:::-;6480:2;6483:1;6480:5;;;;;;;;;;;;:41;;;;;6529:242;6536:4;6529:242;;;6560:63;3908:66;6614:2;6617:1;6614:5;;;;;;;;;;;;;6597:23;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6597:23:13;;;6587:34;;;;;;6579:43;;;6560:6;:63::i;:::-;6552:2;6555:1;6552:5;;;;;;;;;;;;:71;;;;;6641:27;6652:15;6661:2;6664:1;6661:5;;;;;;;;;;;;;6652:8;:15::i;:::-;6641:10;:27::i;:::-;6633:2;6636:1;6633:5;;;;;;;;;;;;:35;;;;;6718:15;6727:2;6730:1;6727:5;;;;;;;;;;;;;6718:8;:15::i;:::-;3908:66;6682:32;;;;;;;6696:2;6699:1;6696:5;;;;;;;;;;;;;6689:2;6692:1;6689:5;;;;;;;;;;;;;6682:32;:51;6678:85;;;6747:5;;6678:85;6529:242;;;6916:1;6911;6893:2;6896:1;6893:5;;;;;;;;;;;;;6900;6876:30;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6876:30:13;;;6866:41;;;;;;6858:50;;;:54;;;;;;;;:59;6854:98;;;6938:2;6941:1;6938:5;;;;;;;;;;;;;6937:6;;6929:2;6932:1;6929:5;;;;;;;;;;;;:14;;;;;6854:98;6308:650;;;;;:::o;6092:169::-;6151:10;6174:1;6169:6;;6181:76;6194:1;6188:2;:7;;6181:76;;;6245:2;6228:20;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6228:20:13;;;6218:31;;;;;;6210:40;;;6205:45;;6181:76;;;6092:169;;;;:::o;4375:48::-;4419:4;4375:48;:::o;3823:151::-;3908:66;3823:151;:::o;6997:52::-;7039:10;6997:52;:::o;7530:782::-;7633:4;8051:16;3611:66;8078:33;;;;;;;8093:1;8095;8093:4;;;;;;;;;;;;;8085:6;8078:33;8070:42;;8051:61;;8120:12;8147:1;8142;8135;8137;8135:4;;;;;;;;;;;;;:8;;;;;;;;:13;;:23;;8156:2;8135:23;;;8151:2;8135:23;8120:38;;7039:10;8282:1;8265:19;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8265:19:13;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8265:19:13;;;8255:30;;;;;;8247:39;;;:57;8173:132;;:54;8191:1;8183:10;;8195:6;8211:1;8213;8211:4;;;;;;;;;;;;;8203:13;;8218:8;8173:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8173:54:13;;;;;;;;:132;;;8166:139;;;;7530:782;;;;;:::o;18501:464::-;18771:4;18792:99;18816:2;18792:99;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;18792:99:13;;;;;18820:5;18792:99;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;18792:99:13;;;;;18827:1;18830;18833:4;18839:8;18849:13;18792:99;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;18792:99:13;;;;;18864:12;18792:99;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;18792:99:13;;;;;18886:4;18792:14;:99::i;:::-;:166;;;;;18951:6;18939:5;18922:23;;;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;18922:23:13;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;18922:23:13;;;18912:34;;;;;;18904:43;;;:53;18792:166;18785:173;;18501:464;;;;;;;;;;;;:::o;9610:203::-;9707:10;9719;3908:66;9751:26;;;;;;;9762:2;9758;9751:26;3908:66;9779:26;;;;;;;9790:2;9786;9779:26;9739:67;;;;;;;;9610:203;;;;;;;:::o;9321:201::-;9416:10;9428;3908:66;9460:26;;;;;;;9471:2;9467;9460:26;3908:66;9488:26;;;;;;;9499:2;9495;9488:26;9448:67;;;;;;;;9321:201;;;;;;;:::o;5687:115::-;5739:7;5761:36;5771:1;4369;4363;3908:66;4350:14;4349:21;52:12:-1;49:1;45:20;29:14;25:41;7:59;;4349:21:13;3908:66;5761:9;:36::i;:::-;5754:43;;5687:115;;;:::o;3492:185::-;3611:66;3492:185;:::o;4087:67::-;4153:1;3908:66;4140:14;4087:67;:::o;15589:318::-;15758:9;15777:13;15820:4;15826:2;15830:5;15837:1;15840:8;15803:46;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15803:46:13;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15803:46:13;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15803:46:13;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15803:46:13;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15803:46:13;;;15793:57;;;;;;15777:73;;15865:35;3611:66;15893:5;15885:14;;;15865:6;:35::i;:::-;15858:42;;;15589:318;;;;;;;:::o;5806:163::-;5856:7;3908:66;5949:1;5919:27;5929:1;5932;3908:66;5919:9;:27::i;:::-;:31;5918:46;;;;;;;;5911:53;;5806:163;;;:::o;7111:274::-;7182:7;7197:24;7241:5;7224:23;;;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;7224:23:13;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7224:23:13;;;7197:50;;7039:10;7348:11;7338:22;;;;;;7330:31;;;:49;7315:65;;;7111:274;;;:::o;4312:58::-;4369:1;4363;3908:66;4350:14;4349:21;52:12:-1;49:1;45:20;29:14;25:41;7:59;;4349:21:13;4312:58;:::o;11174:1968::-;11271:10;11283;11295;11998;12010;12025:1;12028;11997:33;;;;12113:10;3908:66;12126:39;;;;;;;12150:2;3908:66;12137:15;12133:2;12126:39;12113:52;;12173:10;3908:66;12186:39;;;;;;;12210:2;3908:66;12197:15;12193:2;12186:39;12173:52;;12240:10;12354:29;12368:2;12372;12376;12380;12354:13;:29::i;:::-;12343:40;;;;;;;;12425:29;12439:2;12443;12447;12451;12425:13;:29::i;:::-;12414:40;;;;;;;;12499:29;12513:2;12517;12521;12525;12499:13;:29::i;:::-;12488:40;;;;;;;;12572:10;12688:29;12702:2;12706;12710;12714;12688:13;:29::i;:::-;12677:40;;;;;;;;12745:29;12759:2;12763;12767;12771;12745:13;:29::i;:::-;12734:40;;;;;;;;12821:29;12835:2;12839;12843;12847;12821:13;:29::i;:::-;12810:40;;;;;;;;12906:2;12900;:8;;12896:240;;;3908:66;12987:26;;;;;;;12998:2;12994;12987:26;12982:31;;3908:66;13028:26;;;;;;;13039:2;13035;13028:26;13023:31;;3908:66;13069:26;;;;;;;13080:2;13076;13069:26;13064:31;;12896:240;;;13125:2;13120:7;;12896:240;11174:1968;;;;;;;;;;;;;;:::o;3407:15560::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3407:15560:13;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3407:15560:13;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3407:15560:13;;;;:::o"
			},
			"methodIdentifiers": {
				"BOTTOM_160_BITS()": "42e5338b",
				"FIELD_SIZE()": "414a37ba",
				"GROUP_ORDER()": "8e692fa1",
				"MINUS_ONE()": "3c71f00a",
				"MULTIPLICATIVE_GROUP_ORDER()": "94f0fc6f",
				"SQRT_POWER()": "e2ab3b55",
				"WORD_LENGTH_BYTES()": "40cef14b",
				"affineECAdd(uint256[2],uint256[2],uint256)": "37321d04",
				"bigModExp(uint256,uint256,uint256)": "340128b6",
				"ecmulVerify(uint256[2],uint256,uint256[2])": "581e7b52",
				"hashToCurve(uint256[2],uint256)": "3c9e1489",
				"isValidVRFOutput(uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256,uint256)": "5ad17fcd",
				"linearCombination(uint256,uint256[2],uint256[2],uint256,uint256[2],uint256[2],uint256)": "321eda15",
				"pointAddress(uint256[2])": "cb3a1234",
				"projectiveAdd(uint256,uint256,uint256,uint256)": "19880e61",
				"projectiveDiv(uint256,uint256,uint256,uint256)": "6365cc77",
				"projectiveECAdd(uint256,uint256,uint256,uint256)": "f1b3a57c",
				"projectiveMul(uint256,uint256,uint256,uint256)": "6bfe3efe",
				"projectiveSub(uint256,uint256,uint256,uint256)": "329a001b",
				"scalarFromCurve(uint256[2],uint256[2],uint256[2],address,uint256[2])": "aca9a909",
				"squareRoot(uint256)": "7b019f89",
				"verifyLinearCombinationWithGenerator(uint256,uint256[2],uint256,address)": "042df788",
				"verifyVRFProof(uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256)": "3848d209",
				"ySquared(uint256)": "ad6df90a",
				"zqHash(uint256,uint256)": "3ea3075e"
			}
		},
		"metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"c\",\"type\":\"uint256\"},{\"name\":\"p\",\"type\":\"uint256[2]\"},{\"name\":\"s\",\"type\":\"uint256\"},{\"name\":\"lcWitness\",\"type\":\"address\"}],\"name\":\"verifyLinearCombinationWithGenerator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x1\",\"type\":\"uint256\"},{\"name\":\"z1\",\"type\":\"uint256\"},{\"name\":\"x2\",\"type\":\"uint256\"},{\"name\":\"z2\",\"type\":\"uint256\"}],\"name\":\"projectiveAdd\",\"outputs\":[{\"name\":\"x3\",\"type\":\"uint256\"},{\"name\":\"z3\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"c\",\"type\":\"uint256\"},{\"name\":\"p1\",\"type\":\"uint256[2]\"},{\"name\":\"cp1Witness\",\"type\":\"uint256[2]\"},{\"name\":\"s\",\"type\":\"uint256\"},{\"name\":\"p2\",\"type\":\"uint256[2]\"},{\"name\":\"sp2Witness\",\"type\":\"uint256[2]\"},{\"name\":\"zInv\",\"type\":\"uint256\"}],\"name\":\"linearCombination\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[2]\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x1\",\"type\":\"uint256\"},{\"name\":\"z1\",\"type\":\"uint256\"},{\"name\":\"x2\",\"type\":\"uint256\"},{\"name\":\"z2\",\"type\":\"uint256\"}],\"name\":\"projectiveSub\",\"outputs\":[{\"name\":\"x3\",\"type\":\"uint256\"},{\"name\":\"z3\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"base\",\"type\":\"uint256\"},{\"name\":\"exponent\",\"type\":\"uint256\"},{\"name\":\"modulus\",\"type\":\"uint256\"}],\"name\":\"bigModExp\",\"outputs\":[{\"name\":\"exponentiation\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"p1\",\"type\":\"uint256[2]\"},{\"name\":\"p2\",\"type\":\"uint256[2]\"},{\"name\":\"invZ\",\"type\":\"uint256\"}],\"name\":\"affineECAdd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[2]\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pk\",\"type\":\"uint256[2]\"},{\"name\":\"gamma\",\"type\":\"uint256[2]\"},{\"name\":\"c\",\"type\":\"uint256\"},{\"name\":\"s\",\"type\":\"uint256\"},{\"name\":\"seed\",\"type\":\"uint256\"},{\"name\":\"uWitness\",\"type\":\"address\"},{\"name\":\"cGammaWitness\",\"type\":\"uint256[2]\"},{\"name\":\"sHashWitness\",\"type\":\"uint256[2]\"},{\"name\":\"zInv\",\"type\":\"uint256\"}],\"name\":\"verifyVRFProof\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINUS_ONE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"k\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256\"}],\"name\":\"hashToCurve\",\"outputs\":[{\"name\":\"rv\",\"type\":\"uint256[2]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"q\",\"type\":\"uint256\"},{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"zqHash\",\"outputs\":[{\"name\":\"x_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WORD_LENGTH_BYTES\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BOTTOM_160_BITS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256[2]\"},{\"name\":\"scalar\",\"type\":\"uint256\"},{\"name\":\"q\",\"type\":\"uint256[2]\"}],\"name\":\"ecmulVerify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pk\",\"type\":\"uint256[2]\"},{\"name\":\"gamma\",\"type\":\"uint256[2]\"},{\"name\":\"c\",\"type\":\"uint256\"},{\"name\":\"s\",\"type\":\"uint256\"},{\"name\":\"seed\",\"type\":\"uint256\"},{\"name\":\"uWitness\",\"type\":\"address\"},{\"name\":\"cGammaWitness\",\"type\":\"uint256[2]\"},{\"name\":\"sHashWitness\",\"type\":\"uint256[2]\"},{\"name\":\"zInv\",\"type\":\"uint256\"},{\"name\":\"output\",\"type\":\"uint256\"}],\"name\":\"isValidVRFOutput\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x1\",\"type\":\"uint256\"},{\"name\":\"z1\",\"type\":\"uint256\"},{\"name\":\"x2\",\"type\":\"uint256\"},{\"name\":\"z2\",\"type\":\"uint256\"}],\"name\":\"projectiveDiv\",\"outputs\":[{\"name\":\"x3\",\"type\":\"uint256\"},{\"name\":\"z3\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x1\",\"type\":\"uint256\"},{\"name\":\"z1\",\"type\":\"uint256\"},{\"name\":\"x2\",\"type\":\"uint256\"},{\"name\":\"z2\",\"type\":\"uint256\"}],\"name\":\"projectiveMul\",\"outputs\":[{\"name\":\"x3\",\"type\":\"uint256\"},{\"name\":\"z3\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"squareRoot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GROUP_ORDER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MULTIPLICATIVE_GROUP_ORDER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"uint256[2]\"},{\"name\":\"pk\",\"type\":\"uint256[2]\"},{\"name\":\"gamma\",\"type\":\"uint256[2]\"},{\"name\":\"uWitness\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint256[2]\"}],\"name\":\"scalarFromCurve\",\"outputs\":[{\"name\":\"s\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"ySquared\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"point\",\"type\":\"uint256[2]\"}],\"name\":\"pointAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SQRT_POWER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x1\",\"type\":\"uint256\"},{\"name\":\"y1\",\"type\":\"uint256\"},{\"name\":\"x2\",\"type\":\"uint256\"},{\"name\":\"y2\",\"type\":\"uint256\"}],\"name\":\"projectiveECAdd\",\"outputs\":[{\"name\":\"x3\",\"type\":\"uint256\"},{\"name\":\"y3\",\"type\":\"uint256\"},{\"name\":\"z3\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomness to Vera the verifier in such a way that Vera can be sure he's not making his output up to suit himself. Reggie provides Vera a public key to which he knows the secret key. Each time Vera provides a seed to Reggie, he gives back a value which is computed completely deterministically from the seed and the secret key, but which is indistinguishable from randomness to Vera. Nonetheless, Vera is able to verify that Reggie's output came from her seed and his secret key.The purpose of this contract is to perform that verification.****************************************************************************USAGEThe main entry point is isValidVRFOutput. See its docstring. Design notes ------------ An elliptic curve point is generally represented in the solidity code as a uint256[2], corresponding to its affine coordinates in GF(fieldSize). For the sake of efficiency, this implementation deviates from the spec in some minor ways: - Keccak hash rather than SHA256. This is because it's provided natively by the EVM, and therefore costs much less gas. The impact on security should be minor. - Secp256k1 curve instead of P-256. It abuses ECRECOVER for the most expensive ECC arithmetic. - scalarFromCurve recursively hashes and takes the relevant hash bits until it finds a point less than the group order. This results in uniform sampling over the the possible values scalarFromCurve could take. The spec recommends just uing the first hash output as a uint256, which is a slightly biased sample. See the zqHash function. - hashToCurve recursively hashes until it finds a curve x-ordinate. The spec recommends that the initial input should be concatenated with a nonce and then hashed, and this input should be rehashed with the nonce updated until an x-ordinate is found. Recursive hashing is slightly more efficient. The spec also recommends (https://tools.ietf.org/html/rfc8032#section-5.1.3 , by the specification of RS2ECP) that the x-ordinate should be rejected if it is greater than the modulus. - In the calculation of the challenge value \\\"c\\\", the \\\"u\\\" value (or \\\"k*g\\\", if you know the secret nonce) The spec also requires the y ordinate of the hashToCurve to be negated if y is odd. See http://www.secg.org/sec1-v2.pdf#page=17 . This sacrifices one bit of entropy in the random output. Instead, here y is chosen based on whether an extra hash of the inputs is even or odd. \",\"methods\":{\"isValidVRFOutput(uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256,uint256)\":{\"details\":\"See the invocation of verifyVRFProof in VRF.js, for an example.**************************************************************************Let x be the secret key associated with the public key pk\",\"params\":{\"c\":\"The challenge value for proof that gamma = x*hashToCurve(seed) See the variable c on  p. 28 of https://www.cs.bu.edu/~goldbe/papers/VRF_ietf99_print.pdf\",\"cGammaWitness\":\"c*gamma on the elliptic-curve\",\"gamma\":\"Intermediate output of the VRF as an affine secp256k1 point\",\"output\":\"The actual output of the VRF.**************************************************************************\",\"pk\":\"Affine coordinates of the secp256k1 public key for this VRF\",\"s\":\"The response value for the proof. See s on p. 28\",\"sHashWitness\":\"s*hashToCurve(seed) on the elliptic-curve\",\"seed\":\"The input seed from which the VRF output is computed\",\"uWitness\":\"The ethereum address of c*pk + s*<generator>, in elliptic-curve arithmetic\",\"zInv\":\"Inverse of the third ordinate of the return value from projectiveECAdd(c*gamma, s*hashToCurve(seed)). Passed in here to save gas, because computing modular inverses is expensive in the EVM.\"},\"return\":\"True iff all the above parameters are correct\"},\"projectiveECAdd(uint256,uint256,uint256,uint256)\":{\"details\":\"Using projective coordinates avoids costly divisionsTo use this with x and y in affine coordinates, compute projectiveECAdd(x[0], x[1], 1, y[0], y[1], 1)This can be used to calculate the z which is the inverse to zInv in isValidVRFOutput. But consider using a faster re-implementation.This function assumes [x1,y1,z1],[x2,y2,z2] are valid projective coordinates of secp256k1 points. That is safe in this contract, because this method is only used by linearCombination, which checks points are on the curve via ecrecover, and ensures valid projective coordinates by passing z1=z2=1.**************************************************************************\",\"params\":{\"x1\":\"The first affine coordinate of the first summand\",\"x2\":\"The first affine coordinate of the second summand\",\"y1\":\"The second affine coordinate of the first summand\",\"y2\":\"The second affine coordinate of the second summand**************************************************************************\"},\"return\":\"[x1,y1,z1]+[x2,y2,z2] as points on secp256k1, in P\\u00b2(\\ud835\\udd3d\\u2099)\"}}},\"userdoc\":{\"methods\":{\"isValidVRFOutput(uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256,uint256)\":{\"notice\":\"**************************************************************************isValidVRFOutput returns true iff the proof can be verified as showing that output was generated as mandated.\"},\"projectiveECAdd(uint256,uint256,uint256,uint256)\":{\"notice\":\"**************************************************************************Computes elliptic-curve sum, in projective co-ordinates\"}},\"notice\":\"****************************************************************************on-chain verification of verifiable-random-function (VRF) proofs as described in https://eprint.iacr.org/2017/099.pdf (security proofs) and https://tools.ietf.org/html/draft-goldbe-vrf-01#section-5 (spec)****************************************************************************\"}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.5/dev/VRF.sol\":\"VRF\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.5/dev/VRF.sol\":{\"keccak256\":\"0xdc963e9c760544b381451ff764fda73b5a1332e747f0e35ce694448497dc30a6\",\"urls\":[\"bzzr://d2e4bf4fac2ad2f5f2bf3bfdcc5d5ec34d68bb8b20ac4c0e2ddff76e5b4b6070\"]}},\"version\":1}",
		"userdoc": {
			"methods": {
				"isValidVRFOutput(uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256,uint256)": {
					"notice": "**************************************************************************isValidVRFOutput returns true iff the proof can be verified as showing that output was generated as mandated."
				},
				"projectiveECAdd(uint256,uint256,uint256,uint256)": {
					"notice": "**************************************************************************Computes elliptic-curve sum, in projective co-ordinates"
				}
			},
			"notice": "****************************************************************************on-chain verification of verifiable-random-function (VRF) proofs as described in https://eprint.iacr.org/2017/099.pdf (security proofs) and https://tools.ietf.org/html/draft-goldbe-vrf-01#section-5 (spec)****************************************************************************"
		}
	},
	"sources": {
		"dev/VRF.sol": {
			"id": 13
		}
	},
	"sourceCodes": {
		"dev/VRF.sol": "pragma solidity 0.5.0;\n\n////////////////////////////////////////////////////////////////////////////////\n//       XXX: Do not use in production until this code has been audited.\n////////////////////////////////////////////////////////////////////////////////\n\n/** ****************************************************************************\n    @notice on-chain verification of verifiable-random-function (VRF) proofs as\n            described in https://eprint.iacr.org/2017/099.pdf (security proofs)\n            and https://tools.ietf.org/html/draft-goldbe-vrf-01#section-5 (spec)\n    ****************************************************************************\n    @dev PURPOSE\n\n    @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n         to Vera the verifier in such a way that Vera can be sure he's not\n         making his output up to suit himself. Reggie provides Vera a public key\n         to which he knows the secret key. Each time Vera provides a seed to\n         Reggie, he gives back a value which is computed completely\n         deterministically from the seed and the secret key, but which is\n         indistinguishable from randomness to Vera. Nonetheless, Vera is able to\n         verify that Reggie's output came from her seed and his secret key.\n\n    @dev The purpose of this contract is to perform that verification.\n    ****************************************************************************\n    @dev USAGE\n\n    @dev The main entry point is isValidVRFOutput. See its docstring.\n    Design notes\n    ------------\n\n    An elliptic curve point is generally represented in the solidity code as a\n    uint256[2], corresponding to its affine coordinates in GF(fieldSize).\n\n    For the sake of efficiency, this implementation deviates from the spec in\n    some minor ways:\n\n    - Keccak hash rather than SHA256. This is because it's provided natively by\n      the EVM, and therefore costs much less gas. The impact on security should\n      be minor.\n\n    - Secp256k1 curve instead of P-256. It abuses ECRECOVER for the most\n      expensive ECC arithmetic.\n\n    - scalarFromCurve recursively hashes and takes the relevant hash bits until\n      it finds a point less than the group order. This results in uniform\n      sampling over the the possible values scalarFromCurve could take. The spec\n      recommends just uing the first hash output as a uint256, which is a\n      slightly biased sample. See the zqHash function.\n\n    - hashToCurve recursively hashes until it finds a curve x-ordinate. The spec\n      recommends that the initial input should be concatenated with a nonce and\n      then hashed, and this input should be rehashed with the nonce updated\n      until an x-ordinate is found. Recursive hashing is slightly more\n      efficient. The spec also recommends\n      (https://tools.ietf.org/html/rfc8032#section-5.1.3 , by the specification\n      of RS2ECP) that the x-ordinate should be rejected if it is greater than\n      the modulus.\n\n    - In the calculation of the challenge value \"c\", the \"u\" value (or \"k*g\", if\n      you know the secret nonce)\n\n    The spec also requires the y ordinate of the hashToCurve to be negated if y\n    is odd. See http://www.secg.org/sec1-v2.pdf#page=17 . This sacrifices one\n    bit of entropy in the random output. Instead, here y is chosen based on\n    whether an extra hash of the inputs is even or odd. */\n\ncontract VRF {\n\n  // See https://en.bitcoin.it/wiki/Secp256k1 for these constants.\n  uint256 constant public GROUP_ORDER = // Number of points in Secp256k1\n    // solium-disable-next-line indentation\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;\n  // Prime characteristic of the galois field over which Secp256k1 is defined\n  // solium-disable-next-line zeppelin/no-arithmetic-operations\n  uint256 constant public FIELD_SIZE =\n    // solium-disable-next-line indentation\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;\n\n  // solium-disable zeppelin/no-arithmetic-operations\n  uint256 constant public MINUS_ONE = FIELD_SIZE - 1;\n  uint256 constant public MULTIPLICATIVE_GROUP_ORDER = FIELD_SIZE - 1;\n  // pow(x, SQRT_POWER, FIELD_SIZE) == √x, since FIELD_SIZE % 4 = 3\n  // https://en.wikipedia.org/wiki/Modular_square_root#Prime_or_prime_power_modulus\n  uint256 constant public SQRT_POWER = (FIELD_SIZE + 1) >> 2;\n\n  uint256 constant public WORD_LENGTH_BYTES = 0x20;\n\n  // (base**exponent) % modulus\n  // Cribbed from https://medium.com/@rbkhmrcr/precompiles-solidity-e5d29bd428c4\n  function bigModExp(uint256 base, uint256 exponent, uint256 modulus)\n    public view returns (uint256 exponentiation) {\n      uint256 callResult;\n      uint256[6] memory bigModExpContractInputs;\n      bigModExpContractInputs[0] = WORD_LENGTH_BYTES;  // Length of base\n      bigModExpContractInputs[1] = WORD_LENGTH_BYTES;  // Length of exponent\n      bigModExpContractInputs[2] = WORD_LENGTH_BYTES;  // Length of modulus\n      bigModExpContractInputs[3] = base;\n      bigModExpContractInputs[4] = exponent;\n      bigModExpContractInputs[5] = modulus;\n      uint256[1] memory output;\n      assembly { // solhint-disable-line no-inline-assembly\n      callResult :=\n        staticcall(13056,           // Gas cost. See EIP-198's 1st e.g.\n          0x05,                     // Bigmodexp contract address\n          bigModExpContractInputs,\n          0xc0,                     // Length of input segment\n          output,\n          0x20)                     // Length of output segment\n      }\n      if (callResult == 0) {revert(\"bigModExp failure!\");}\n      return output[0];\n    }\n\n  // Computes a s.t. a^2 = x in the field. Assumes x is a square.\n  function squareRoot(uint256 x) public view returns (uint256) {\n    return bigModExp(x, SQRT_POWER, FIELD_SIZE);\n  }\n\n  function ySquared(uint256 x) public view returns (uint256) {\n    // Curve equation is y^2=x^3+7. See\n    return (bigModExp(x, 3, FIELD_SIZE) + 7) % FIELD_SIZE;\n  }\n\n  // Hash x uniformly into {0, ..., q-1}. Expects x to ALREADY have the\n  // necessary entropy... If x < q, returns x!\n  function zqHash(uint256 q, uint256 x) public pure returns (uint256 x_) {\n    x_ = x;\n    while (x_ >= q) {\n      x_ = uint256(keccak256(abi.encodePacked(x_)));\n    }\n  }\n\n  // One-way hash function onto the curve.\n  function hashToCurve(uint256[2] memory k, uint256 input)\n    public view returns (uint256[2] memory rv) {\n      bytes32 hash = keccak256(abi.encodePacked(k, input));\n      rv[0] = zqHash(FIELD_SIZE, uint256(hash));\n      while (true) {\n        rv[0] = zqHash(FIELD_SIZE, uint256(keccak256(abi.encodePacked(rv[0]))));\n        rv[1] = squareRoot(ySquared(rv[0]));\n        if (mulmod(rv[1], rv[1], FIELD_SIZE) == ySquared(rv[0])) {\n          break;\n        }\n      }\n      // Two possible y ordinates for x ordinate rv[0]; pick one \"randomly\"\n      if (uint256(keccak256(abi.encodePacked(rv[0], input))) % 2 == 0) {\n        rv[1] = -rv[1];\n      }\n    }\n\n  // Bits used in Ethereum address\n  uint256 constant public BOTTOM_160_BITS = 2**161 - 1;\n\n  // Returns the ethereum address associated with point.\n  function pointAddress(uint256[2] calldata point) external pure returns(address) {\n    bytes memory packedPoint = abi.encodePacked(point);\n    // Lower 160 bits of the keccak hash of (x,y) as 64 bytes\n    return address(uint256(keccak256(packedPoint)) & BOTTOM_160_BITS);\n  }\n\n  // Returns true iff q==scalar*x, with cryptographically high probability.\n  // Based on Vitalik Buterin's idea in above ethresear.ch post.\n  function ecmulVerify(uint256[2] memory x, uint256 scalar, uint256[2] memory q)\n    public pure returns(bool) {\n      // This ecrecover returns the address associated with c*R. See\n      // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\n      // The point corresponding to the address returned by ecrecover(0,v,r,s=c*r)\n      // is (r⁻¹ mod Q) * (c*r * R - 0 * g) = c * R, where R is the point\n      // specified by (v, r). See https://crypto.stackexchange.com/a/18106\n      bytes32 cTimesX0 = bytes32(mulmod(scalar, x[0], GROUP_ORDER));\n      uint8 parity = x[1] % 2 != 0 ? 28 : 27;\n      return ecrecover(bytes32(0), parity, bytes32(x[0]), cTimesX0) ==\n        address(uint256(keccak256(abi.encodePacked(q))) & BOTTOM_160_BITS);\n    }\n\n  // Returns x1/z1+x2/z2=(x1z2+x2z1)/(z1z2) in projective coordinates on P¹(𝔽ₙ)\n  function projectiveAdd(uint256 x1, uint256 z1, uint256 x2, uint256 z2)\n    external pure returns(uint256 x3, uint256 z3) {\n      uint256 crossMultNumerator1 = mulmod(z2, x1, FIELD_SIZE);\n      uint256 crossMultNumerator2 = mulmod(z1, x2, FIELD_SIZE);\n      uint256 denom = mulmod(z1, z2, FIELD_SIZE);\n      uint256 numerator = addmod(crossMultNumerator1, crossMultNumerator2, FIELD_SIZE);\n      return (numerator, denom);\n    }\n\n  // Returns x1/z1-x2/z2=(x1z2+x2z1)/(z1z2) in projective coordinates on P¹(𝔽ₙ)\n  function projectiveSub(uint256 x1, uint256 z1, uint256 x2, uint256 z2)\n    public pure returns(uint256 x3, uint256 z3) {\n      uint256 num1 = mulmod(z2, x1, FIELD_SIZE);\n      uint256 num2 = mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE);\n      (x3, z3) = (addmod(num1, num2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\n    }\n\n  // Returns x1/z1*x2/z2=(x1x2)/(z1z2), in projective coordinates on P¹(𝔽ₙ)\n  function projectiveMul(uint256 x1, uint256 z1, uint256 x2, uint256 z2)\n    public pure returns(uint256 x3, uint256 z3) {\n      (x3, z3) = (mulmod(x1, x2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\n    }\n\n  // Returns x1/z1/(x2/z2)=(x1z2)/(x2z1), in projective coordinates on P¹(𝔽ₙ)\n  function projectiveDiv(uint256 x1, uint256 z1, uint256 x2, uint256 z2)\n    external pure returns(uint256 x3, uint256 z3) {\n      (x3, z3) = (mulmod(x1, z2, FIELD_SIZE), mulmod(z1, x2, FIELD_SIZE));\n    }\n\n  /** **************************************************************************\n      @notice Computes elliptic-curve sum, in projective co-ordinates\n\n      @dev Using projective coordinates avoids costly divisions\n\n      @dev To use this with x and y in affine coordinates, compute\n           projectiveECAdd(x[0], x[1], 1, y[0], y[1], 1)\n\n      @dev This can be used to calculate the z which is the inverse to zInv in\n           isValidVRFOutput. But consider using a faster re-implementation.\n\n      @dev This function assumes [x1,y1,z1],[x2,y2,z2] are valid projective\n           coordinates of secp256k1 points. That is safe in this contract,\n           because this method is only used by linearCombination, which checks\n           points are on the curve via ecrecover, and ensures valid projective\n           coordinates by passing z1=z2=1.\n      **************************************************************************\n      @param x1 The first affine coordinate of the first summand\n      @param y1 The second affine coordinate of the first summand\n      @param x2 The first affine coordinate of the second summand\n      @param y2 The second affine coordinate of the second summand\n      **************************************************************************\n      @return [x1,y1,z1]+[x2,y2,z2] as points on secp256k1, in P²(𝔽ₙ)\n  */\n  function projectiveECAdd(uint256 x1, uint256 y1, uint256 x2, uint256 y2)\n    public pure returns(uint256 x3, uint256 y3, uint256 z3) {\n      // See \"Group law for E/K : y^2 = x^3 + ax + b\", in section 3.1.2, p. 80,\n      // \"Guide to Elliptic Curve Cryptography\" by Hankerson, Menezes and Vanstone\n      // We take the equations there for (x3,y3), and homogenize them to\n      // projective coordinates. That way, no inverses are required, here, and we\n      // only need the one inverse in affineECAdd.\n      \n      // We only need the \"point addition\" equations from Hankerson et al. Can\n      // skip the \"point doubling\" equations because p1 == p2 is cryptographically\n      // impossible, and require'd not to be the case in linearCombination.\n      \n      // Add extra \"projective coordinate\" to the two points\n      (uint256 z1, uint256 z2) = (1, 1);\n      \n      // (lx, lz) = (y2-y1)/(x2-x1), i.e., gradient of secant line.\n      uint256 lx = addmod(y2, FIELD_SIZE - y1, FIELD_SIZE);\n      uint256 lz = addmod(x2, FIELD_SIZE - x1, FIELD_SIZE);\n      \n      uint256 dx; // Accumulates denominator from x3 calculation\n      // x3=((y2-y1)/(x2-x1))^2-x1-x2\n      (x3, dx) = projectiveMul(lx, lz, lx, lz); // ((y2-y1)/(x2-x1))^2\n      (x3, dx) = projectiveSub(x3, dx, x1, z1); // ((y2-y1)/(x2-x1))^2-x1\n      (x3, dx) = projectiveSub(x3, dx, x2, z2); // ((y2-y1)/(x2-x1))^2-x1-x2\n      \n      uint256 dy; // Accumulates denominator from y3 calculation\n      // y3=((y2-y1)/(x2-x1))(x1-x3)-y1\n      (y3, dy) = projectiveSub(x1, z1, x3, dx); // x1-x3\n      (y3, dy) = projectiveMul(y3, dy, lx, lz); // ((y2-y1)/(x2-x1))(x1-x3)\n      (y3, dy) = projectiveSub(y3, dy, y1, z1); // ((y2-y1)/(x2-x1))(x1-x3)-y1\n      \n      if (dx != dy) { // Cross-multiply to put everything over a common denominator\n        x3 = mulmod(x3, dy, FIELD_SIZE);\n        y3 = mulmod(y3, dx, FIELD_SIZE);\n        z3 = mulmod(dx, dy, FIELD_SIZE);\n      } else {\n        z3 = dx;\n      }\n    }\n\n  // Returns p1+p2, as affine points on secp256k1. invZ must be the inverse of\n  // the z returned by projectiveECAdd(p1, p2). It is computed off-chain to\n  // save gas.\n  function affineECAdd(\n    uint256[2] memory p1, uint256[2] memory p2,\n    uint256 invZ) public pure returns (uint256[2] memory) {\n    uint256 x;\n    uint256 y;\n    uint256 z;\n    (x, y, z) = projectiveECAdd(p1[0], p1[1], p2[0], p2[1]);\n    require(mulmod(z, invZ, FIELD_SIZE) == 1, \"_invZ must be inverse of z\");\n    // Clear the z ordinate of the projective representation by dividing through\n    // by it, to obtain the affine representation\n    return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)];\n  }\n\n  // Returns true iff address(c*p+s*g) == lcWitness, where g is generator.\n  function verifyLinearCombinationWithGenerator(\n    uint256 c, uint256[2] memory p, uint256 s, address lcWitness)\n    public pure returns (bool) {\n      // ecrecover returns 0x0 in certain failure modes. Ensure witness differs.\n      require(lcWitness != address(0), \"bad witness\");\n      // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\n      // The point corresponding to the address returned by\n      // ecrecover(-s*p[0],v,_p[0],_c*p[0]) is\n      // (p[0]⁻¹ mod GROUP_ORDER)*(c*p[0]-(-s)*p[0]*g)=_c*p+s*g, where v\n      // is the parity of p[1]. See https://crypto.stackexchange.com/a/18106\n      bytes32 pseudoHash = bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER));\n      // https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v\n      uint8 v = (p[1] % 2 == 0) ? 27 : 28;\n      bytes32 pseudoSignature = bytes32(mulmod(c, p[0], GROUP_ORDER));\n      address computed = ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature);\n      return computed == lcWitness;\n    }\n\n  // c*p1 + s*p2\n  function linearCombination(\n    uint256 c, uint256[2] memory p1, uint256[2] memory cp1Witness,\n    uint256 s, uint256[2] memory p2, uint256[2] memory sp2Witness,\n    uint256 zInv)\n    public pure returns (uint256[2] memory) {\n      require(cp1Witness[0] != sp2Witness[0], \"points must differ in sum\");\n      require(ecmulVerify(p1, c, cp1Witness), \"First multiplication check failed\");\n      require(ecmulVerify(p2, s, sp2Witness), \"Second multiplication check failed\");\n      return affineECAdd(cp1Witness, sp2Witness, zInv);\n    }\n\n  // Pseudo-random number from inputs. Corresponds to vrf.go/scalarFromCurve.\n  function scalarFromCurve(\n    uint256[2] memory hash, uint256[2] memory pk, uint256[2] memory gamma,\n    address uWitness, uint256[2] memory v)\n    public pure returns (uint256 s) {\n      bytes32 iHash = keccak256(abi.encodePacked(hash, pk, gamma, v, uWitness));\n      return zqHash(GROUP_ORDER, uint256(iHash));\n    }\n\n  // True if (gamma, c, s) is a correctly constructed randomness proof from pk\n  // and seed. zInv must be the inverse of the third ordinate from\n  // projectiveECAdd applied to cGammaWitness and sHashWitness\n  function verifyVRFProof(\n    uint256[2] memory pk, uint256[2] memory gamma, uint256 c, uint256 s,\n    uint256 seed, address uWitness, uint256[2] memory cGammaWitness,\n    uint256[2] memory sHashWitness, uint256 zInv)\n    public view returns (bool) {\n    // NB: Curve operations already check that (pkX, pkY), (gammaX, gammaY)\n    // are valid curve points. No need to do that explicitly.\n      require(\n        verifyLinearCombinationWithGenerator(c, pk, s, uWitness),\n        \"Could not verify that address(c*pk+s*generator)=_uWitness\");\n      uint256[2] memory hash = hashToCurve(pk, seed);\n      uint256[2] memory v = linearCombination(\n        c, gamma, cGammaWitness, s, hash, sHashWitness, zInv);\n      return (c == scalarFromCurve(hash, pk, gamma, uWitness, v));\n    }\n\n  /** **************************************************************************\n      @notice isValidVRFOutput returns true iff the proof can be verified as\n      showing that output was generated as mandated.\n\n      @dev See the invocation of verifyVRFProof in VRF.js, for an example.\n      **************************************************************************\n      @dev Let x be the secret key associated with the public key pk\n\n      @param pk Affine coordinates of the secp256k1 public key for this VRF\n      @param gamma Intermediate output of the VRF as an affine secp256k1 point\n      @param c The challenge value for proof that gamma = x*hashToCurve(seed)\n              See the variable c on  p. 28 of\n              https://www.cs.bu.edu/~goldbe/papers/VRF_ietf99_print.pdf\n      @param s The response value for the proof. See s on p. 28\n      @param seed The input seed from which the VRF output is computed\n      @param uWitness The ethereum address of c*pk + s*<generator>, in\n             elliptic-curve arithmetic\n      @param cGammaWitness c*gamma on the elliptic-curve\n      @param sHashWitness s*hashToCurve(seed) on the elliptic-curve\n      @param zInv Inverse of the third ordinate of the return value from\n             projectiveECAdd(c*gamma, s*hashToCurve(seed)). Passed in here\n             to save gas, because computing modular inverses is expensive in the\n             EVM.\n      @param output The actual output of the VRF.\n      **************************************************************************\n      @return True iff all the above parameters are correct\n  */\n  function isValidVRFOutput(\n    uint256[2] calldata pk, uint256[2] calldata gamma, uint256 c, uint256 s,\n    uint256 seed, address uWitness, uint256[2] calldata cGammaWitness,\n    uint256[2] calldata sHashWitness, uint256 zInv, uint256 output)\n    external view returns (bool) {\n      return verifyVRFProof(\n        pk, gamma, c, s, seed, uWitness, cGammaWitness, sHashWitness,\n        zInv) &&\n        (uint256(keccak256(abi.encodePacked(gamma))) == output);\n    }\n}\n"
	},
	"sourceTreeHashHex": "0xdc963e9c760544b381451ff764fda73b5a1332e747f0e35ce694448497dc30a6",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.0+commit.1d4f565a.js",
		"settings": {
			"optimizer": {
				"enabled": false
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"userdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap",
						"evm.methodIdentifiers",
						"metadata"
					]
				}
			},
			"remappings": []
		}
	},
	"chains": {}
}