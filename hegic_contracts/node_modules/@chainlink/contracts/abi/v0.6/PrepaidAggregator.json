{
	"schemaVersion": "2.0.0",
	"contractName": "PrepaidAggregator",
	"compilerOutput": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_link",
						"type": "address"
					},
					{
						"internalType": "uint128",
						"name": "_paymentAmount",
						"type": "uint128"
					},
					{
						"internalType": "uint32",
						"name": "_timeout",
						"type": "uint32"
					},
					{
						"internalType": "uint8",
						"name": "_decimals",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "_description",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "int256",
						"name": "current",
						"type": "int256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "AnswerUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "AvailableFundsUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "startedBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startedAt",
						"type": "uint256"
					}
				],
				"name": "NewRound",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oracle",
						"type": "address"
					}
				],
				"name": "OracleAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oracle",
						"type": "address"
					}
				],
				"name": "OracleRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "OwnershipTransferRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "OwnershipTransfered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint128",
						"name": "paymentAmount",
						"type": "uint128"
					},
					{
						"indexed": true,
						"internalType": "uint32",
						"name": "minAnswerCount",
						"type": "uint32"
					},
					{
						"indexed": true,
						"internalType": "uint32",
						"name": "maxAnswerCount",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "restartDelay",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "timeout",
						"type": "uint32"
					}
				],
				"name": "RoundDetailsUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "int256",
						"name": "answer",
						"type": "int256"
					},
					{
						"indexed": true,
						"internalType": "uint32",
						"name": "round",
						"type": "uint32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "oracle",
						"type": "address"
					}
				],
				"name": "SubmissionReceived",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "acceptOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_oracle",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "_minAnswers",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_maxAnswers",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_restartDelay",
						"type": "uint32"
					}
				],
				"name": "addOracle",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "allocatedFunds",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "availableFunds",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "description",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_roundId",
						"type": "uint256"
					}
				],
				"name": "getAnswer",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOracles",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_roundId",
						"type": "uint256"
					}
				],
				"name": "getOriginatingRoundOfAnswer",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_roundId",
						"type": "uint256"
					}
				],
				"name": "getRoundStartedAt",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_roundId",
						"type": "uint256"
					}
				],
				"name": "getTimedOutStatus",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_roundId",
						"type": "uint256"
					}
				],
				"name": "getTimestamp",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "latestAnswer",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "latestRound",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_oracle",
						"type": "address"
					}
				],
				"name": "latestSubmission",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "latestTimestamp",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxAnswerCount",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minAnswerCount",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onTokenTransfer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "oracleCount",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paymentAmount",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_oracle",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "_minAnswers",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_maxAnswers",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_restartDelay",
						"type": "uint32"
					}
				],
				"name": "removeOracle",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reportingRound",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reportingRoundStartedAt",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "restartDelay",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "timeout",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_round",
						"type": "uint256"
					},
					{
						"internalType": "int256",
						"name": "_answer",
						"type": "int256"
					}
				],
				"name": "updateAnswer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "updateAvailableFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint128",
						"name": "_newPaymentAmount",
						"type": "uint128"
					},
					{
						"internalType": "uint32",
						"name": "_minAnswers",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_maxAnswers",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_restartDelay",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_timeout",
						"type": "uint32"
					}
				],
				"name": "updateFutureRounds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdrawFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawable",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {
				"acceptOwnership()": {
					"details": "Allows an ownership transfer to be completed by the recipient."
				},
				"addOracle(address,uint32,uint32,uint32)": {
					"params": {
						"_maxAnswers": "is the new maximum answer count for each round",
						"_minAnswers": "is the new minimum answer count for each round",
						"_oracle": "is the address of the new Oracle being added",
						"_restartDelay": "is the number of rounds an Oracle has to wait before they can initiate a round"
					}
				},
				"constructor": {
					"details": "Sets the LinkToken address and amount of LINK paid",
					"params": {
						"_link": "The address of the LINK token",
						"_paymentAmount": "The amount paid of LINK paid to each oracle per response",
						"_timeout": "is the number of seconds after the previous round that are allowed to lapse before allowing an oracle to skip an unfinished round"
					}
				},
				"getAnswer(uint256)": {
					"params": {
						"_roundId": "the round number to retrieve the answer for"
					}
				},
				"getOriginatingRoundOfAnswer(uint256)": {
					"params": {
						"_roundId": "the round number to retrieve the answer for"
					}
				},
				"getRoundStartedAt(uint256)": {
					"params": {
						"_roundId": "the round number to retrieve the startedAt time for"
					}
				},
				"getTimedOutStatus(uint256)": {
					"params": {
						"_roundId": "the round number to retrieve the timed out status for"
					}
				},
				"getTimestamp(uint256)": {
					"params": {
						"_roundId": "the round number to retrieve the updated timestamp for"
					}
				},
				"latestSubmission(address)": {
					"params": {
						"_oracle": "is the address to lookup the latest submission for"
					}
				},
				"removeOracle(address,uint32,uint32,uint32)": {
					"params": {
						"_maxAnswers": "is the new maximum answer count for each round",
						"_minAnswers": "is the new minimum answer count for each round",
						"_oracle": "is the address of the Oracle being removed",
						"_restartDelay": "is the number of rounds an Oracle has to wait before they can initiate a round"
					}
				},
				"transferOwnership(address)": {
					"details": "Allows an owner to begin transferring ownership to a new address, pending."
				},
				"updateAnswer(uint256,int256)": {
					"params": {
						"_answer": "is the updated data that the oracle is submitting",
						"_round": "is the ID of the round this answer pertains to"
					}
				},
				"updateFutureRounds(uint128,uint32,uint32,uint32,uint32)": {
					"params": {
						"_maxAnswers": "is the new maximum answer count for each round",
						"_minAnswers": "is the new minimum answer count for each round",
						"_newPaymentAmount": "is the payment amount for subsequent rounds",
						"_restartDelay": "is the number of rounds an Oracle has to wait before they can initiate a round"
					}
				},
				"withdraw(address,uint256)": {
					"params": {
						"_amount": "is the amount of LINK to send",
						"_recipient": "is the address to send the LINK to"
					}
				},
				"withdrawFunds(address,uint256)": {
					"params": {
						"_amount": "is the amount of LINK to send",
						"_recipient": "is the address to send the LINK to"
					}
				}
			},
			"title": "The Prepaid Aggregator contract"
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b5060405162004bbc38038062004bbc833981810160405260a081101561003557600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600660086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600360006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550826003601c6101000a81548163ffffffff021916908363ffffffff16021790555081600460006101000a81548160ff021916908360ff160217905550806005819055505050505050614a3c80620001806000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80638205bf6a1161011a578063c1075329116100ad578063d4cc54e41161007c578063d4cc54e414610932578063e052cb0414610974578063e6330cf71461099e578063f2fde38b146109d6578063f3fef3a314610a1a57610206565b8063c10753291461085a578063c35905c6146108a8578063ca04f8f0146108ea578063d002988c1461090857610206565b8063b5ab58dc116100e9578063b5ab58dc14610703578063b633620c14610745578063b6ef5b0314610787578063bb07bacd146107fb57610206565b80638205bf6a146105425780638da5cb5b14610560578063a4c0ed36146105aa578063a4ce9a271461068f57610206565b8063501883011161019d5780636fb4bb4e1161016c5780636fb4bb4e1461049057806370dea79a146104ae5780637284e416146104d857806379b38bbb146104f657806379ba50971461053857610206565b8063501883011461040c57806350d25bcd1461042a578063613d8fcc14610448578063668a0f021461047257610206565b806338aa4c72116101d957806338aa4c72146102e157806340884c521461036157806346fcff4c146103c05780634f8fc3b51461040257610206565b806309e24ae01461020b57806325b6ae001461024d578063313ce56714610293578063357ebb02146102b7575b600080fd5b6102376004803603602081101561022157600080fd5b8101908080359060200190929190505050610a68565b6040518082815260200191505060405180910390f35b6102796004803603602081101561026357600080fd5b8101908080359060200190929190505050610aaa565b604051808215151515815260200191505060405180910390f35b61029b610b12565b604051808260ff1660ff16815260200191505060405180910390f35b6102bf610b25565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61035f600480360360a08110156102f757600080fd5b8101908080356fffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190505050610b3b565b005b610369610ea9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103ac578082015181840152602081019050610391565b505050509050019250505060405180910390f35b6103c8610f37565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61040a610f59565b005b610414611120565b6040518082815260200191505060405180910390f35b610432611198565b6040518082815260200191505060405180910390f35b6104506111a7565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61047a6111b4565b6040518082815260200191505060405180910390f35b6104986111d4565b6040518082815260200191505060405180910390f35b6104b66111f4565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6104e061120a565b6040518082815260200191505060405180910390f35b6105226004803603602081101561050c57600080fd5b8101908080359060200190929190505050611210565b6040518082815260200191505060405180910390f35b61054061125a565b005b61054a611422565b6040518082815260200191505060405180910390f35b610568611431565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61068d600480360360608110156105c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561060757600080fd5b82018360208201111561061957600080fd5b8035906020019184600183028401116401000000008311171561063b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611456565b005b610701600480360360808110156106a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190505050611463565b005b61072f6004803603602081101561071957600080fd5b81019080803590602001909291905050506118d9565b6040518082815260200191505060405180910390f35b6107716004803603602081101561075b57600080fd5b81019080803590602001909291905050506118eb565b6040518082815260200191505060405180910390f35b6107f96004803603608081101561079d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff1690602001909291905050506118fd565b005b61083d6004803603602081101561081157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d26565b604051808381526020018281526020019250505060405180910390f35b6108a66004803603604081101561087057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611dd1565b005b6108b061209b565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108f26120bd565b6040518082815260200191505060405180910390f35b610910612117565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61093a61212d565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61097c61214f565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6109d4600480360360408110156109b457600080fd5b810190808035906020019092919080359060200190929190505050612165565b005b610a18600480360360208110156109ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125e4565b005b610a6660048036036040811015610a3057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612765565b005b6000600860008363ffffffff1663ffffffff16815260200190815260200160002060010160109054906101000a900463ffffffff1663ffffffff169050919050565b6000808290506000600860008363ffffffff1663ffffffff16815260200190815260200160002060010160109054906101000a900463ffffffff16905060008163ffffffff16118015610b0957508163ffffffff168163ffffffff1614155b92505050919050565b600460009054906101000a900460ff1681565b600360189054906101000a900463ffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b8383836000610c0a6111a7565b90508263ffffffff168163ffffffff161015610c71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614968602e913960400191505060405180910390fd5b8363ffffffff168363ffffffff161015610cd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180614843602d913960400191505060405180910390fd5b60008163ffffffff161480610cf657508163ffffffff168163ffffffff16115b610d4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614917602c913960400191505060405180910390fd5b88600360006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555087600360146101000a81548163ffffffff021916908363ffffffff16021790555086600360106101000a81548163ffffffff021916908363ffffffff16021790555085600360186101000a81548163ffffffff021916908363ffffffff160217905550846003601c6101000a81548163ffffffff021916908363ffffffff1602179055508663ffffffff168863ffffffff16600360009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff167f56800c9d1ed723511246614d15e58cfcde15b6a33c245b5c961b689c1890fd8f8989604051808363ffffffff1663ffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a4505050505050505050565b60606009805480602002602001604051908101604052809291908181526020018280548015610f2d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ee3575b5050505050905090565b600260109054906101000a90046fffffffffffffffffffffffffffffffff1681565b6000600260109054906101000a90046fffffffffffffffffffffffffffffffff169050600061109a600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600660089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561105157600080fd5b505afa158015611065573d6000803e3d6000fd5b505050506040513d602081101561107b57600080fd5b8101908080519060200190929190505050612a8190919063ffffffff16565b905080600260106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555080826fffffffffffffffffffffffffffffffff161461111c57807ffe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f60405160405180910390a25b5050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905090565b60006111a2612b0a565b905090565b6000600980549050905090565b6000600660049054906101000a900463ffffffff1663ffffffff16905090565b6000600660009054906101000a900463ffffffff1663ffffffff16905090565b6003601c9054906101000a900463ffffffff1681565b60055481565b6000600860008363ffffffff1663ffffffff16815260200190815260200160002060010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461131d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652070726f706f736564206f776e65720000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee6760405160405180910390a350565b600061142c612b46565b905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61145e610f59565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611525576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b8363ffffffff8016600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900463ffffffff1663ffffffff16146115dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806149966023913960400191505060405180910390fd5b600660009054906101000a900463ffffffff16600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548163ffffffff021916908363ffffffff1602179055506000600961167460016116606111a7565b63ffffffff16612ba090919063ffffffff16565b63ffffffff168154811061168457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900461ffff16905080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548161ffff021916908361ffff160217905550600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81549061ffff02191690558160098261ffff16815481106117c857fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600980548061181b57fe5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590558673ffffffffffffffffffffffffffffffffffffffff167f9c8e7d83025bef8a04c664b2f753f64b8814bdb7e27291d7e50935f18cc3c71260405160405180910390a26118d0600360009054906101000a90046fffffffffffffffffffffffffffffffff168787876003601c9054906101000a900463ffffffff16610b3b565b50505050505050565b60006118e482612c35565b9050919050565b60006118f682612c61565b9050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b8363ffffffff8016600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900463ffffffff1663ffffffff161415611a77576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806149b96028913960400191505060405180910390fd5b602a611a816111a7565b63ffffffff1610611afa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f63616e6e6f7420616464206d6f7265207468616e203432206f7261636c65730081525060200191505060405180910390fd5b611b0385612cab565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160106101000a81548163ffffffff021916908363ffffffff16021790555063ffffffff600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548163ffffffff021916908363ffffffff1602179055506009859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c446001600980549050612a8190919063ffffffff16565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548161ffff021916908361ffff1602179055508473ffffffffffffffffffffffffffffffffffffffff167e47706786c922d17b39285dc59d696bafea72c0b003d3841ae1202076f4c2e460405160405180910390a2611d1f600360009054906101000a90046fffffffffffffffffffffffffffffffff168585856003601c9054906101000a900463ffffffff16610b3b565b5050505050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160189054906101000a900463ffffffff168063ffffffff16905091509150915091565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600260109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161015611f39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b600660089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611fe257600080fd5b505af1158015611ff6573d6000803e3d6000fd5b505050506040513d602081101561200c57600080fd5b810190808051906020019092919050505061208f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4c494e4b207472616e73666572206661696c656400000000000000000000000081525060200191505060405180910390fd5b612097610f59565b5050565b600360009054906101000a90046fffffffffffffffffffffffffffffffff1681565b600060086000600660009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16905090565b600360149054906101000a900463ffffffff1681565b600260009054906101000a90046fffffffffffffffffffffffffffffffff1681565b600360109054906101000a900463ffffffff1681565b81600660009054906101000a900463ffffffff1663ffffffff168163ffffffff1614806121c857506121b96001600660009054906101000a900463ffffffff1663ffffffff16612d6890919063ffffffff16565b63ffffffff168163ffffffff16145b61223a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d757374207265706f7274206f6e2063757272656e7420726f756e640000000081525060200191505060405180910390fd5b60018163ffffffff16148061226d575061226c61226760018363ffffffff16612ba090919063ffffffff16565b612dfc565b5b80612296575061229561229060018363ffffffff16612ba090919063ffffffff16565b612e48565b5b612308576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4e6f7420656c696769626c6520746f2062756d7020726f756e6400000000000081525060200191505060405180910390fd5b826000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160109054906101000a900463ffffffff16905060008163ffffffff1614156123c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806149436025913960400191505060405180910390fd5b8163ffffffff168163ffffffff161115612425576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806148c26034913960400191505060405180910390fd5b8163ffffffff16600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900463ffffffff1663ffffffff1610156124dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806149e16026913960400191505060405180910390fd5b8163ffffffff16600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160189054906101000a900463ffffffff1663ffffffff16106125af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f43616e6e6f742075706461746520726f756e64207265706f727473000000000081525060200191505060405180910390fd5b6125b885612f1e565b6125c284866132f5565b6125cb856134cf565b6125d4856136d1565b6125dd85613951565b5050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146126a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b60008190506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff169050816fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff161015612867576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f496e73756666696369656e742062616c616e636500000000000000000000000081525060200191505060405180910390fd5b61288c82826fffffffffffffffffffffffffffffffff16613a5f90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555061294782600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16613a5f90919063ffffffff16565b600260006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600660089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85846fffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612a3a57600080fd5b505af1158015612a4e573d6000803e3d6000fd5b505050506040513d6020811015612a6457600080fd5b8101908080519060200190929190505050612a7b57fe5b50505050565b600082821115612af9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600060086000600660049054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000154905090565b600060086000600660049054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16905090565b60008263ffffffff168263ffffffff161115612c24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000600860008363ffffffff1663ffffffff168152602001908152602001600020600001549050919050565b6000600860008363ffffffff1663ffffffff16815260200190815260200160002060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b600080600660009054906101000a900463ffffffff16905060008163ffffffff1614158015612d375750600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900463ffffffff1663ffffffff168163ffffffff16145b15612d455780915050612d63565b612d5f60018263ffffffff16612d6890919063ffffffff16565b9150505b919050565b60008082840190508363ffffffff168163ffffffff161015612df2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080600860008463ffffffff1663ffffffff16815260200190815260200160002060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16119050919050565b600080600860008463ffffffff1663ffffffff16815260200190815260200160002060010160009054906101000a900467ffffffffffffffff1690506000600860008563ffffffff1663ffffffff16815260200190815260200160002060020160010160089054906101000a900463ffffffff16905060008267ffffffffffffffff16118015612ede575060008163ffffffff16115b8015612f15575042612f098263ffffffff168467ffffffffffffffff16613b0c90919063ffffffff16565b67ffffffffffffffff16105b92505050919050565b80612f4b6001600660009054906101000a900463ffffffff1663ffffffff16612d6890919063ffffffff16565b63ffffffff168163ffffffff1614156132f157816000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601c9054906101000a900463ffffffff1663ffffffff169050600360189054906101000a900463ffffffff1663ffffffff1681018263ffffffff161180612fea5750600081145b156132ee5761301161300c60018663ffffffff16612ba090919063ffffffff16565b613ba8565b83600660006101000a81548163ffffffff021916908363ffffffff160217905550600360109054906101000a900463ffffffff16600860008663ffffffff1663ffffffff16815260200190815260200160002060020160010160006101000a81548163ffffffff021916908363ffffffff160217905550600360149054906101000a900463ffffffff16600860008663ffffffff1663ffffffff16815260200190815260200160002060020160010160046101000a81548163ffffffff021916908363ffffffff160217905550600360009054906101000a90046fffffffffffffffffffffffffffffffff16600860008663ffffffff1663ffffffff168152602001908152602001600020600201600101600c6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506003601c9054906101000a900463ffffffff16600860008663ffffffff1663ffffffff16815260200190815260200160002060020160010160086101000a81548163ffffffff021916908363ffffffff16021790555042600860008663ffffffff1663ffffffff16815260200190815260200160002060010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601c6101000a81548163ffffffff021916908363ffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168463ffffffff167f0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac60271600860008863ffffffff1663ffffffff16815260200190815260200160002060010160009054906101000a900467ffffffffffffffff16604051808267ffffffffffffffff16815260200191505060405180910390a35b50505b5050565b806000600860008363ffffffff1663ffffffff16815260200190815260200160002060020160010160009054906101000a900463ffffffff1663ffffffff16141561338b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614898602a913960400191505060405180910390fd5b600860008363ffffffff1663ffffffff16815260200190815260200160002060020160000183908060018154018082558091505060019003906000526020600020016000909190919091505581600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160186101000a81548163ffffffff021916908363ffffffff16021790555082600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff168263ffffffff16847f92e98423f8adac6e64d0608e519fd1cefb861498385c6dee70d58fc926ddc68c60405160405180910390a4505050565b80600860008263ffffffff1663ffffffff16815260200190815260200160002060020160010160049054906101000a900463ffffffff1663ffffffff16600860008363ffffffff1663ffffffff16815260200190815260200160002060020160000180549050106136cd5760006135b8600860008563ffffffff1663ffffffff1681526020019081526020016000206002016000018054806020026020016040519081016040528092919081815260200182805480156135ae57602002820191906000526020600020905b81548152602001906001019080831161359a575b5050505050613e32565b905080600860008563ffffffff1663ffffffff1681526020019081526020016000206000018190555042600860008563ffffffff1663ffffffff16815260200190815260200160002060010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555082600860008563ffffffff1663ffffffff16815260200190815260200160002060010160106101000a81548163ffffffff021916908363ffffffff16021790555082600660046101000a81548163ffffffff021916908363ffffffff1602179055508263ffffffff16817f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f426040518082815260200191505060405180910390a3505b5050565b6000600860008363ffffffff1663ffffffff168152602001908152602001600020600201600101600c9054906101000a90046fffffffffffffffffffffffffffffffff169050600061375c82600260109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16613a5f90919063ffffffff16565b905080600260106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506137da82600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16613ed590919063ffffffff16565b600260006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555061389582600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16613ed590919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550806fffffffffffffffffffffffffffffffff167ffe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f60405160405180910390a2505050565b80600860008263ffffffff1663ffffffff16815260200190815260200160002060020160010160009054906101000a900463ffffffff1663ffffffff16600860008363ffffffff1663ffffffff168152602001908152602001600020600201600001805490501415613a5b57600860008363ffffffff1663ffffffff168152602001908152602001600020600201600080820160006139f091906147fc565b6001820160006101000a81549063ffffffff02191690556001820160046101000a81549063ffffffff02191690556001820160086101000a81549063ffffffff021916905560018201600c6101000a8154906fffffffffffffffffffffffffffffffff021916905550505b5050565b6000826fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff161115613afb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60008082840190508367ffffffffffffffff168167ffffffffffffffff161015613b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b80613bb281612e48565b15613e2e5781600060086000613bd860018563ffffffff16612ba090919063ffffffff16565b63ffffffff1663ffffffff16815260200190815260200160002060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff161415613c6b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806148706028913960400191505060405180910390fd5b6000613c8760018563ffffffff16612ba090919063ffffffff16565b9050600860008263ffffffff1663ffffffff16815260200190815260200160002060000154600860008663ffffffff1663ffffffff16815260200190815260200160002060000181905550600860008263ffffffff1663ffffffff16815260200190815260200160002060010160109054906101000a900463ffffffff16600860008663ffffffff1663ffffffff16815260200190815260200160002060010160106101000a81548163ffffffff021916908363ffffffff16021790555042600860008663ffffffff1663ffffffff16815260200190815260200160002060010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600860008563ffffffff1663ffffffff16815260200190815260200160002060020160008082016000613dc191906147fc565b6001820160006101000a81549063ffffffff02191690556001820160046101000a81549063ffffffff02191690556001820160086101000a81549063ffffffff021916905560018201600c6101000a8154906fffffffffffffffffffffffffffffffff0219169055505050505b5050565b60008151600010613eab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6c697374206d757374206e6f7420626520656d7074790000000000000000000081525060200191505060405180910390fd5b6009825111613ec457613ebd82613f81565b9050613ed0565b613ecd8261446b565b90505b919050565b6000808284019050836fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff161015613f77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008082519050600083600081518110613f9757fe5b602002602001015190506001821415613fb4578092505050614466565b600084600181518110613fc357fe5b6020026020010151905080821315613fe057808280925081935050505b6002831415613ffd57613ff382826144e2565b9350505050614466565b60008560028151811061400c57fe5b602002602001015190508082131561402957808280925081935050505b8183131561403c57818380935081945050505b60038414156140515781945050505050614466565b60008660038151811061406057fe5b6020026020010151905060008560041061409a577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6140b0565b876004815181106140a757fe5b60200260200101515b90506000866005106140e2577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6140f8565b886005815181106140ef57fe5b60200260200101515b905060008760061061412a577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff614140565b8960068151811061413757fe5b60200260200101515b9050600088600710614172577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff614188565b8a60078151811061417f57fe5b60200260200101515b90506000896008106141ba577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141d0565b8b6008815181106141c757fe5b60200260200101515b9050848613156141e557848680965081975050505b818313156141f857818380935081945050505b8385131561420b57838580955081965050505b8082131561421e57808280925081935050505b8486131561423157848680965081975050505b8183131561424457818380935081945050505b85891315614257578589809750819a5050505b8286131561426a57828680945081975050505b8589131561427d578589809750819a5050505b8488131561429057848880965081995050505b818513156142a357818580935081965050505b848813156142b657848880965081995050505b808413156142c957808480925081955050505b838713156142dc57838780955081985050505b848713156142ef57848780965081985050505b8285131561430257828580945081965050505b8487131561431557848780965081985050505b8588131561432857858880975081995050505b8587131561433b57858780975081985050505b60048a141561435f5761434e88886144e2565b9a5050505050505050505050614466565b60058a141561437a57869a5050505050505050505050614466565b60068a141561439e5761438d87876144e2565b9a5050505050505050505050614466565b60078a14156143b957859a5050505050505050505050614466565b60088a14156143dd576143cc86866144e2565b9a5050505050505050505050614466565b60098a14156143f857849a5050505050505050505050614466565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6c6973742e6c656e677468203e2039000000000000000000000000000000000081525060200191505060405180910390fd5b919050565b6000808251905060006002828161447e57fe5b04905060006002838161448d57fe5b0614156144c8576000806144ab866000600187036001870387614537565b80925081935050506144bd82826144e2565b9450505050506144dd565b6144d88460006001850384614609565b925050505b919050565b60008060028084816144f057fe5b07600286816144fb57fe5b07018161450457fe5b05905061452e6145286002868161451757fe5b056002868161452257fe5b05614677565b82614677565b91505092915050565b60008082841061454657600080fd5b8386111580156145565750848411155b61455f57600080fd5b82861115801561456f5750848311155b61457857600080fd5b5b6001156145fe57600061458d888888614705565b905080841161459e578095506145f8565b848110156145b1576001810196506145f7565b8085111580156145c057508381105b6145c657fe5b60006145d489898489614609565b905060006145e78a600185018a89614609565b90508181945094505050506145ff565b5b50614579565b5b9550959350505050565b60008184111561461857600080fd5b8282111561462557600080fd5b5b8284101561465957600061463b868686614705565b905080831161464c57809350614653565b6001810194505b50614626565b84848151811061466557fe5b60200260200101519050949350505050565b6000808284019050600083121580156146905750838112155b806146a657506000831280156146a557508381125b5b6146fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806148f66021913960400191505060405180910390fd5b8091505092915050565b6000808460028486018161471557fe5b048151811061472057fe5b602002602001015190506001840393506001830192505b6001156147f3575b6001840193508085858151811061475257fe5b60200260200101511261473f575b6001830392508085848151811061477357fe5b60200260200101511361476057828410156147e55784838151811061479457fe5b60200260200101518585815181106147a857fe5b60200260200101518686815181106147bc57fe5b602002602001018786815181106147cf57fe5b60200260200101828152508281525050506147ee565b829150506147f5565b614737565b505b9392505050565b508054600082559060005260206000209081019061481a919061481d565b50565b61483f91905b8082111561483b576000816000905550600101614823565b5090565b9056fe43616e6e6f7420686176652074686520616e73776572206d696e696d756d2068696768657220746865206d61784d757374206861766520612070726576696f757320616e7377657220746f2070756c6c2066726f6d526f756e64206e6f742063757272656e746c7920656c696769626c6520666f72207265706f7274696e674e6577206f7261636c65732063616e6e6f7420706172746963697061746520696e20696e2d70726f677265737320726f756e64735369676e6564536166654d6174683a206164646974696f6e206f766572666c6f77526573746172742064656c6179206d757374206265206c657373207468616e206f7261636c6520636f756e744f6e6c7920757064617461626c652062792077686974656c6973746564206f7261636c657343616e6e6f7420686176652074686520616e73776572206d617820686967686572206f7261636c6520636f756e7441646472657373206973206e6f7420612077686974656c6973746564206f7261636c654164647265737320697320616c7265616479207265636f7264656420617320616e206f7261636c654f7261636c6520686173206265656e2072656d6f7665642066726f6d2077686974656c697374a26469706673582212201cd41cbcfbd3d651bc81cde6a29ee4abbdddfa70eb6c8b072182cdb6856a915564736f6c63430006020033",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4BBC CODESIZE SUB DUP1 PUSH3 0x4BBC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x6 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0x4A3C DUP1 PUSH3 0x180 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8205BF6A GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xC1075329 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD4CC54E4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD4CC54E4 EQ PUSH2 0x932 JUMPI DUP1 PUSH4 0xE052CB04 EQ PUSH2 0x974 JUMPI DUP1 PUSH4 0xE6330CF7 EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D6 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0xA1A JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0xC1075329 EQ PUSH2 0x85A JUMPI DUP1 PUSH4 0xC35905C6 EQ PUSH2 0x8A8 JUMPI DUP1 PUSH4 0xCA04F8F0 EQ PUSH2 0x8EA JUMPI DUP1 PUSH4 0xD002988C EQ PUSH2 0x908 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0xB5AB58DC GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0x745 JUMPI DUP1 PUSH4 0xB6EF5B03 EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0xBB07BACD EQ PUSH2 0x7FB JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0xA4CE9A27 EQ PUSH2 0x68F JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x50188301 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x6FB4BB4E GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x6FB4BB4E EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x70DEA79A EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0x79B38BBB EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x538 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x50188301 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x613D8FCC EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x472 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x38AA4C72 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x38AA4C72 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x40884C52 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x46FCFF4C EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x4F8FC3B5 EQ PUSH2 0x402 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x9E24AE0 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x25B6AE00 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x357EBB02 EQ PUSH2 0x2B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB3B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x369 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x391 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C8 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40A PUSH2 0xF59 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x414 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x432 PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x450 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47A PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x498 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B6 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E0 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x540 PUSH2 0x125A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54A PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x568 PUSH2 0x1431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1456 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x701 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1463 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x771 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x83D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1DD1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B0 PUSH2 0x209B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F2 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x910 PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93A PUSH2 0x212D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97C PUSH2 0x214F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2165 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA18 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA66 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2765 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0xB09 JUMPI POP DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 DUP4 PUSH1 0x0 PUSH2 0xC0A PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4968 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4843 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ DUP1 PUSH2 0xCF6 JUMPI POP DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4917 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x3 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x3 PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x3 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH4 0xFFFFFFFF AND DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x56800C9D1ED723511246614D15E58CFCDE15B6A33C245B5C961B689C1890FD8F DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xF2D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xEE3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x109A PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1065 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x107B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2A81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x111C JUMPI DUP1 PUSH32 0xFE25C73E3B9089FAC37D55C4C7EFCBA6F04AF04CEBD2FC4D6D7DBB07E1E5234F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A2 PUSH2 0x2B0A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x131D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD18B5FD22306E373229B9439188228EDCA81207D1667F604DAF6CEF8AA3EE67 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142C PUSH2 0x2B46 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x145E PUSH2 0xF59 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1525 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH4 0xFFFFFFFF DUP1 AND PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ PUSH2 0x15DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4996 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH2 0x1674 PUSH1 0x1 PUSH2 0x1660 PUSH2 0x11A7 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH2 0x2BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1684 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH2 0xFFFF MUL NOT AND SWAP1 SSTORE DUP2 PUSH1 0x9 DUP3 PUSH2 0xFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x17C8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x181B JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9C8E7D83025BEF8A04C664B2F753F64B8814BDB7E27291D7E50935F18CC3C712 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x18D0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x3 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xB3B JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E4 DUP3 PUSH2 0x2C35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F6 DUP3 PUSH2 0x2C61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH4 0xFFFFFFFF DUP1 AND PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1A77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49B9 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2A PUSH2 0x1A81 PUSH2 0x11A7 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND LT PUSH2 0x1AFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616E6E6F7420616464206D6F7265207468616E203432206F7261636C657300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B03 DUP6 PUSH2 0x2CAB JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH4 0xFFFFFFFF PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1C44 PUSH1 0x1 PUSH1 0x9 DUP1 SLOAD SWAP1 POP PUSH2 0x2A81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0x47706786C922D17B39285DC59D696BAFEA72C0B003D3841AE1202076F4C2E4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1D1F PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x3 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xB3B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1F39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x200C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x208F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C494E4B207472616E73666572206661696C6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2097 PUSH2 0xF59 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ DUP1 PUSH2 0x21C8 JUMPI POP PUSH2 0x21B9 PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH2 0x2D68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ JUMPDEST PUSH2 0x223A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D757374207265706F7274206F6E2063757272656E7420726F756E6400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH4 0xFFFFFFFF AND EQ DUP1 PUSH2 0x226D JUMPI POP PUSH2 0x226C PUSH2 0x2267 PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND PUSH2 0x2BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DFC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2296 JUMPI POP PUSH2 0x2295 PUSH2 0x2290 PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND PUSH2 0x2BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2E48 JUMP JUMPDEST JUMPDEST PUSH2 0x2308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420656C696769626C6520746F2062756D7020726F756E64000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x23C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4943 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2425 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x48C2 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x24DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49E1 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND LT PUSH2 0x25AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F742075706461746520726F756E64207265706F7274730000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25B8 DUP6 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x25C2 DUP5 DUP7 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0x25CB DUP6 PUSH2 0x34CF JUMP JUMPDEST PUSH2 0x25D4 DUP6 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x25DD DUP6 PUSH2 0x3951 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x2867 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x288C DUP3 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A5F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2947 DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A5F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A4E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2A7B JUMPI INVALID JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2AF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x6 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x6 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2C24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2D37 JUMPI POP PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2D45 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x2D5F PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF AND PUSH2 0x2D68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x2DF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2EDE JUMPI POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x2F15 JUMPI POP TIMESTAMP PUSH2 0x2F09 DUP3 PUSH4 0xFFFFFFFF AND DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x3B0C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND LT JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x2F4B PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH2 0x2D68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x32F1 JUMPI DUP2 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x3 PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 ADD DUP3 PUSH4 0xFFFFFFFF AND GT DUP1 PUSH2 0x2FEA JUMPI POP PUSH1 0x0 DUP2 EQ JUMPDEST ISZERO PUSH2 0x32EE JUMPI PUSH2 0x3011 PUSH2 0x300C PUSH1 0x1 DUP7 PUSH4 0xFFFFFFFF AND PUSH2 0x2BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3BA8 JUMP JUMPDEST DUP4 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND PUSH32 0x109FC6F55CF40689F02FBAAD7AF7FE7BBAC8A3D2186600AFC7D3E10CAC60271 PUSH1 0x8 PUSH1 0x0 DUP9 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x338B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4898 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND DUP5 PUSH32 0x92E98423F8ADAC6E64D0608E519FD1CEFB861498385C6DEE70D58FC926DDC68C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP LT PUSH2 0x36CD JUMPI PUSH1 0x0 PUSH2 0x35B8 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x35AE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x359A JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x3E32 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH32 0x559884FD3A460DB3073B7FC896CC77986F16E378210DED43186175BF646FC5F TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x375C DUP3 PUSH1 0x2 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A5F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x37DA DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3ED5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3895 DUP3 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3ED5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFE25C73E3B9089FAC37D55C4C7EFCBA6F04AF04CEBD2FC4D6D7DBB07E1E5234F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0x3A5B JUMPI PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x39F0 SWAP2 SWAP1 PUSH2 0x47FC JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x3AFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x3B9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x3BB2 DUP2 PUSH2 0x2E48 JUMP JUMPDEST ISZERO PUSH2 0x3E2E JUMPI DUP2 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x3BD8 PUSH1 0x1 DUP6 PUSH4 0xFFFFFFFF AND PUSH2 0x2BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3C6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4870 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C87 PUSH1 0x1 DUP6 PUSH4 0xFFFFFFFF AND PUSH2 0x2BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x8 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x3DC1 SWAP2 SWAP1 PUSH2 0x47FC JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 LT PUSH2 0x3EAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C697374206D757374206E6F7420626520656D70747900000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP3 MLOAD GT PUSH2 0x3EC4 JUMPI PUSH2 0x3EBD DUP3 PUSH2 0x3F81 JUMP JUMPDEST SWAP1 POP PUSH2 0x3ED0 JUMP JUMPDEST PUSH2 0x3ECD DUP3 PUSH2 0x446B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x3F77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3F97 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x1 DUP3 EQ ISZERO PUSH2 0x3FB4 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3FC3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP3 SGT ISZERO PUSH2 0x3FE0 JUMPI DUP1 DUP3 DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0x3FFD JUMPI PUSH2 0x3FF3 DUP3 DUP3 PUSH2 0x44E2 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x400C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP3 SGT ISZERO PUSH2 0x4029 JUMPI DUP1 DUP3 DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP JUMPDEST DUP2 DUP4 SGT ISZERO PUSH2 0x403C JUMPI DUP2 DUP4 DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP JUMPDEST PUSH1 0x3 DUP5 EQ ISZERO PUSH2 0x4051 JUMPI DUP2 SWAP5 POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x4060 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x4 LT PUSH2 0x409A JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x40B0 JUMP JUMPDEST DUP8 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x40A7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x5 LT PUSH2 0x40E2 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x40F8 JUMP JUMPDEST DUP9 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x40EF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x6 LT PUSH2 0x412A JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x4140 JUMP JUMPDEST DUP10 PUSH1 0x6 DUP2 MLOAD DUP2 LT PUSH2 0x4137 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP9 PUSH1 0x7 LT PUSH2 0x4172 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x4188 JUMP JUMPDEST DUP11 PUSH1 0x7 DUP2 MLOAD DUP2 LT PUSH2 0x417F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 PUSH1 0x8 LT PUSH2 0x41BA JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x41D0 JUMP JUMPDEST DUP12 PUSH1 0x8 DUP2 MLOAD DUP2 LT PUSH2 0x41C7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP DUP5 DUP7 SGT ISZERO PUSH2 0x41E5 JUMPI DUP5 DUP7 DUP1 SWAP7 POP DUP2 SWAP8 POP POP POP JUMPDEST DUP2 DUP4 SGT ISZERO PUSH2 0x41F8 JUMPI DUP2 DUP4 DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP JUMPDEST DUP4 DUP6 SGT ISZERO PUSH2 0x420B JUMPI DUP4 DUP6 DUP1 SWAP6 POP DUP2 SWAP7 POP POP POP JUMPDEST DUP1 DUP3 SGT ISZERO PUSH2 0x421E JUMPI DUP1 DUP3 DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP JUMPDEST DUP5 DUP7 SGT ISZERO PUSH2 0x4231 JUMPI DUP5 DUP7 DUP1 SWAP7 POP DUP2 SWAP8 POP POP POP JUMPDEST DUP2 DUP4 SGT ISZERO PUSH2 0x4244 JUMPI DUP2 DUP4 DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP JUMPDEST DUP6 DUP10 SGT ISZERO PUSH2 0x4257 JUMPI DUP6 DUP10 DUP1 SWAP8 POP DUP2 SWAP11 POP POP POP JUMPDEST DUP3 DUP7 SGT ISZERO PUSH2 0x426A JUMPI DUP3 DUP7 DUP1 SWAP5 POP DUP2 SWAP8 POP POP POP JUMPDEST DUP6 DUP10 SGT ISZERO PUSH2 0x427D JUMPI DUP6 DUP10 DUP1 SWAP8 POP DUP2 SWAP11 POP POP POP JUMPDEST DUP5 DUP9 SGT ISZERO PUSH2 0x4290 JUMPI DUP5 DUP9 DUP1 SWAP7 POP DUP2 SWAP10 POP POP POP JUMPDEST DUP2 DUP6 SGT ISZERO PUSH2 0x42A3 JUMPI DUP2 DUP6 DUP1 SWAP4 POP DUP2 SWAP7 POP POP POP JUMPDEST DUP5 DUP9 SGT ISZERO PUSH2 0x42B6 JUMPI DUP5 DUP9 DUP1 SWAP7 POP DUP2 SWAP10 POP POP POP JUMPDEST DUP1 DUP5 SGT ISZERO PUSH2 0x42C9 JUMPI DUP1 DUP5 DUP1 SWAP3 POP DUP2 SWAP6 POP POP POP JUMPDEST DUP4 DUP8 SGT ISZERO PUSH2 0x42DC JUMPI DUP4 DUP8 DUP1 SWAP6 POP DUP2 SWAP9 POP POP POP JUMPDEST DUP5 DUP8 SGT ISZERO PUSH2 0x42EF JUMPI DUP5 DUP8 DUP1 SWAP7 POP DUP2 SWAP9 POP POP POP JUMPDEST DUP3 DUP6 SGT ISZERO PUSH2 0x4302 JUMPI DUP3 DUP6 DUP1 SWAP5 POP DUP2 SWAP7 POP POP POP JUMPDEST DUP5 DUP8 SGT ISZERO PUSH2 0x4315 JUMPI DUP5 DUP8 DUP1 SWAP7 POP DUP2 SWAP9 POP POP POP JUMPDEST DUP6 DUP9 SGT ISZERO PUSH2 0x4328 JUMPI DUP6 DUP9 DUP1 SWAP8 POP DUP2 SWAP10 POP POP POP JUMPDEST DUP6 DUP8 SGT ISZERO PUSH2 0x433B JUMPI DUP6 DUP8 DUP1 SWAP8 POP DUP2 SWAP9 POP POP POP JUMPDEST PUSH1 0x4 DUP11 EQ ISZERO PUSH2 0x435F JUMPI PUSH2 0x434E DUP9 DUP9 PUSH2 0x44E2 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x5 DUP11 EQ ISZERO PUSH2 0x437A JUMPI DUP7 SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x6 DUP11 EQ ISZERO PUSH2 0x439E JUMPI PUSH2 0x438D DUP8 DUP8 PUSH2 0x44E2 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x7 DUP11 EQ ISZERO PUSH2 0x43B9 JUMPI DUP6 SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x8 DUP11 EQ ISZERO PUSH2 0x43DD JUMPI PUSH2 0x43CC DUP7 DUP7 PUSH2 0x44E2 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x9 DUP11 EQ ISZERO PUSH2 0x43F8 JUMPI DUP5 SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C6973742E6C656E677468203E20390000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 PUSH2 0x447E JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP4 DUP2 PUSH2 0x448D JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x44C8 JUMPI PUSH1 0x0 DUP1 PUSH2 0x44AB DUP7 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH1 0x1 DUP8 SUB DUP8 PUSH2 0x4537 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH2 0x44BD DUP3 DUP3 PUSH2 0x44E2 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x44DD JUMP JUMPDEST PUSH2 0x44D8 DUP5 PUSH1 0x0 PUSH1 0x1 DUP6 SUB DUP5 PUSH2 0x4609 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP1 DUP5 DUP2 PUSH2 0x44F0 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 DUP7 DUP2 PUSH2 0x44FB JUMPI INVALID JUMPDEST SMOD ADD DUP2 PUSH2 0x4504 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x452E PUSH2 0x4528 PUSH1 0x2 DUP7 DUP2 PUSH2 0x4517 JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 DUP7 DUP2 PUSH2 0x4522 JUMPI INVALID JUMPDEST SDIV PUSH2 0x4677 JUMP JUMPDEST DUP3 PUSH2 0x4677 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 LT PUSH2 0x4546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO DUP1 ISZERO PUSH2 0x4556 JUMPI POP DUP5 DUP5 GT ISZERO JUMPDEST PUSH2 0x455F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 GT ISZERO DUP1 ISZERO PUSH2 0x456F JUMPI POP DUP5 DUP4 GT ISZERO JUMPDEST PUSH2 0x4578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x45FE JUMPI PUSH1 0x0 PUSH2 0x458D DUP9 DUP9 DUP9 PUSH2 0x4705 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT PUSH2 0x459E JUMPI DUP1 SWAP6 POP PUSH2 0x45F8 JUMP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x45B1 JUMPI PUSH1 0x1 DUP2 ADD SWAP7 POP PUSH2 0x45F7 JUMP JUMPDEST DUP1 DUP6 GT ISZERO DUP1 ISZERO PUSH2 0x45C0 JUMPI POP DUP4 DUP2 LT JUMPDEST PUSH2 0x45C6 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x45D4 DUP10 DUP10 DUP5 DUP10 PUSH2 0x4609 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x45E7 DUP11 PUSH1 0x1 DUP6 ADD DUP11 DUP10 PUSH2 0x4609 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x45FF JUMP JUMPDEST JUMPDEST POP PUSH2 0x4579 JUMP JUMPDEST JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 GT ISZERO PUSH2 0x4618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0x4625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x4659 JUMPI PUSH1 0x0 PUSH2 0x463B DUP7 DUP7 DUP7 PUSH2 0x4705 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT PUSH2 0x464C JUMPI DUP1 SWAP4 POP PUSH2 0x4653 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP5 POP JUMPDEST POP PUSH2 0x4626 JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4665 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP PUSH1 0x0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x4690 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x46A6 JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x46A5 JUMPI POP DUP4 DUP2 SLT JUMPDEST JUMPDEST PUSH2 0x46FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x48F6 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x2 DUP5 DUP7 ADD DUP2 PUSH2 0x4715 JUMPI INVALID JUMPDEST DIV DUP2 MLOAD DUP2 LT PUSH2 0x4720 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0x1 DUP4 ADD SWAP3 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x47F3 JUMPI JUMPDEST PUSH1 0x1 DUP5 ADD SWAP4 POP DUP1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4752 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SLT PUSH2 0x473F JUMPI JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4773 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SGT PUSH2 0x4760 JUMPI DUP3 DUP5 LT ISZERO PUSH2 0x47E5 JUMPI DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4794 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x47A8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x47BC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x47CF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x47EE JUMP JUMPDEST DUP3 SWAP2 POP POP PUSH2 0x47F5 JUMP JUMPDEST PUSH2 0x4737 JUMP JUMPDEST POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x481A SWAP2 SWAP1 PUSH2 0x481D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x483F SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x483B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x4823 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x7420686176652074686520616E737765 PUSH19 0x206D696E696D756D2068696768657220746865 KECCAK256 PUSH14 0x61784D7573742068617665206120 PUSH17 0x726576696F757320616E7377657220746F KECCAK256 PUSH17 0x756C6C2066726F6D526F756E64206E6F74 KECCAK256 PUSH4 0x75727265 PUSH15 0x746C7920656C696769626C6520666F PUSH19 0x207265706F7274696E674E6577206F7261636C PUSH6 0x732063616E6E PUSH16 0x7420706172746963697061746520696E KECCAK256 PUSH10 0x6E2D70726F6772657373 KECCAK256 PUSH19 0x6F756E64735369676E6564536166654D617468 GASPRICE KECCAK256 PUSH2 0x6464 PUSH10 0x74696F6E206F76657266 PUSH13 0x6F77526573746172742064656C PUSH2 0x7920 PUSH14 0x757374206265206C657373207468 PUSH2 0x6E20 PUSH16 0x7261636C6520636F756E744F6E6C7920 PUSH22 0x7064617461626C652062792077686974656C69737465 PUSH5 0x206F726163 PUSH13 0x657343616E6E6F742068617665 KECCAK256 PUSH21 0x686520616E73776572206D61782068696768657220 PUSH16 0x7261636C6520636F756E744164647265 PUSH20 0x73206973206E6F7420612077686974656C697374 PUSH6 0x64206F726163 PUSH13 0x65416464726573732069732061 PUSH13 0x7265616479207265636F726465 PUSH5 0x2061732061 PUSH15 0x206F7261636C654F7261636C652068 PUSH2 0x7320 PUSH3 0x65656E KECCAK256 PUSH19 0x656D6F7665642066726F6D2077686974656C69 PUSH20 0x74A26469706673582212201CD41CBCFBD3D651BC DUP2 0xCD 0xE6 LOG2 SWAP15 0xE4 0xAB 0xBD 0xDD STATICCALL PUSH17 0xEB6C8B072182CDB6856A915564736F6C63 NUMBER STOP MOD MUL STOP CALLER ",
				"sourceMap": "724:17210:8:-:0;;;2917:299;8:9:-1;5:2;;;30:1;27;20:12;5:2;2917:299:8;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2917:299:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;421:10:5;413:5;;:18;;;;;;;;;;;;;;;;;;3087:5:8;3061:4;;:32;;;;;;;;;;;;;;;;;;3115:14;3099:13;;:30;;;;;;;;;;;;;;;;;;3145:8;3135:7;;:18;;;;;;;;;;;;;;;;;;3170:9;3159:8;;:20;;;;;;;;;;;;;;;;;;3199:12;3185:11;:26;;;;2917:299;;;;;724:17210;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c80638205bf6a1161011a578063c1075329116100ad578063d4cc54e41161007c578063d4cc54e414610932578063e052cb0414610974578063e6330cf71461099e578063f2fde38b146109d6578063f3fef3a314610a1a57610206565b8063c10753291461085a578063c35905c6146108a8578063ca04f8f0146108ea578063d002988c1461090857610206565b8063b5ab58dc116100e9578063b5ab58dc14610703578063b633620c14610745578063b6ef5b0314610787578063bb07bacd146107fb57610206565b80638205bf6a146105425780638da5cb5b14610560578063a4c0ed36146105aa578063a4ce9a271461068f57610206565b8063501883011161019d5780636fb4bb4e1161016c5780636fb4bb4e1461049057806370dea79a146104ae5780637284e416146104d857806379b38bbb146104f657806379ba50971461053857610206565b8063501883011461040c57806350d25bcd1461042a578063613d8fcc14610448578063668a0f021461047257610206565b806338aa4c72116101d957806338aa4c72146102e157806340884c521461036157806346fcff4c146103c05780634f8fc3b51461040257610206565b806309e24ae01461020b57806325b6ae001461024d578063313ce56714610293578063357ebb02146102b7575b600080fd5b6102376004803603602081101561022157600080fd5b8101908080359060200190929190505050610a68565b6040518082815260200191505060405180910390f35b6102796004803603602081101561026357600080fd5b8101908080359060200190929190505050610aaa565b604051808215151515815260200191505060405180910390f35b61029b610b12565b604051808260ff1660ff16815260200191505060405180910390f35b6102bf610b25565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61035f600480360360a08110156102f757600080fd5b8101908080356fffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190505050610b3b565b005b610369610ea9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103ac578082015181840152602081019050610391565b505050509050019250505060405180910390f35b6103c8610f37565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61040a610f59565b005b610414611120565b6040518082815260200191505060405180910390f35b610432611198565b6040518082815260200191505060405180910390f35b6104506111a7565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61047a6111b4565b6040518082815260200191505060405180910390f35b6104986111d4565b6040518082815260200191505060405180910390f35b6104b66111f4565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6104e061120a565b6040518082815260200191505060405180910390f35b6105226004803603602081101561050c57600080fd5b8101908080359060200190929190505050611210565b6040518082815260200191505060405180910390f35b61054061125a565b005b61054a611422565b6040518082815260200191505060405180910390f35b610568611431565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61068d600480360360608110156105c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561060757600080fd5b82018360208201111561061957600080fd5b8035906020019184600183028401116401000000008311171561063b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611456565b005b610701600480360360808110156106a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190505050611463565b005b61072f6004803603602081101561071957600080fd5b81019080803590602001909291905050506118d9565b6040518082815260200191505060405180910390f35b6107716004803603602081101561075b57600080fd5b81019080803590602001909291905050506118eb565b6040518082815260200191505060405180910390f35b6107f96004803603608081101561079d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff1690602001909291905050506118fd565b005b61083d6004803603602081101561081157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d26565b604051808381526020018281526020019250505060405180910390f35b6108a66004803603604081101561087057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611dd1565b005b6108b061209b565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108f26120bd565b6040518082815260200191505060405180910390f35b610910612117565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61093a61212d565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61097c61214f565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6109d4600480360360408110156109b457600080fd5b810190808035906020019092919080359060200190929190505050612165565b005b610a18600480360360208110156109ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125e4565b005b610a6660048036036040811015610a3057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612765565b005b6000600860008363ffffffff1663ffffffff16815260200190815260200160002060010160109054906101000a900463ffffffff1663ffffffff169050919050565b6000808290506000600860008363ffffffff1663ffffffff16815260200190815260200160002060010160109054906101000a900463ffffffff16905060008163ffffffff16118015610b0957508163ffffffff168163ffffffff1614155b92505050919050565b600460009054906101000a900460ff1681565b600360189054906101000a900463ffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b8383836000610c0a6111a7565b90508263ffffffff168163ffffffff161015610c71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614968602e913960400191505060405180910390fd5b8363ffffffff168363ffffffff161015610cd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180614843602d913960400191505060405180910390fd5b60008163ffffffff161480610cf657508163ffffffff168163ffffffff16115b610d4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614917602c913960400191505060405180910390fd5b88600360006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555087600360146101000a81548163ffffffff021916908363ffffffff16021790555086600360106101000a81548163ffffffff021916908363ffffffff16021790555085600360186101000a81548163ffffffff021916908363ffffffff160217905550846003601c6101000a81548163ffffffff021916908363ffffffff1602179055508663ffffffff168863ffffffff16600360009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff167f56800c9d1ed723511246614d15e58cfcde15b6a33c245b5c961b689c1890fd8f8989604051808363ffffffff1663ffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a4505050505050505050565b60606009805480602002602001604051908101604052809291908181526020018280548015610f2d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ee3575b5050505050905090565b600260109054906101000a90046fffffffffffffffffffffffffffffffff1681565b6000600260109054906101000a90046fffffffffffffffffffffffffffffffff169050600061109a600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600660089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561105157600080fd5b505afa158015611065573d6000803e3d6000fd5b505050506040513d602081101561107b57600080fd5b8101908080519060200190929190505050612a8190919063ffffffff16565b905080600260106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555080826fffffffffffffffffffffffffffffffff161461111c57807ffe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f60405160405180910390a25b5050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905090565b60006111a2612b0a565b905090565b6000600980549050905090565b6000600660049054906101000a900463ffffffff1663ffffffff16905090565b6000600660009054906101000a900463ffffffff1663ffffffff16905090565b6003601c9054906101000a900463ffffffff1681565b60055481565b6000600860008363ffffffff1663ffffffff16815260200190815260200160002060010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461131d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652070726f706f736564206f776e65720000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee6760405160405180910390a350565b600061142c612b46565b905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61145e610f59565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611525576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b8363ffffffff8016600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900463ffffffff1663ffffffff16146115dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806149966023913960400191505060405180910390fd5b600660009054906101000a900463ffffffff16600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548163ffffffff021916908363ffffffff1602179055506000600961167460016116606111a7565b63ffffffff16612ba090919063ffffffff16565b63ffffffff168154811061168457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900461ffff16905080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548161ffff021916908361ffff160217905550600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81549061ffff02191690558160098261ffff16815481106117c857fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600980548061181b57fe5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590558673ffffffffffffffffffffffffffffffffffffffff167f9c8e7d83025bef8a04c664b2f753f64b8814bdb7e27291d7e50935f18cc3c71260405160405180910390a26118d0600360009054906101000a90046fffffffffffffffffffffffffffffffff168787876003601c9054906101000a900463ffffffff16610b3b565b50505050505050565b60006118e482612c35565b9050919050565b60006118f682612c61565b9050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b8363ffffffff8016600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900463ffffffff1663ffffffff161415611a77576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806149b96028913960400191505060405180910390fd5b602a611a816111a7565b63ffffffff1610611afa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f63616e6e6f7420616464206d6f7265207468616e203432206f7261636c65730081525060200191505060405180910390fd5b611b0385612cab565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160106101000a81548163ffffffff021916908363ffffffff16021790555063ffffffff600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548163ffffffff021916908363ffffffff1602179055506009859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c446001600980549050612a8190919063ffffffff16565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548161ffff021916908361ffff1602179055508473ffffffffffffffffffffffffffffffffffffffff167e47706786c922d17b39285dc59d696bafea72c0b003d3841ae1202076f4c2e460405160405180910390a2611d1f600360009054906101000a90046fffffffffffffffffffffffffffffffff168585856003601c9054906101000a900463ffffffff16610b3b565b5050505050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160189054906101000a900463ffffffff168063ffffffff16905091509150915091565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600260109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161015611f39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b600660089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611fe257600080fd5b505af1158015611ff6573d6000803e3d6000fd5b505050506040513d602081101561200c57600080fd5b810190808051906020019092919050505061208f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4c494e4b207472616e73666572206661696c656400000000000000000000000081525060200191505060405180910390fd5b612097610f59565b5050565b600360009054906101000a90046fffffffffffffffffffffffffffffffff1681565b600060086000600660009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16905090565b600360149054906101000a900463ffffffff1681565b600260009054906101000a90046fffffffffffffffffffffffffffffffff1681565b600360109054906101000a900463ffffffff1681565b81600660009054906101000a900463ffffffff1663ffffffff168163ffffffff1614806121c857506121b96001600660009054906101000a900463ffffffff1663ffffffff16612d6890919063ffffffff16565b63ffffffff168163ffffffff16145b61223a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d757374207265706f7274206f6e2063757272656e7420726f756e640000000081525060200191505060405180910390fd5b60018163ffffffff16148061226d575061226c61226760018363ffffffff16612ba090919063ffffffff16565b612dfc565b5b80612296575061229561229060018363ffffffff16612ba090919063ffffffff16565b612e48565b5b612308576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4e6f7420656c696769626c6520746f2062756d7020726f756e6400000000000081525060200191505060405180910390fd5b826000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160109054906101000a900463ffffffff16905060008163ffffffff1614156123c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806149436025913960400191505060405180910390fd5b8163ffffffff168163ffffffff161115612425576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806148c26034913960400191505060405180910390fd5b8163ffffffff16600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900463ffffffff1663ffffffff1610156124dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806149e16026913960400191505060405180910390fd5b8163ffffffff16600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160189054906101000a900463ffffffff1663ffffffff16106125af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f43616e6e6f742075706461746520726f756e64207265706f727473000000000081525060200191505060405180910390fd5b6125b885612f1e565b6125c284866132f5565b6125cb856134cf565b6125d4856136d1565b6125dd85613951565b5050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146126a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b60008190506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff169050816fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff161015612867576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f496e73756666696369656e742062616c616e636500000000000000000000000081525060200191505060405180910390fd5b61288c82826fffffffffffffffffffffffffffffffff16613a5f90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555061294782600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16613a5f90919063ffffffff16565b600260006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600660089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85846fffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612a3a57600080fd5b505af1158015612a4e573d6000803e3d6000fd5b505050506040513d6020811015612a6457600080fd5b8101908080519060200190929190505050612a7b57fe5b50505050565b600082821115612af9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600060086000600660049054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000154905090565b600060086000600660049054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16905090565b60008263ffffffff168263ffffffff161115612c24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000600860008363ffffffff1663ffffffff168152602001908152602001600020600001549050919050565b6000600860008363ffffffff1663ffffffff16815260200190815260200160002060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b600080600660009054906101000a900463ffffffff16905060008163ffffffff1614158015612d375750600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900463ffffffff1663ffffffff168163ffffffff16145b15612d455780915050612d63565b612d5f60018263ffffffff16612d6890919063ffffffff16565b9150505b919050565b60008082840190508363ffffffff168163ffffffff161015612df2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080600860008463ffffffff1663ffffffff16815260200190815260200160002060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16119050919050565b600080600860008463ffffffff1663ffffffff16815260200190815260200160002060010160009054906101000a900467ffffffffffffffff1690506000600860008563ffffffff1663ffffffff16815260200190815260200160002060020160010160089054906101000a900463ffffffff16905060008267ffffffffffffffff16118015612ede575060008163ffffffff16115b8015612f15575042612f098263ffffffff168467ffffffffffffffff16613b0c90919063ffffffff16565b67ffffffffffffffff16105b92505050919050565b80612f4b6001600660009054906101000a900463ffffffff1663ffffffff16612d6890919063ffffffff16565b63ffffffff168163ffffffff1614156132f157816000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601c9054906101000a900463ffffffff1663ffffffff169050600360189054906101000a900463ffffffff1663ffffffff1681018263ffffffff161180612fea5750600081145b156132ee5761301161300c60018663ffffffff16612ba090919063ffffffff16565b613ba8565b83600660006101000a81548163ffffffff021916908363ffffffff160217905550600360109054906101000a900463ffffffff16600860008663ffffffff1663ffffffff16815260200190815260200160002060020160010160006101000a81548163ffffffff021916908363ffffffff160217905550600360149054906101000a900463ffffffff16600860008663ffffffff1663ffffffff16815260200190815260200160002060020160010160046101000a81548163ffffffff021916908363ffffffff160217905550600360009054906101000a90046fffffffffffffffffffffffffffffffff16600860008663ffffffff1663ffffffff168152602001908152602001600020600201600101600c6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506003601c9054906101000a900463ffffffff16600860008663ffffffff1663ffffffff16815260200190815260200160002060020160010160086101000a81548163ffffffff021916908363ffffffff16021790555042600860008663ffffffff1663ffffffff16815260200190815260200160002060010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001601c6101000a81548163ffffffff021916908363ffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168463ffffffff167f0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac60271600860008863ffffffff1663ffffffff16815260200190815260200160002060010160009054906101000a900467ffffffffffffffff16604051808267ffffffffffffffff16815260200191505060405180910390a35b50505b5050565b806000600860008363ffffffff1663ffffffff16815260200190815260200160002060020160010160009054906101000a900463ffffffff1663ffffffff16141561338b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614898602a913960400191505060405180910390fd5b600860008363ffffffff1663ffffffff16815260200190815260200160002060020160000183908060018154018082558091505060019003906000526020600020016000909190919091505581600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160186101000a81548163ffffffff021916908363ffffffff16021790555082600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff168263ffffffff16847f92e98423f8adac6e64d0608e519fd1cefb861498385c6dee70d58fc926ddc68c60405160405180910390a4505050565b80600860008263ffffffff1663ffffffff16815260200190815260200160002060020160010160049054906101000a900463ffffffff1663ffffffff16600860008363ffffffff1663ffffffff16815260200190815260200160002060020160000180549050106136cd5760006135b8600860008563ffffffff1663ffffffff1681526020019081526020016000206002016000018054806020026020016040519081016040528092919081815260200182805480156135ae57602002820191906000526020600020905b81548152602001906001019080831161359a575b5050505050613e32565b905080600860008563ffffffff1663ffffffff1681526020019081526020016000206000018190555042600860008563ffffffff1663ffffffff16815260200190815260200160002060010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555082600860008563ffffffff1663ffffffff16815260200190815260200160002060010160106101000a81548163ffffffff021916908363ffffffff16021790555082600660046101000a81548163ffffffff021916908363ffffffff1602179055508263ffffffff16817f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f426040518082815260200191505060405180910390a3505b5050565b6000600860008363ffffffff1663ffffffff168152602001908152602001600020600201600101600c9054906101000a90046fffffffffffffffffffffffffffffffff169050600061375c82600260109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16613a5f90919063ffffffff16565b905080600260106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506137da82600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16613ed590919063ffffffff16565b600260006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555061389582600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16613ed590919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550806fffffffffffffffffffffffffffffffff167ffe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f60405160405180910390a2505050565b80600860008263ffffffff1663ffffffff16815260200190815260200160002060020160010160009054906101000a900463ffffffff1663ffffffff16600860008363ffffffff1663ffffffff168152602001908152602001600020600201600001805490501415613a5b57600860008363ffffffff1663ffffffff168152602001908152602001600020600201600080820160006139f091906147fc565b6001820160006101000a81549063ffffffff02191690556001820160046101000a81549063ffffffff02191690556001820160086101000a81549063ffffffff021916905560018201600c6101000a8154906fffffffffffffffffffffffffffffffff021916905550505b5050565b6000826fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff161115613afb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60008082840190508367ffffffffffffffff168167ffffffffffffffff161015613b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b80613bb281612e48565b15613e2e5781600060086000613bd860018563ffffffff16612ba090919063ffffffff16565b63ffffffff1663ffffffff16815260200190815260200160002060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff161415613c6b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806148706028913960400191505060405180910390fd5b6000613c8760018563ffffffff16612ba090919063ffffffff16565b9050600860008263ffffffff1663ffffffff16815260200190815260200160002060000154600860008663ffffffff1663ffffffff16815260200190815260200160002060000181905550600860008263ffffffff1663ffffffff16815260200190815260200160002060010160109054906101000a900463ffffffff16600860008663ffffffff1663ffffffff16815260200190815260200160002060010160106101000a81548163ffffffff021916908363ffffffff16021790555042600860008663ffffffff1663ffffffff16815260200190815260200160002060010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600860008563ffffffff1663ffffffff16815260200190815260200160002060020160008082016000613dc191906147fc565b6001820160006101000a81549063ffffffff02191690556001820160046101000a81549063ffffffff02191690556001820160086101000a81549063ffffffff021916905560018201600c6101000a8154906fffffffffffffffffffffffffffffffff0219169055505050505b5050565b60008151600010613eab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6c697374206d757374206e6f7420626520656d7074790000000000000000000081525060200191505060405180910390fd5b6009825111613ec457613ebd82613f81565b9050613ed0565b613ecd8261446b565b90505b919050565b6000808284019050836fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff161015613f77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008082519050600083600081518110613f9757fe5b602002602001015190506001821415613fb4578092505050614466565b600084600181518110613fc357fe5b6020026020010151905080821315613fe057808280925081935050505b6002831415613ffd57613ff382826144e2565b9350505050614466565b60008560028151811061400c57fe5b602002602001015190508082131561402957808280925081935050505b8183131561403c57818380935081945050505b60038414156140515781945050505050614466565b60008660038151811061406057fe5b6020026020010151905060008560041061409a577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6140b0565b876004815181106140a757fe5b60200260200101515b90506000866005106140e2577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6140f8565b886005815181106140ef57fe5b60200260200101515b905060008760061061412a577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff614140565b8960068151811061413757fe5b60200260200101515b9050600088600710614172577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff614188565b8a60078151811061417f57fe5b60200260200101515b90506000896008106141ba577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141d0565b8b6008815181106141c757fe5b60200260200101515b9050848613156141e557848680965081975050505b818313156141f857818380935081945050505b8385131561420b57838580955081965050505b8082131561421e57808280925081935050505b8486131561423157848680965081975050505b8183131561424457818380935081945050505b85891315614257578589809750819a5050505b8286131561426a57828680945081975050505b8589131561427d578589809750819a5050505b8488131561429057848880965081995050505b818513156142a357818580935081965050505b848813156142b657848880965081995050505b808413156142c957808480925081955050505b838713156142dc57838780955081985050505b848713156142ef57848780965081985050505b8285131561430257828580945081965050505b8487131561431557848780965081985050505b8588131561432857858880975081995050505b8587131561433b57858780975081985050505b60048a141561435f5761434e88886144e2565b9a5050505050505050505050614466565b60058a141561437a57869a5050505050505050505050614466565b60068a141561439e5761438d87876144e2565b9a5050505050505050505050614466565b60078a14156143b957859a5050505050505050505050614466565b60088a14156143dd576143cc86866144e2565b9a5050505050505050505050614466565b60098a14156143f857849a5050505050505050505050614466565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6c6973742e6c656e677468203e2039000000000000000000000000000000000081525060200191505060405180910390fd5b919050565b6000808251905060006002828161447e57fe5b04905060006002838161448d57fe5b0614156144c8576000806144ab866000600187036001870387614537565b80925081935050506144bd82826144e2565b9450505050506144dd565b6144d88460006001850384614609565b925050505b919050565b60008060028084816144f057fe5b07600286816144fb57fe5b07018161450457fe5b05905061452e6145286002868161451757fe5b056002868161452257fe5b05614677565b82614677565b91505092915050565b60008082841061454657600080fd5b8386111580156145565750848411155b61455f57600080fd5b82861115801561456f5750848311155b61457857600080fd5b5b6001156145fe57600061458d888888614705565b905080841161459e578095506145f8565b848110156145b1576001810196506145f7565b8085111580156145c057508381105b6145c657fe5b60006145d489898489614609565b905060006145e78a600185018a89614609565b90508181945094505050506145ff565b5b50614579565b5b9550959350505050565b60008184111561461857600080fd5b8282111561462557600080fd5b5b8284101561465957600061463b868686614705565b905080831161464c57809350614653565b6001810194505b50614626565b84848151811061466557fe5b60200260200101519050949350505050565b6000808284019050600083121580156146905750838112155b806146a657506000831280156146a557508381125b5b6146fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806148f66021913960400191505060405180910390fd5b8091505092915050565b6000808460028486018161471557fe5b048151811061472057fe5b602002602001015190506001840393506001830192505b6001156147f3575b6001840193508085858151811061475257fe5b60200260200101511261473f575b6001830392508085848151811061477357fe5b60200260200101511361476057828410156147e55784838151811061479457fe5b60200260200101518585815181106147a857fe5b60200260200101518686815181106147bc57fe5b602002602001018786815181106147cf57fe5b60200260200101828152508281525050506147ee565b829150506147f5565b614737565b505b9392505050565b508054600082559060005260206000209081019061481a919061481d565b50565b61483f91905b8082111561483b576000816000905550600101614823565b5090565b9056fe43616e6e6f7420686176652074686520616e73776572206d696e696d756d2068696768657220746865206d61784d757374206861766520612070726576696f757320616e7377657220746f2070756c6c2066726f6d526f756e64206e6f742063757272656e746c7920656c696769626c6520666f72207265706f7274696e674e6577206f7261636c65732063616e6e6f7420706172746963697061746520696e20696e2d70726f677265737320726f756e64735369676e6564536166654d6174683a206164646974696f6e206f766572666c6f77526573746172742064656c6179206d757374206265206c657373207468616e206f7261636c6520636f756e744f6e6c7920757064617461626c652062792077686974656c6973746564206f7261636c657343616e6e6f7420686176652074686520616e73776572206d617820686967686572206f7261636c6520636f756e7441646472657373206973206e6f7420612077686974656c6973746564206f7261636c654164647265737320697320616c7265616479207265636f7264656420617320616e206f7261636c654f7261636c6520686173206265656e2072656d6f7665642066726f6d2077686974656c697374a26469706673582212201cd41cbcfbd3d651bc81cde6a29ee4abbdddfa70eb6c8b072182cdb6856a915564736f6c63430006020033",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8205BF6A GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xC1075329 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD4CC54E4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD4CC54E4 EQ PUSH2 0x932 JUMPI DUP1 PUSH4 0xE052CB04 EQ PUSH2 0x974 JUMPI DUP1 PUSH4 0xE6330CF7 EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D6 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0xA1A JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0xC1075329 EQ PUSH2 0x85A JUMPI DUP1 PUSH4 0xC35905C6 EQ PUSH2 0x8A8 JUMPI DUP1 PUSH4 0xCA04F8F0 EQ PUSH2 0x8EA JUMPI DUP1 PUSH4 0xD002988C EQ PUSH2 0x908 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0xB5AB58DC GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0x745 JUMPI DUP1 PUSH4 0xB6EF5B03 EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0xBB07BACD EQ PUSH2 0x7FB JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0xA4CE9A27 EQ PUSH2 0x68F JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x50188301 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x6FB4BB4E GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x6FB4BB4E EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x70DEA79A EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0x79B38BBB EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x538 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x50188301 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x613D8FCC EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x472 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x38AA4C72 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x38AA4C72 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x40884C52 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x46FCFF4C EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x4F8FC3B5 EQ PUSH2 0x402 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x9E24AE0 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x25B6AE00 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x357EBB02 EQ PUSH2 0x2B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB3B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x369 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x391 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C8 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40A PUSH2 0xF59 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x414 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x432 PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x450 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47A PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x498 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B6 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E0 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x540 PUSH2 0x125A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54A PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x568 PUSH2 0x1431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1456 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x701 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1463 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x771 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x83D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1DD1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B0 PUSH2 0x209B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F2 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x910 PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93A PUSH2 0x212D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97C PUSH2 0x214F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2165 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA18 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA66 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2765 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0xB09 JUMPI POP DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 DUP4 PUSH1 0x0 PUSH2 0xC0A PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4968 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4843 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ DUP1 PUSH2 0xCF6 JUMPI POP DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4917 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x3 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x3 PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x3 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH4 0xFFFFFFFF AND DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x56800C9D1ED723511246614D15E58CFCDE15B6A33C245B5C961B689C1890FD8F DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xF2D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xEE3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x109A PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1065 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x107B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2A81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x111C JUMPI DUP1 PUSH32 0xFE25C73E3B9089FAC37D55C4C7EFCBA6F04AF04CEBD2FC4D6D7DBB07E1E5234F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A2 PUSH2 0x2B0A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x131D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD18B5FD22306E373229B9439188228EDCA81207D1667F604DAF6CEF8AA3EE67 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142C PUSH2 0x2B46 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x145E PUSH2 0xF59 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1525 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH4 0xFFFFFFFF DUP1 AND PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ PUSH2 0x15DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4996 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH2 0x1674 PUSH1 0x1 PUSH2 0x1660 PUSH2 0x11A7 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH2 0x2BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1684 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH2 0xFFFF MUL NOT AND SWAP1 SSTORE DUP2 PUSH1 0x9 DUP3 PUSH2 0xFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x17C8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x181B JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9C8E7D83025BEF8A04C664B2F753F64B8814BDB7E27291D7E50935F18CC3C712 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x18D0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x3 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xB3B JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E4 DUP3 PUSH2 0x2C35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F6 DUP3 PUSH2 0x2C61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH4 0xFFFFFFFF DUP1 AND PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1A77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49B9 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2A PUSH2 0x1A81 PUSH2 0x11A7 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND LT PUSH2 0x1AFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616E6E6F7420616464206D6F7265207468616E203432206F7261636C657300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B03 DUP6 PUSH2 0x2CAB JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH4 0xFFFFFFFF PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1C44 PUSH1 0x1 PUSH1 0x9 DUP1 SLOAD SWAP1 POP PUSH2 0x2A81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0x47706786C922D17B39285DC59D696BAFEA72C0B003D3841AE1202076F4C2E4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1D1F PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x3 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0xB3B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1F39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x200C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x208F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C494E4B207472616E73666572206661696C6564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2097 PUSH2 0xF59 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ DUP1 PUSH2 0x21C8 JUMPI POP PUSH2 0x21B9 PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH2 0x2D68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ JUMPDEST PUSH2 0x223A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D757374207265706F7274206F6E2063757272656E7420726F756E6400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH4 0xFFFFFFFF AND EQ DUP1 PUSH2 0x226D JUMPI POP PUSH2 0x226C PUSH2 0x2267 PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND PUSH2 0x2BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2DFC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2296 JUMPI POP PUSH2 0x2295 PUSH2 0x2290 PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND PUSH2 0x2BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2E48 JUMP JUMPDEST JUMPDEST PUSH2 0x2308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420656C696769626C6520746F2062756D7020726F756E64000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x23C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4943 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2425 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x48C2 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x24DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49E1 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND LT PUSH2 0x25AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F742075706461746520726F756E64207265706F7274730000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25B8 DUP6 PUSH2 0x2F1E JUMP JUMPDEST PUSH2 0x25C2 DUP5 DUP7 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0x25CB DUP6 PUSH2 0x34CF JUMP JUMPDEST PUSH2 0x25D4 DUP6 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x25DD DUP6 PUSH2 0x3951 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x2867 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x288C DUP3 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A5F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2947 DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A5F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A4E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2A7B JUMPI INVALID JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2AF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x6 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x6 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2C24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2D37 JUMPI POP PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2D45 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x2D5F PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF AND PUSH2 0x2D68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x2DF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2EDE JUMPI POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x2F15 JUMPI POP TIMESTAMP PUSH2 0x2F09 DUP3 PUSH4 0xFFFFFFFF AND DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x3B0C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND LT JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x2F4B PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH2 0x2D68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x32F1 JUMPI DUP2 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x3 PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 ADD DUP3 PUSH4 0xFFFFFFFF AND GT DUP1 PUSH2 0x2FEA JUMPI POP PUSH1 0x0 DUP2 EQ JUMPDEST ISZERO PUSH2 0x32EE JUMPI PUSH2 0x3011 PUSH2 0x300C PUSH1 0x1 DUP7 PUSH4 0xFFFFFFFF AND PUSH2 0x2BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3BA8 JUMP JUMPDEST DUP4 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND PUSH32 0x109FC6F55CF40689F02FBAAD7AF7FE7BBAC8A3D2186600AFC7D3E10CAC60271 PUSH1 0x8 PUSH1 0x0 DUP9 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x338B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4898 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND DUP5 PUSH32 0x92E98423F8ADAC6E64D0608E519FD1CEFB861498385C6DEE70D58FC926DDC68C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP LT PUSH2 0x36CD JUMPI PUSH1 0x0 PUSH2 0x35B8 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x35AE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x359A JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x3E32 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH32 0x559884FD3A460DB3073B7FC896CC77986F16E378210DED43186175BF646FC5F TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x375C DUP3 PUSH1 0x2 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A5F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x37DA DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3ED5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3895 DUP3 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3ED5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFE25C73E3B9089FAC37D55C4C7EFCBA6F04AF04CEBD2FC4D6D7DBB07E1E5234F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0x3A5B JUMPI PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x39F0 SWAP2 SWAP1 PUSH2 0x47FC JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x3AFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x3B9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x3BB2 DUP2 PUSH2 0x2E48 JUMP JUMPDEST ISZERO PUSH2 0x3E2E JUMPI DUP2 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x3BD8 PUSH1 0x1 DUP6 PUSH4 0xFFFFFFFF AND PUSH2 0x2BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3C6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4870 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C87 PUSH1 0x1 DUP6 PUSH4 0xFFFFFFFF AND PUSH2 0x2BA0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x8 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x3DC1 SWAP2 SWAP1 PUSH2 0x47FC JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 LT PUSH2 0x3EAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C697374206D757374206E6F7420626520656D70747900000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP3 MLOAD GT PUSH2 0x3EC4 JUMPI PUSH2 0x3EBD DUP3 PUSH2 0x3F81 JUMP JUMPDEST SWAP1 POP PUSH2 0x3ED0 JUMP JUMPDEST PUSH2 0x3ECD DUP3 PUSH2 0x446B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x3F77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3F97 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x1 DUP3 EQ ISZERO PUSH2 0x3FB4 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3FC3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP3 SGT ISZERO PUSH2 0x3FE0 JUMPI DUP1 DUP3 DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0x3FFD JUMPI PUSH2 0x3FF3 DUP3 DUP3 PUSH2 0x44E2 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x400C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP3 SGT ISZERO PUSH2 0x4029 JUMPI DUP1 DUP3 DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP JUMPDEST DUP2 DUP4 SGT ISZERO PUSH2 0x403C JUMPI DUP2 DUP4 DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP JUMPDEST PUSH1 0x3 DUP5 EQ ISZERO PUSH2 0x4051 JUMPI DUP2 SWAP5 POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x4060 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x4 LT PUSH2 0x409A JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x40B0 JUMP JUMPDEST DUP8 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x40A7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x5 LT PUSH2 0x40E2 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x40F8 JUMP JUMPDEST DUP9 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x40EF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x6 LT PUSH2 0x412A JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x4140 JUMP JUMPDEST DUP10 PUSH1 0x6 DUP2 MLOAD DUP2 LT PUSH2 0x4137 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP9 PUSH1 0x7 LT PUSH2 0x4172 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x4188 JUMP JUMPDEST DUP11 PUSH1 0x7 DUP2 MLOAD DUP2 LT PUSH2 0x417F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 PUSH1 0x8 LT PUSH2 0x41BA JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x41D0 JUMP JUMPDEST DUP12 PUSH1 0x8 DUP2 MLOAD DUP2 LT PUSH2 0x41C7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP DUP5 DUP7 SGT ISZERO PUSH2 0x41E5 JUMPI DUP5 DUP7 DUP1 SWAP7 POP DUP2 SWAP8 POP POP POP JUMPDEST DUP2 DUP4 SGT ISZERO PUSH2 0x41F8 JUMPI DUP2 DUP4 DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP JUMPDEST DUP4 DUP6 SGT ISZERO PUSH2 0x420B JUMPI DUP4 DUP6 DUP1 SWAP6 POP DUP2 SWAP7 POP POP POP JUMPDEST DUP1 DUP3 SGT ISZERO PUSH2 0x421E JUMPI DUP1 DUP3 DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP JUMPDEST DUP5 DUP7 SGT ISZERO PUSH2 0x4231 JUMPI DUP5 DUP7 DUP1 SWAP7 POP DUP2 SWAP8 POP POP POP JUMPDEST DUP2 DUP4 SGT ISZERO PUSH2 0x4244 JUMPI DUP2 DUP4 DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP JUMPDEST DUP6 DUP10 SGT ISZERO PUSH2 0x4257 JUMPI DUP6 DUP10 DUP1 SWAP8 POP DUP2 SWAP11 POP POP POP JUMPDEST DUP3 DUP7 SGT ISZERO PUSH2 0x426A JUMPI DUP3 DUP7 DUP1 SWAP5 POP DUP2 SWAP8 POP POP POP JUMPDEST DUP6 DUP10 SGT ISZERO PUSH2 0x427D JUMPI DUP6 DUP10 DUP1 SWAP8 POP DUP2 SWAP11 POP POP POP JUMPDEST DUP5 DUP9 SGT ISZERO PUSH2 0x4290 JUMPI DUP5 DUP9 DUP1 SWAP7 POP DUP2 SWAP10 POP POP POP JUMPDEST DUP2 DUP6 SGT ISZERO PUSH2 0x42A3 JUMPI DUP2 DUP6 DUP1 SWAP4 POP DUP2 SWAP7 POP POP POP JUMPDEST DUP5 DUP9 SGT ISZERO PUSH2 0x42B6 JUMPI DUP5 DUP9 DUP1 SWAP7 POP DUP2 SWAP10 POP POP POP JUMPDEST DUP1 DUP5 SGT ISZERO PUSH2 0x42C9 JUMPI DUP1 DUP5 DUP1 SWAP3 POP DUP2 SWAP6 POP POP POP JUMPDEST DUP4 DUP8 SGT ISZERO PUSH2 0x42DC JUMPI DUP4 DUP8 DUP1 SWAP6 POP DUP2 SWAP9 POP POP POP JUMPDEST DUP5 DUP8 SGT ISZERO PUSH2 0x42EF JUMPI DUP5 DUP8 DUP1 SWAP7 POP DUP2 SWAP9 POP POP POP JUMPDEST DUP3 DUP6 SGT ISZERO PUSH2 0x4302 JUMPI DUP3 DUP6 DUP1 SWAP5 POP DUP2 SWAP7 POP POP POP JUMPDEST DUP5 DUP8 SGT ISZERO PUSH2 0x4315 JUMPI DUP5 DUP8 DUP1 SWAP7 POP DUP2 SWAP9 POP POP POP JUMPDEST DUP6 DUP9 SGT ISZERO PUSH2 0x4328 JUMPI DUP6 DUP9 DUP1 SWAP8 POP DUP2 SWAP10 POP POP POP JUMPDEST DUP6 DUP8 SGT ISZERO PUSH2 0x433B JUMPI DUP6 DUP8 DUP1 SWAP8 POP DUP2 SWAP9 POP POP POP JUMPDEST PUSH1 0x4 DUP11 EQ ISZERO PUSH2 0x435F JUMPI PUSH2 0x434E DUP9 DUP9 PUSH2 0x44E2 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x5 DUP11 EQ ISZERO PUSH2 0x437A JUMPI DUP7 SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x6 DUP11 EQ ISZERO PUSH2 0x439E JUMPI PUSH2 0x438D DUP8 DUP8 PUSH2 0x44E2 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x7 DUP11 EQ ISZERO PUSH2 0x43B9 JUMPI DUP6 SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x8 DUP11 EQ ISZERO PUSH2 0x43DD JUMPI PUSH2 0x43CC DUP7 DUP7 PUSH2 0x44E2 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x9 DUP11 EQ ISZERO PUSH2 0x43F8 JUMPI DUP5 SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x4466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C6973742E6C656E677468203E20390000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 PUSH2 0x447E JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP4 DUP2 PUSH2 0x448D JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x44C8 JUMPI PUSH1 0x0 DUP1 PUSH2 0x44AB DUP7 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH1 0x1 DUP8 SUB DUP8 PUSH2 0x4537 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH2 0x44BD DUP3 DUP3 PUSH2 0x44E2 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x44DD JUMP JUMPDEST PUSH2 0x44D8 DUP5 PUSH1 0x0 PUSH1 0x1 DUP6 SUB DUP5 PUSH2 0x4609 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP1 DUP5 DUP2 PUSH2 0x44F0 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 DUP7 DUP2 PUSH2 0x44FB JUMPI INVALID JUMPDEST SMOD ADD DUP2 PUSH2 0x4504 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x452E PUSH2 0x4528 PUSH1 0x2 DUP7 DUP2 PUSH2 0x4517 JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 DUP7 DUP2 PUSH2 0x4522 JUMPI INVALID JUMPDEST SDIV PUSH2 0x4677 JUMP JUMPDEST DUP3 PUSH2 0x4677 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 LT PUSH2 0x4546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO DUP1 ISZERO PUSH2 0x4556 JUMPI POP DUP5 DUP5 GT ISZERO JUMPDEST PUSH2 0x455F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 GT ISZERO DUP1 ISZERO PUSH2 0x456F JUMPI POP DUP5 DUP4 GT ISZERO JUMPDEST PUSH2 0x4578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x45FE JUMPI PUSH1 0x0 PUSH2 0x458D DUP9 DUP9 DUP9 PUSH2 0x4705 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT PUSH2 0x459E JUMPI DUP1 SWAP6 POP PUSH2 0x45F8 JUMP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x45B1 JUMPI PUSH1 0x1 DUP2 ADD SWAP7 POP PUSH2 0x45F7 JUMP JUMPDEST DUP1 DUP6 GT ISZERO DUP1 ISZERO PUSH2 0x45C0 JUMPI POP DUP4 DUP2 LT JUMPDEST PUSH2 0x45C6 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x45D4 DUP10 DUP10 DUP5 DUP10 PUSH2 0x4609 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x45E7 DUP11 PUSH1 0x1 DUP6 ADD DUP11 DUP10 PUSH2 0x4609 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x45FF JUMP JUMPDEST JUMPDEST POP PUSH2 0x4579 JUMP JUMPDEST JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 GT ISZERO PUSH2 0x4618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0x4625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x4659 JUMPI PUSH1 0x0 PUSH2 0x463B DUP7 DUP7 DUP7 PUSH2 0x4705 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT PUSH2 0x464C JUMPI DUP1 SWAP4 POP PUSH2 0x4653 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP5 POP JUMPDEST POP PUSH2 0x4626 JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4665 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP PUSH1 0x0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x4690 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x46A6 JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x46A5 JUMPI POP DUP4 DUP2 SLT JUMPDEST JUMPDEST PUSH2 0x46FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x48F6 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x2 DUP5 DUP7 ADD DUP2 PUSH2 0x4715 JUMPI INVALID JUMPDEST DIV DUP2 MLOAD DUP2 LT PUSH2 0x4720 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0x1 DUP4 ADD SWAP3 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x47F3 JUMPI JUMPDEST PUSH1 0x1 DUP5 ADD SWAP4 POP DUP1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4752 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SLT PUSH2 0x473F JUMPI JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4773 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SGT PUSH2 0x4760 JUMPI DUP3 DUP5 LT ISZERO PUSH2 0x47E5 JUMPI DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4794 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x47A8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x47BC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x47CF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP PUSH2 0x47EE JUMP JUMPDEST DUP3 SWAP2 POP POP PUSH2 0x47F5 JUMP JUMPDEST PUSH2 0x4737 JUMP JUMPDEST POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x481A SWAP2 SWAP1 PUSH2 0x481D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x483F SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x483B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x4823 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID NUMBER PUSH2 0x6E6E PUSH16 0x7420686176652074686520616E737765 PUSH19 0x206D696E696D756D2068696768657220746865 KECCAK256 PUSH14 0x61784D7573742068617665206120 PUSH17 0x726576696F757320616E7377657220746F KECCAK256 PUSH17 0x756C6C2066726F6D526F756E64206E6F74 KECCAK256 PUSH4 0x75727265 PUSH15 0x746C7920656C696769626C6520666F PUSH19 0x207265706F7274696E674E6577206F7261636C PUSH6 0x732063616E6E PUSH16 0x7420706172746963697061746520696E KECCAK256 PUSH10 0x6E2D70726F6772657373 KECCAK256 PUSH19 0x6F756E64735369676E6564536166654D617468 GASPRICE KECCAK256 PUSH2 0x6464 PUSH10 0x74696F6E206F76657266 PUSH13 0x6F77526573746172742064656C PUSH2 0x7920 PUSH14 0x757374206265206C657373207468 PUSH2 0x6E20 PUSH16 0x7261636C6520636F756E744F6E6C7920 PUSH22 0x7064617461626C652062792077686974656C69737465 PUSH5 0x206F726163 PUSH13 0x657343616E6E6F742068617665 KECCAK256 PUSH21 0x686520616E73776572206D61782068696768657220 PUSH16 0x7261636C6520636F756E744164647265 PUSH20 0x73206973206E6F7420612077686974656C697374 PUSH6 0x64206F726163 PUSH13 0x65416464726573732069732061 PUSH13 0x7265616479207265636F726465 PUSH5 0x2061732061 PUSH15 0x206F7261636C654F7261636C652068 PUSH2 0x7320 PUSH3 0x65656E KECCAK256 PUSH19 0x656D6F7665642066726F6D2077686974656C69 PUSH20 0x74A26469706673582212201CD41CBCFBD3D651BC DUP2 0xCD 0xE6 LOG2 SWAP15 0xE4 0xAB 0xBD 0xDD STATICCALL PUSH17 0xEB6C8B072182CDB6856A915564736F6C63 NUMBER STOP MOD MUL STOP CALLER ",
				"sourceMap": "724:17210:8:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;724:17210:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9903:159;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9903:159:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9022:241;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9022:241:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1666:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1611:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6256:550;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6256:550:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7452:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7452:96:8;;;;;;;;;;;;;;;;;1455:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6888:311;;;:::i;:::-;;10152:133;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7615:127;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7258:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8012:113;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8204:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1641:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1691:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9607:143;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9607:143:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;781:253:5;;;:::i;:::-;;7812:134:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;147:28:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11815:97:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11815:97:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;11815:97:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;11815:97:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;11815:97:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;11815:97:8;;;;;;;;;;;;;;;:::i;:::-;;5229:597;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5229:597:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8428:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8428:145:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8724:152;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8724:152:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4209:591;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4209:591:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11464:182;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11464:182:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;11064:259;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11064:259:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1515:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9342:133;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1579:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1422:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1547:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3441:337;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3441:337:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;542:150:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;542:150:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;10469:412:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10469:412:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9903:159;9993:7;10017:6;:24;10031:8;10017:24;;;;;;;;;;;;;;;:40;;;;;;;;;;;;10010:47;;;;9903:159;;;:::o;9022:241::-;9102:4;9116:14;9140:8;9116:33;;9155:17;9175:6;:15;9182:7;9175:15;;;;;;;;;;;;;;;:31;;;;;;;;;;;;9155:51;;9232:1;9219:10;:14;;;:39;;;;;9251:7;9237:21;;:10;:21;;;;9219:39;9212:46;;;;9022:241;;;:::o;1666:21::-;;;;;;;;;;;;;:::o;1611:26::-;;;;;;;;;;;;;:::o;6256:550::-;1168:5:5;;;;;;;;;;;1154:19;;:10;:19;;;1146:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6460:11:8::1;6473;6486:13;17046:16;17065:13;:11;:13::i;:::-;17046:32;;17130:4;17117:17;;:9;:17;;;;17109:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17207:4;17199:12;;:4;:12;;;;17191:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17288:1;17275:9;:14;;;:43;;;;17305:13;17293:25;;:9;:25;;;17275:43;17267:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6525:17:::2;6509:13;;:33;;;;;;;;;;;;;;;;;;6565:11;6548:14;;:28;;;;;;;;;;;;;;;;;;6599:11;6582:14;;:28;;;;;;;;;;;;;;;;;;6631:13;6616:12;;:28;;;;;;;;;;;;;;;;;;6660:8;6650:7;;:18;;;;;;;;;;;;;;;;;;6747:11;6680:121;;6728:11;6680:121;;6707:13;;;;;;;;;;;6680:121;;;6766:13;6787:8;6680:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1206:1:5::1;;;;6256:550:8::0;;;;;:::o;7452:96::-;7497:16;7528:15;7521:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7452:96;:::o;1455:29::-;;;;;;;;;;;;;:::o;6888:311::-;6939:26;6968:14;;;;;;;;;;;6939:43;;6989:17;7009:49;7043:14;;;;;;;;;;;7009:49;;:4;;;;;;;;;;;:14;;;7032:4;7009:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7009:29:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7009:29:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7009:29:8;;;;;;;;;;;;;;;;:33;;:49;;;;:::i;:::-;6989:69;;7089:9;7064:14;;:35;;;;;;;;;;;;;;;;;;7132:9;7110:18;:31;;;7106:89;;7178:9;7156:32;;;;;;;;;;7106:89;6888:311;;:::o;10152:133::-;10224:7;10248;:19;10256:10;10248:19;;;;;;;;;;;;;;;:32;;;;;;;;;;;;10241:39;;;;10152:133;:::o;7615:127::-;7699:6;7722:15;:13;:15::i;:::-;7715:22;;7615:127;:::o;7258:100::-;7302:6;7330:15;:22;;;;7316:37;;7258:100;:::o;8012:113::-;8083:7;8107:13;;;;;;;;;;;8100:20;;;;8012:113;:::o;8204:106::-;8265:7;8289:16;;;;;;;;;;;8282:23;;;;8204:106;:::o;1641:21::-;;;;;;;;;;;;;:::o;1691:26::-;;;;:::o;9607:143::-;9687:7;9711:6;:24;9725:8;9711:24;;;;;;;;;;;;;;;:34;;;;;;;;;;;;9704:41;;;;9607:143;;;:::o;781:253:5:-;851:12;;;;;;;;;;;837:26;;:10;:26;;;829:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;897:16;916:5;;;;;;;;;;;897:24;;935:10;927:5;;:18;;;;;;;;;;;;;;;;;;974:1;951:12;;:25;;;;;;;;;;;;;;;;;;1018:10;988:41;;1008:8;988:41;;;;;;;;;;;;781:253;:::o;7812:134:8:-;7899:7;7923:18;:16;:18::i;:::-;7916:25;;7812:134;:::o;147:28:5:-;;;;;;;;;;;;;:::o;11815:97:8:-;11885:22;:20;:22::i;:::-;11815:97;;;:::o;5229:597::-;1168:5:5;;;;;;;;;;;1154:19;;:10;:19;;;1146:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5402:7:8::1;2462;17605:41:::0;::::1;:7;:16;17613:7;17605:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:41;;;17597:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5450:16:::2;;;;;;;;;;;5419:7;:16;5427:7;5419:16;;;;;;;;;;;;;;;:28;;;:47;;;;;;;;;;;;;;;;;;5472:12;5487:15;5503:20;5521:1;5503:13;:11;:13::i;:::-;:17;;;;:20;;;;:::i;:::-;5487:37;;;;;;;;;;;;;;;;;;;;;;;;;;;5472:52;;5530:12;5545:7;:16;5553:7;5545:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;5530:37;;5595:5;5573:7;:13;5581:4;5573:13;;;;;;;;;;;;;;;:19;;;:27;;;;;;;;;;;;;;;;;;5613:7;:16;5621:7;5613:16;;;;;;;;;;;;;;;:22;;;5606:29;;;;;;;;;;;5666:4;5641:15;5657:5;5641:22;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5676:15;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5723:7;5709:22;;;;;;;;;;;;5738:83;5757:13;;;;;;;;;;;5772:11;5785;5798:13;5813:7;;;;;;;;;;;5738:18;:83::i;:::-;17692:1;;1206::5::1;5229:597:8::0;;;;:::o;8428:145::-;8525:6;8548:20;8559:8;8548:10;:20::i;:::-;8541:27;;8428:145;;;:::o;8724:152::-;8824:7;8848:23;8862:8;8848:13;:23::i;:::-;8841:30;;8724:152;;;:::o;4209:591::-;1168:5:5;;;;;;;;;;;1154:19;;:10;:19;;;1146:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4381:7:8::1;2462;17444:41:::0;::::1;:7;:16;17452:7;17444:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:41;;;;17436:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4422:2:::2;4406:13;:11;:13::i;:::-;:18;;;4398:62;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;4499:25;4516:7;4499:16;:25::i;:::-;4466:7;:16;4474:7;4466:16;;;;;;;;;;;;;;;:30;;;:58;;;;;;;;;;;;;;;;;;2462:7;4530;:16;4538:7;4530:16;;;;;;;;;;;;;;;:28;;;:40;;;;;;;;;;;;;;;;;;4576:15;4597:7;4576:29;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4576:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4643;4670:1;4643:15;:22;;;;:26;;:29;;;;:::i;:::-;4611:7;:16;4619:7;4611:16;;;;;;;;;;;;;;;:22;;;:62;;;;;;;;;;;;;;;;;;4697:7;4685:20;;;;;;;;;;;;4712:83;4731:13;;;;;;;;;;;4746:11;4759;4772:13;4787:7;;;;;;;;;;;4712:18;:83::i;:::-;1206:1:5::1;4209:591:8::0;;;;:::o;11464:182::-;11542:6;11550:7;11575;:16;11583:7;11575:16;;;;;;;;;;;;;;;:29;;;11606:7;:16;11614:7;11606:16;;;;;;;;;;;;;;;:34;;;;;;;;;;;;11567:74;;;;;;;;;11464:182;;;:::o;11064:259::-;1168:5:5;;;;;;;;;;;1154:19;;:10;:19;;;1146:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11187:7:8::1;11169:14;;;;;;;;;;;:25;;;;11161:56;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11231:4;;;;;;;;;;;:13;;;11245:10;11257:7;11231:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;11231:34:8;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;11231:34:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;11231:34:8;;;;;;;;;;;;;;;;11223:67;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11296:22;:20;:22::i;:::-;11064:259:::0;;:::o;1515:28::-;;;;;;;;;;;;;:::o;9342:133::-;9412:7;9436:6;:24;9443:16;;;;;;;;;;;9436:24;;;;;;;;;;;;;;;:34;;;;;;;;;;;;9429:41;;;;9342:133;:::o;1579:28::-;;;;;;;;;;;;;:::o;1422:29::-;;;;;;;;;;;;;:::o;1547:28::-;;;;;;;;;;;;;:::o;3441:337::-;3536:6;16768:16;;;;;;;;;;;16761:23;;:3;:23;;;:57;;;;16795:23;16816:1;16795:16;;;;;;;;;;;:20;;;;:23;;;;:::i;:::-;16788:30;;:3;:30;;;16761:57;16753:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16872:1;16865:3;:8;;;:32;;;;16877:20;16886:10;16894:1;16886:3;:7;;;;:10;;;;:::i;:::-;16877:8;:20::i;:::-;16865:32;:56;;;;16901:20;16910:10;16918:1;16910:3;:7;;;;:10;;;;:::i;:::-;16901:8;:20::i;:::-;16865:56;16857:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3577:6:::1;15557:20;15580:7;:19;15588:10;15580:19;;;;;;;;;;;;;;;:33;;;;;;;;;;;;15557:56;;15644:1;15627:13;:18;;;;15619:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15718:3;15701:20;;:13;:20;;;;15693:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15827:3;15792:38;;:7;:19;15800:10;15792:19;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:38;;;;15784:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15927:3;15887:43;;:7;:19;15895:10;15887:19;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:43;;;15879:83;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3594:29:::2;3615:6;3594:13;:29::i;:::-;3629:41;3646:7;3662:6;3629:16;:41::i;:::-;3676:33;3701:6;3676:17;:33::i;:::-;3715:25;3732:6;3715:9;:25::i;:::-;3746:27;3765:6;3746:11;:27::i;:::-;16958:1:::1;;3441:337:::0;;;:::o;542:150:5:-;1168:5;;;;;;;;;;;1154:19;;:10;:19;;;1146:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:3:::1;619:12;;:18;;;;;;;;;;;;;;;;;;683:3;649:38;;676:5;::::0;::::1;;;;;;;;;649:38;;;;;;;;;;;;542:150:::0;:::o;10469:412:8:-;10558:14;10583:7;10558:33;;10597:17;10617:7;:19;10625:10;10617:19;;;;;;;;;;;;;;;:32;;;;;;;;;;;;10597:52;;10676:6;10663:19;;:9;:19;;;;10655:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10749:21;10763:6;10749:9;:13;;;;:21;;;;:::i;:::-;10714:7;:19;10722:10;10714:19;;;;;;;;;;;;;;;:32;;;:56;;;;;;;;;;;;;;;;;;10793:26;10812:6;10793:14;;;;;;;;;;;:18;;;;:26;;;;:::i;:::-;10776:14;;:43;;;;;;;;;;;;;;;;;;10833:4;;;;;;;;;;;:13;;;10847:10;10867:6;10859:15;;10833:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10833:42:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10833:42:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10833:42:8;;;;;;;;;;;;;;;;10826:50;;;;10469:412;;;;:::o;1236:165:31:-;1294:7;1322:1;1317;:6;;1309:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:9;1380:1;1376;:5;1364:17;;1395:1;1388:8;;;1236:165;;;;:::o;12006:116:8:-;12066:6;12089;:21;12096:13;;;;;;;;;;;12089:21;;;;;;;;;;;;;;;:28;;;12082:35;;12006:116;:::o;12191:123::-;12254:7;12278:6;:21;12285:13;;;;;;;;;;;12278:21;;;;;;;;;;;;;;;:31;;;;;;;;;;;;12271:38;;;;12191:123;:::o;1344:161:10:-;1400:6;1427:1;1422:6;;:1;:6;;;;1414:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1469:8;1484:1;1480;:5;1469:16;;1499:1;1492:8;;;1344:161;;;;:::o;12377:132:8:-;12450:6;12473;:24;12487:8;12473:24;;;;;;;;;;;;;;;:31;;;12466:38;;12377:132;;;:::o;12575:139::-;12651:7;12675:6;:24;12689:8;12675:24;;;;;;;;;;;;;;;:34;;;;;;;;;;;;12668:41;;;;12575:139;;;:::o;15199:278::-;15276:6;15292:19;15314:16;;;;;;;;;;;15292:38;;15356:1;15340:12;:17;;;;:65;;;;;15377:7;:16;15385:7;15377:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;15361:44;;:12;:44;;;15340:65;15336:105;;;15422:12;15415:19;;;;;15336:105;15453:19;15470:1;15453:12;:16;;;;:19;;;;:::i;:::-;15446:26;;;15199:278;;;;:::o;934:158:10:-;990:6;1004:8;1019:1;1015;:5;1004:16;;1039:1;1034:6;;:1;:6;;;;1026:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1086:1;1079:8;;;934:158;;;;:::o;15080:115:8:-;15144:4;15189:1;15165:6;:11;15172:3;15165:11;;;;;;;;;;;;;;;:21;;;;;;;;;;;;:25;;;15158:32;;15080:115;;;:::o;14803:273::-;14867:4;14881:16;14900:6;:11;14907:3;14900:11;;;;;;;;;;;;;;;:21;;;;;;;;;;;;14881:40;;14927:19;14949:6;:11;14956:3;14949:11;;;;;;;;;;;;;;;:19;;:27;;;;;;;;;;;;14927:49;;15001:1;14989:9;:13;;;:33;;;;;15021:1;15006:12;:16;;;14989:33;:82;;;;;15056:15;15026:27;15040:12;15026:27;;:9;:13;;;;:27;;;;:::i;:::-;:45;;;14989:82;14982:89;;;;14803:273;;;:::o;12744:529::-;12806:3;16477:23;16498:1;16477:16;;;;;;;;;;;:20;;;;:23;;;;:::i;:::-;16470:30;;:3;:30;;;16466:52;;;12825:3:::1;16563:19;16585:7;:19;16593:10;16585:19;;;;;;;;;;;;;;;:36;;;;;;;;;;;;16563:58;;;;16651:12;;;;;;;;;;;16637:26;;:11;:26;16631:3;:32;;;:52;;;;16682:1;16667:11;:16;16631:52;16627:74;;;12838:35:::2;12862:10;12870:1;12862:3;:7;;;;:10;;;;:::i;:::-;12838:23;:35::i;:::-;12899:3;12880:16;;:22;;;;;;;;;;;;;;;;;;12941:14;;;;;;;;;;;12908:6;:11;12915:3;12908:11;;;;;;;;;;;;;;;:19;;:30;;;:47;;;;;;;;;;;;;;;;;;12994:14;;;;;;;;;;;12961:6;:11;12968:3;12961:11;;;;;;;;;;;;;;;:19;;:30;;;:47;;;;;;;;;;;;;;;;;;13050:13;;;;;;;;;;;13014:6;:11;13021:3;13014:11;;;;;;;;;;;;;;;:19;;:33;;;:49;;;;;;;;;;;;;;;;;;13099:7;;;;;;;;;;;13069:6;:11;13076:3;13069:11;;;;;;;;;;;;;;;:19;;:27;;;:37;;;;;;;;;;;;;;;;;;13143:15;13112:6;:11;13119:3;13112:11;;;;;;;;;;;;;;;:21;;;:47;;;;;;;;;;;;;;;;;;13205:3;13166:7;:19;13174:10;13166:19;;;;;;;;;;;;;;;:36;;;:42;;;;;;;;;;;;;;;;;;13234:10;13220:48;;13229:3;13220:48;;;13246:6;:11;13253:3;13246:11;;;;;;;;;;;;;;;:21;;;;;;;;;;;;13220:48;;;;;;;;;;;;;;;;;;;;16627:74:::1;16510:1;;16466:52:::0;12744:529;;:::o;14374:307::-;14469:3;16364:1;16330:6;:11;16337:3;16330:11;;;;;;;;;;;;;;;:19;;:30;;;;;;;;;;;;:35;;;;16322:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14482:6:::1;:11;14489:3;14482:11;;;;;;;;;;;;;;;:19;;:27;;14515:7;14482:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;14482:41:8;;;;;;;;;;;;;;;;;;;14569:3;14529:7;:19;14537:10;14529:19;;;;;;;;;;;;;;;:37;;;:43;;;;;;;;;;;;;;;;;;14613:7;14578;:19;14586:10;14578:19;;;;;;;;;;;;;;;:32;;:42;;;;14665:10;14632:44;;14660:3;14632:44;;14651:7;14632:44;;;;;;;;;;14374:307:::0;;;:::o;13629:364::-;13705:3;16068:6;:11;16075:3;16068:11;;;;;;;;;;;;;;;:19;;:30;;;;;;;;;;;;16030:68;;:6;:11;16037:3;16030:11;;;;;;;;;;;;;;;:19;;:27;;:34;;;;:68;16026:90;;13718:16:::1;13737:52;13761:6;:11;13768:3;13761:11;;;;;;;;;;;;;;;:19;;:27;;13737:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;:52::i;:::-;13718:71;;13816:9;13795:6;:11;13802:3;13795:11;;;;;;;;;;;;;;;:18;;:30;;;;13862:15;13831:6;:11;13838:3;13831:11;;;;;;;;;;;;;;;:21;;;:47;;;;;;;;;;;;;;;;;;13914:3;13884:6;:11;13891:3;13884:11;;;;;;;;;;;;;;;:27;;;:33;;;;;;;;;;;;;;;;;;13939:3;13923:13;;:19;;;;;;;;;;;;;;;;;;13979:3;13954:34;;13968:9;13954:34;13984:3;13954:34;;;;;;;;;;;;;;;;;;16108:1;16026:90:::0;13629:364;;:::o;13997:373::-;14048:15;14066:6;:11;14073:3;14066:11;;;;;;;;;;;;;;;:19;;:33;;;;;;;;;;;;14048:51;;14105:17;14125:27;14144:7;14125:14;;;;;;;;;;;:18;;;;:27;;;;:::i;:::-;14105:47;;14176:9;14159:14;;:26;;;;;;;;;;;;;;;;;;14208:27;14227:7;14208:14;;;;;;;;;;;:18;;;;:27;;;;:::i;:::-;14191:14;;:44;;;;;;;;;;;;;;;;;;14276:45;14313:7;14276;:19;14284:10;14276:19;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:36;;;;:45;;;;:::i;:::-;14241:7;:19;14249:10;14241:19;;;;;;;;;;;;;;;:32;;;:80;;;;;;;;;;;;;;;;;;14355:9;14333:32;;;;;;;;;;;;13997:373;;;:::o;14685:114::-;14755:3;16214:6;:11;16221:3;16214:11;;;;;;;;;;;;;;;:19;;:30;;;;;;;;;;;;16176:68;;:6;:11;16183:3;16176:11;;;;;;;;;;;;;;;:19;;:27;;:34;;;;:68;16172:90;;;14775:6:::1;:11;14782:3;14775:11;;;;;;;;;;;;;;;:19;;;14768:26:::0;::::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16172:90:::0;14685:114;;:::o;1350:165:9:-;1408:7;1436:1;1431:6;;:1;:6;;;;1423:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1478:9;1494:1;1490;:5;1478:17;;1509:1;1502:8;;;1350:165;;;;:::o;934:158:11:-;990:6;1004:8;1019:1;1015;:5;1004:16;;1039:1;1034:6;;:1;:6;;;;1026:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1086:1;1079:8;;;934:158;;;;:::o;13277:348:8:-;13349:3;17744:13;17753:3;17744:8;:13::i;:::-;17740:35;;;13381:3:::1;17873:1;17841:6;:18;17848:10;17856:1;17848:3;:7;;;;:10;;;;:::i;:::-;17841:18;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:33;;;;17833:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13394:13:::2;13410:10;13418:1;13410:3;:7;;;;:10;;;;:::i;:::-;13394:26;;13447:6;:14;13454:6;13447:14;;;;;;;;;;;;;;;:21;;;13426:6;:11;13433:3;13426:11;;;;;;;;;;;;;;;:18;;:42;;;;13504:6;:14;13511:6;13504:14;;;;;;;;;;;;;;;:30;;;;;;;;;;;;13474:6;:11;13481:3;13474:11;;;;;;;;;;;;;;;:27;;;:60;;;;;;;;;;;;;;;;;;13571:15;13540:6;:11;13547:3;13540:11;;;;;;;;;;;;;;;:21;;;:47;;;;;;;;;;;;;;;;;;13601:6;:11;13608:3;13601:11;;;;;;;;;;;;;;;:19;;;13594:26:::0;::::2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17925:1;17767::::1;17740:35:::0;13277:348;;:::o;1014:260:3:-;1097:6;1125:4;:11;1121:1;:15;1113:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1188:1;1173:4;:11;:16;1169:101;;1206:15;1216:4;1206:9;:15::i;:::-;1199:22;;;;1169:101;1249:14;1258:4;1249:8;:14::i;:::-;1242:21;;1014:260;;;;:::o;936:162:9:-;994:7;1009:9;1025:1;1021;:5;1009:17;;1045:1;1040:6;;:1;:6;;;;1032:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1092:1;1085:8;;;936:162;;;;:::o;1434:2334:3:-;1497:6;1695:11;1709:4;:11;1695:25;;1726:9;1738:4;1743:1;1738:7;;;;;;;;;;;;;;1726:19;;1762:1;1755:3;:8;1751:26;;;1773:2;1766:9;;;;;;1751:26;1836:9;1848:4;1853:1;1848:7;;;;;;;;;;;;;;1836:19;;1870:2;1865;:7;1861:35;;;1887:2;1891;1875:19;;;;;;;;1861:35;1912:1;1905:3;:8;1901:50;;;1923:26;1942:2;1946;1923:18;:26::i;:::-;1916:33;;;;;;;1901:50;2010:9;2022:4;2027:1;2022:7;;;;;;;;;;;;;;2010:19;;2044:2;2039;:7;2035:35;;;2061:2;2065;2049:19;;;;;;;;2035:35;2084:2;2079;:7;2075:35;;;2101:2;2105;2089:19;;;;;;;;2075:35;2126:1;2119:3;:8;2115:26;;;2137:2;2130:9;;;;;;;;2115:26;2200:9;2212:4;2217:1;2212:7;;;;;;;;;;;;;;2200:19;;2225:9;2241:3;2237:1;:7;:26;;173:77;2237:26;;;2247:4;2252:1;2247:7;;;;;;;;;;;;;;2237:26;2225:38;;2269:9;2285:3;2281:1;:7;:26;;173:77;2281:26;;;2291:4;2296:1;2291:7;;;;;;;;;;;;;;2281:26;2269:38;;2313:9;2329:3;2325:1;:7;:26;;173:77;2325:26;;;2335:4;2340:1;2335:7;;;;;;;;;;;;;;2325:26;2313:38;;2357:9;2373:3;2369:1;:7;:26;;173:77;2369:26;;;2379:4;2384:1;2379:7;;;;;;;;;;;;;;2369:26;2357:38;;2401:9;2417:3;2413:1;:7;:26;;173:77;2413:26;;;2423:4;2428:1;2423:7;;;;;;;;;;;;;;2413:26;2401:38;;2454:2;2449;:7;2445:35;;;2471:2;2475;2459:19;;;;;;;;2445:35;2494:2;2489;:7;2485:35;;;2511:2;2515;2499:19;;;;;;;;2485:35;2534:2;2529;:7;2525:35;;;2551:2;2555;2539:19;;;;;;;;2525:35;2574:2;2569;:7;2565:35;;;2591:2;2595;2579:19;;;;;;;;2565:35;2614:2;2609;:7;2605:35;;;2631:2;2635;2619:19;;;;;;;;2605:35;2654:2;2649;:7;2645:35;;;2671:2;2675;2659:19;;;;;;;;2645:35;2694:2;2689;:7;2685:35;;;2711:2;2715;2699:19;;;;;;;;2685:35;2734:2;2729;:7;2725:35;;;2751:2;2755;2739:19;;;;;;;;2725:35;2774:2;2769;:7;2765:35;;;2791:2;2795;2779:19;;;;;;;;2765:35;2814:2;2809;:7;2805:35;;;2831:2;2835;2819:19;;;;;;;;2805:35;2854:2;2849;:7;2845:35;;;2871:2;2875;2859:19;;;;;;;;2845:35;2894:2;2889;:7;2885:35;;;2911:2;2915;2899:19;;;;;;;;2885:35;2934:2;2929;:7;2925:35;;;2951:2;2955;2939:19;;;;;;;;2925:35;2974:2;2969;:7;2965:35;;;2991:2;2995;2979:19;;;;;;;;2965:35;3014:2;3009;:7;3005:35;;;3031:2;3035;3019:19;;;;;;;;3005:35;3054:2;3049;:7;3045:35;;;3071:2;3075;3059:19;;;;;;;;3045:35;3094:2;3089;:7;3085:35;;;3111:2;3115;3099:19;;;;;;;;3085:35;3134:2;3129;:7;3125:35;;;3151:2;3155;3139:19;;;;;;;;3125:35;3174:2;3169;:7;3165:35;;;3191:2;3195;3179:19;;;;;;;;3165:35;3491:1;3484:3;:8;3480:50;;;3502:26;3521:2;3525;3502:18;:26::i;:::-;3495:33;;;;;;;;;;;;;;3480:50;3546:1;3539:3;:8;3535:26;;;3557:2;3550:9;;;;;;;;;;;;;;3535:26;3577:1;3570:3;:8;3566:50;;;3588:26;3607:2;3611;3588:18;:26::i;:::-;3581:33;;;;;;;;;;;;;;3566:50;3632:1;3625:3;:8;3621:26;;;3643:2;3636:9;;;;;;;;;;;;;;3621:26;3663:1;3656:3;:8;3652:50;;;3674:26;3693:2;3697;3674:18;:26::i;:::-;3667:33;;;;;;;;;;;;;;3652:50;3718:1;3711:3;:8;3707:26;;;3729:2;3722:9;;;;;;;;;;;;;;3707:26;3738:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:2334;;;;:::o;3840:441::-;3914:6;3930:11;3944:4;:11;3930:25;;3961:19;3989:1;3983:3;:7;;;;;;3961:29;;4011:1;4006;4000:3;:7;;;;;;:12;3996:281;;;4022:14;4044;4087:62;4102:4;4108:1;4117;4111:3;:7;4134:1;4120:11;:15;4137:11;4087:14;:62::i;:::-;4066:83;;;;;;;;4164:36;4183:7;4192;4164:18;:36::i;:::-;4157:43;;;;;;;;3996:281;4228:42;4240:4;4246:1;4255;4249:3;:7;4258:11;4228;:42::i;:::-;4221:49;;;;3840:441;;;;:::o;818:179:12:-;888:6;904:16;943:1;938;933:2;:6;;;;;;929:1;924:2;:6;;;;;;:15;923:21;;;;;;904:40;;957:35;961:19;970:1;965:2;:6;;;;;;978:1;973:2;:6;;;;;;961:3;:19::i;:::-;982:9;957:3;:35::i;:::-;950:42;;;818:179;;;;:::o;5202:632:3:-;5319:6;5327;5356:2;5351;:7;5343:16;;;;;;5379:2;5373;:8;;:20;;;;;5391:2;5385;:8;;5373:20;5365:29;;;;;;5414:2;5408;:8;;:20;;;;;5426:2;5420;:8;;5408:20;5400:29;;;;;;5436:394;5443:4;5436:394;;;5457:13;5473:23;5483:4;5489:2;5493;5473:9;:23::i;:::-;5457:39;;5514:8;5508:2;:14;5504:320;;5539:8;5534:13;;5504:320;;;5577:2;5566:8;:13;5562:262;;;5607:1;5596:8;:12;5591:17;;5562:262;;;5646:8;5640:2;:14;;:31;;;;;5669:2;5658:8;:13;5640:31;5633:39;;;;5682:9;5694:35;5706:4;5712:2;5716:8;5726:2;5694:11;:35::i;:::-;5682:47;;5739:9;5751:39;5763:4;5780:1;5769:8;:12;5783:2;5787;5751:11;:39::i;:::-;5739:51;;5808:2;5812;5800:15;;;;;;;;;5562:262;5504:320;5436:394;;;;5202:632;;;;;;;;;:::o;4437:597::-;4540:6;4570:1;4564:2;:7;;4556:16;;;;;;4591:2;4586:1;:7;;4578:16;;;;;;4600:409;4612:2;4607;:7;4600:409;;;4624:15;4642:23;4652:4;4658:2;4662;4642:9;:23::i;:::-;4624:41;;4682:10;4677:1;:15;4673:330;;4824:10;4819:15;;4673:330;;;4993:1;4980:10;:14;4975:19;;4673:330;4600:409;;;;5021:4;5026:2;5021:8;;;;;;;;;;;;;;5014:15;;4437:597;;;;;;:::o;305:284:12:-;375:6;457:8;473:2;468;:7;457:18;;496:1;490:2;:7;;:18;;;;;506:2;501:1;:7;;490:18;489:42;;;;519:1;514:2;:6;:16;;;;;528:2;524:1;:6;514:16;489:42;481:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;583:1;576:8;;;305:284;;;;:::o;6156:1217:3:-;6249:7;6402:12;6417:4;6434:1;6428:2;6423;:7;6422:13;;;;;;6417:19;;;;;;;;;;;;;;6402:34;;6448:1;6442:7;;;;6504:1;6498:7;;;;6511:858;6518:4;6511:858;;;6532:55;6551:1;6545:7;;;;6580:5;6569:4;6574:2;6569:8;;;;;;;;;;;;;;:16;6532:55;;6594;6613:1;6607:7;;;;6642:5;6631:4;6636:2;6631:8;;;;;;;;;;;;;;:16;6594:55;;6665:2;6660;:7;6656:707;;;6703:4;6708:2;6703:8;;;;;;;;;;;;;;6713:4;6718:2;6713:8;;;;;;;;;;;;;;6680:4;6685:2;6680:8;;;;;;;;;;;;;6690:4;6695:2;6690:8;;;;;;;;;;;;;6679:43;;;;;;;;;;6656:707;;;7352:2;7345:9;;;;;6656:707;6511:858;;;6156:1217;;;;;;;:::o;724:17210:8:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
			},
			"methodIdentifiers": {
				"acceptOwnership()": "79ba5097",
				"addOracle(address,uint32,uint32,uint32)": "b6ef5b03",
				"allocatedFunds()": "d4cc54e4",
				"availableFunds()": "46fcff4c",
				"decimals()": "313ce567",
				"description()": "7284e416",
				"getAnswer(uint256)": "b5ab58dc",
				"getOracles()": "40884c52",
				"getOriginatingRoundOfAnswer(uint256)": "09e24ae0",
				"getRoundStartedAt(uint256)": "79b38bbb",
				"getTimedOutStatus(uint256)": "25b6ae00",
				"getTimestamp(uint256)": "b633620c",
				"latestAnswer()": "50d25bcd",
				"latestRound()": "668a0f02",
				"latestSubmission(address)": "bb07bacd",
				"latestTimestamp()": "8205bf6a",
				"maxAnswerCount()": "e052cb04",
				"minAnswerCount()": "d002988c",
				"onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
				"oracleCount()": "613d8fcc",
				"owner()": "8da5cb5b",
				"paymentAmount()": "c35905c6",
				"removeOracle(address,uint32,uint32,uint32)": "a4ce9a27",
				"reportingRound()": "6fb4bb4e",
				"reportingRoundStartedAt()": "ca04f8f0",
				"restartDelay()": "357ebb02",
				"timeout()": "70dea79a",
				"transferOwnership(address)": "f2fde38b",
				"updateAnswer(uint256,int256)": "e6330cf7",
				"updateAvailableFunds()": "4f8fc3b5",
				"updateFutureRounds(uint128,uint32,uint32,uint32,uint32)": "38aa4c72",
				"withdraw(address,uint256)": "f3fef3a3",
				"withdrawFunds(address,uint256)": "c1075329",
				"withdrawable()": "50188301"
			}
		},
		"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_paymentAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"_timeout\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_description\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AvailableFundsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"OracleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"OracleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"paymentAmount\",\"type\":\"uint128\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"minAnswerCount\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"maxAnswerCount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"restartDelay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timeout\",\"type\":\"uint32\"}],\"name\":\"RoundDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"round\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"SubmissionReceived\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minAnswers\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_maxAnswers\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_restartDelay\",\"type\":\"uint32\"}],\"name\":\"addOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocatedFunds\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableFunds\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOracles\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getOriginatingRoundOfAnswer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getRoundStartedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getTimedOutStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"latestSubmission\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAnswerCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAnswerCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minAnswers\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_maxAnswers\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_restartDelay\",\"type\":\"uint32\"}],\"name\":\"removeOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reportingRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reportingRoundStartedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restartDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeout\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"}],\"name\":\"updateAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateAvailableFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_newPaymentAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"_minAnswers\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_maxAnswers\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_restartDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_timeout\",\"type\":\"uint32\"}],\"name\":\"updateFutureRounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"Allows an ownership transfer to be completed by the recipient.\"},\"addOracle(address,uint32,uint32,uint32)\":{\"params\":{\"_maxAnswers\":\"is the new maximum answer count for each round\",\"_minAnswers\":\"is the new minimum answer count for each round\",\"_oracle\":\"is the address of the new Oracle being added\",\"_restartDelay\":\"is the number of rounds an Oracle has to wait before they can initiate a round\"}},\"constructor\":{\"details\":\"Sets the LinkToken address and amount of LINK paid\",\"params\":{\"_link\":\"The address of the LINK token\",\"_paymentAmount\":\"The amount paid of LINK paid to each oracle per response\",\"_timeout\":\"is the number of seconds after the previous round that are allowed to lapse before allowing an oracle to skip an unfinished round\"}},\"getAnswer(uint256)\":{\"params\":{\"_roundId\":\"the round number to retrieve the answer for\"}},\"getOriginatingRoundOfAnswer(uint256)\":{\"params\":{\"_roundId\":\"the round number to retrieve the answer for\"}},\"getRoundStartedAt(uint256)\":{\"params\":{\"_roundId\":\"the round number to retrieve the startedAt time for\"}},\"getTimedOutStatus(uint256)\":{\"params\":{\"_roundId\":\"the round number to retrieve the timed out status for\"}},\"getTimestamp(uint256)\":{\"params\":{\"_roundId\":\"the round number to retrieve the updated timestamp for\"}},\"latestSubmission(address)\":{\"params\":{\"_oracle\":\"is the address to lookup the latest submission for\"}},\"removeOracle(address,uint32,uint32,uint32)\":{\"params\":{\"_maxAnswers\":\"is the new maximum answer count for each round\",\"_minAnswers\":\"is the new minimum answer count for each round\",\"_oracle\":\"is the address of the Oracle being removed\",\"_restartDelay\":\"is the number of rounds an Oracle has to wait before they can initiate a round\"}},\"transferOwnership(address)\":{\"details\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"updateAnswer(uint256,int256)\":{\"params\":{\"_answer\":\"is the updated data that the oracle is submitting\",\"_round\":\"is the ID of the round this answer pertains to\"}},\"updateFutureRounds(uint128,uint32,uint32,uint32,uint32)\":{\"params\":{\"_maxAnswers\":\"is the new maximum answer count for each round\",\"_minAnswers\":\"is the new minimum answer count for each round\",\"_newPaymentAmount\":\"is the payment amount for subsequent rounds\",\"_restartDelay\":\"is the number of rounds an Oracle has to wait before they can initiate a round\"}},\"withdraw(address,uint256)\":{\"params\":{\"_amount\":\"is the amount of LINK to send\",\"_recipient\":\"is the address to send the LINK to\"}},\"withdrawFunds(address,uint256)\":{\"params\":{\"_amount\":\"is the amount of LINK to send\",\"_recipient\":\"is the address to send the LINK to\"}}},\"title\":\"The Prepaid Aggregator contract\"},\"userdoc\":{\"methods\":{\"addOracle(address,uint32,uint32,uint32)\":{\"notice\":\"called by the owner to add a new Oracle and update the round related parameters\"},\"constructor\":\"Deploy with the address of the LINK token and initial payment amount\",\"getAnswer(uint256)\":{\"notice\":\"get past rounds answers\"},\"getOracles()\":{\"notice\":\"returns an array of addresses containing the oracles on contract\"},\"getOriginatingRoundOfAnswer(uint256)\":{\"notice\":\"get the round ID that an answer was originally reported in\"},\"getRoundStartedAt(uint256)\":{\"notice\":\"get the start time of a round\"},\"getTimedOutStatus(uint256)\":{\"notice\":\"get the timed out status of a given round\"},\"getTimestamp(uint256)\":{\"notice\":\"get timestamp when an answer was last updated\"},\"latestAnswer()\":{\"notice\":\"get the most recently reported answer\"},\"latestRound()\":{\"notice\":\"get the ID of the last updated round\"},\"latestSubmission(address)\":{\"notice\":\"get the latest submission for any oracle\"},\"latestTimestamp()\":{\"notice\":\"get the most recent updated at timestamp\"},\"onTokenTransfer(address,uint256,bytes)\":{\"notice\":\"called through LINK's transferAndCall to update available funds in the same transaction as the funds were transfered to the aggregator\"},\"oracleCount()\":{\"notice\":\"returns the number of oracles\"},\"removeOracle(address,uint32,uint32,uint32)\":{\"notice\":\"called by the owner to remove an Oracle and update the round related parameters\"},\"reportingRound()\":{\"notice\":\"get the ID of the round most recently reported on\"},\"reportingRoundStartedAt()\":{\"notice\":\"get the start time of the current reporting round\"},\"updateAnswer(uint256,int256)\":{\"notice\":\"called by oracles when they have witnessed a need to update\"},\"updateAvailableFunds()\":{\"notice\":\"recalculate the amount of LINK available for payouts\"},\"updateFutureRounds(uint128,uint32,uint32,uint32,uint32)\":{\"notice\":\"update the round and payment related parameters for subsequent rounds\"},\"withdraw(address,uint256)\":{\"notice\":\"transfers the oracle's LINK to another address\"},\"withdrawFunds(address,uint256)\":{\"notice\":\"transfers the owner's LINK to another address\"},\"withdrawable()\":{\"notice\":\"query the available amount of LINK for an oracle to withdraw\"}},\"notice\":\"Node handles aggregating data pushed in from off-chain, and unlocks payment for oracles as they report. Oracles' submissions are gathered in rounds, with each round aggregating the submissions for each oracle into a single answer. The latest aggregated answer is exposed as well as historical answers and their updated at timestamp.\"}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/dev/PrepaidAggregator.sol\":\"PrepaidAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/Median.sol\":{\"keccak256\":\"0x269f40d91665ff1d4bed46d380e1ce7cb5f75f2e91a51b6e0de3bafec84e2250\",\"urls\":[\"bzz-raw://36c61387a02ce86e32e93ec894b7f13814d1442dd18e7f11fd93f49aa29560a8\",\"dweb:/ipfs/QmZnE2oRUvRzef9GUVz6CGasPbDMr8bK2HPt4tZaDGscSD\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/Owned.sol\":{\"keccak256\":\"0x80578bbc02ba468948fbda423225454c8360298d80e60d60738a0072177c2419\",\"urls\":[\"bzz-raw://7c2f2140b9d6c796feb9b472e799bf31db3c1f4f47791afa5389c250cbab860c\",\"dweb:/ipfs/QmPVQqz3CSvmNFvDemxQqySmuuinriHb7pMN1MJYyiLeXE\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/dev/AggregatorInterface.sol\":{\"keccak256\":\"0x6d7bd741da79333f80399d082539f7e1cd5c2c8130351e9d7fbcd490af6ffac3\",\"urls\":[\"bzz-raw://2bc99efdabc4861265f9918d384e1aa83c83b3dd55191d676aab1aecf2dc2619\",\"dweb:/ipfs/QmcuDP7AouUwxTfyXxVLTRhymp3bcAghA6ae6ZxrYB6PzY\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/dev/PrepaidAggregator.sol\":{\"keccak256\":\"0x372f114e7ed70f93e91571e6160eea34c5a8d5f8d1444c591919f77e2456cfb8\",\"urls\":[\"bzz-raw://ec8755d614161ebaf7b42ec7ccc990496a775fe438fa207afe01dc6971a6165c\",\"dweb:/ipfs/Qmf4VPEHMNdnufzb7gwun4NSoghZx9KvdPENDPpRa2cRFS\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/dev/SafeMath128.sol\":{\"keccak256\":\"0xf9f8d939c849cdb5e6d07ec317d01083b6e2554310633831ffe8a219a43be9e3\",\"urls\":[\"bzz-raw://ccf0f38e67d5df926bc9c9d9b916add6e1520a421e9215772b6d4eacfa53e21f\",\"dweb:/ipfs/QmVc1JVzseDtC38m9RH1voG4D1HvxKZ2RaYTquNjvEJJJ7\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/dev/SafeMath32.sol\":{\"keccak256\":\"0xdeb861fd382627ff8f614c942a98b96b701d719af81a1405caa41a1066272be7\",\"urls\":[\"bzz-raw://d8b977af733eda389474ea940fbdd8a989257100ed5341b85f56b271393eb161\",\"dweb:/ipfs/QmZGXnpsGNBpBt3NK24qeREkFiYZZfUN6L5mMfVfVoxM6y\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/dev/SafeMath64.sol\":{\"keccak256\":\"0x3185ad7d0afd2bd436a2702b33706e3e0f37b93b9db310346fcc26da3b1b47b7\",\"urls\":[\"bzz-raw://e50b02c9472176ad55ba4431e31ed33d9f58965b799c9a1eba7da1937f9f5534\",\"dweb:/ipfs/QmfJdQ3iS2HbWJFeukcNwiXTZzte6oCLHqzErbNrp1C59Z\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/dev/SignedSafeMath.sol\":{\"keccak256\":\"0xf689587079a0f497bb589d48aa5bae4937f646ac7bc39a5a8b4347313138a394\",\"urls\":[\"bzz-raw://1092ac2421c5d44d6643fc52dc74c3d7577bd0ad6e176f7c43250004a8b0d606\",\"dweb:/ipfs/Qma8gpmqa5bKfM2Am9kqty3Xrg5XKjFd39SJgnKG2FMVzL\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xdbf46b45a4c9f38ba71a0391aed0e7b108854b619f292d907ae537228868bda6\",\"urls\":[\"bzz-raw://3ae40466809630c4731e2e3a697d6885727c577aaf260766c8a2f534ad3f6ee8\",\"dweb:/ipfs/QmTzpN5yP4Y5jvQ1ohfXFrce3sjzUiSChYJgZj9VvhVohG\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/interfaces/WithdrawalInterface.sol\":{\"keccak256\":\"0xd5aa4e79f8e49d7b2e5e16cb5c152a63efafbdaa24f34749fa3793df6b683068\",\"urls\":[\"bzz-raw://f0a63a2382f746e74bc918d0a3a4db3eaacc9e3ae54a2a350563b6c9e4859b35\",\"dweb:/ipfs/QmT7Yut3Abdif6JRbzw4QmpbfU1nPjHHiLvC1v5qcBT2Va\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/vendor/SafeMath.sol\":{\"keccak256\":\"0x95dbe2dd5ab8682b99bc3d7d297b621d4237442da160f78d3323ee5c4a06ded3\",\"urls\":[\"bzz-raw://d753308ff4eb43fba6f9ede371a33f707c5818350770dcb078a7d78ac8251361\",\"dweb:/ipfs/Qme64eYKWoTQiP3WhqGHoMqrENNZ9L8SdBLQ2hx5SmzUda\"]}},\"version\":1}",
		"userdoc": {
			"methods": {
				"addOracle(address,uint32,uint32,uint32)": {
					"notice": "called by the owner to add a new Oracle and update the round related parameters"
				},
				"constructor": "Deploy with the address of the LINK token and initial payment amount",
				"getAnswer(uint256)": {
					"notice": "get past rounds answers"
				},
				"getOracles()": {
					"notice": "returns an array of addresses containing the oracles on contract"
				},
				"getOriginatingRoundOfAnswer(uint256)": {
					"notice": "get the round ID that an answer was originally reported in"
				},
				"getRoundStartedAt(uint256)": {
					"notice": "get the start time of a round"
				},
				"getTimedOutStatus(uint256)": {
					"notice": "get the timed out status of a given round"
				},
				"getTimestamp(uint256)": {
					"notice": "get timestamp when an answer was last updated"
				},
				"latestAnswer()": {
					"notice": "get the most recently reported answer"
				},
				"latestRound()": {
					"notice": "get the ID of the last updated round"
				},
				"latestSubmission(address)": {
					"notice": "get the latest submission for any oracle"
				},
				"latestTimestamp()": {
					"notice": "get the most recent updated at timestamp"
				},
				"onTokenTransfer(address,uint256,bytes)": {
					"notice": "called through LINK's transferAndCall to update available funds in the same transaction as the funds were transfered to the aggregator"
				},
				"oracleCount()": {
					"notice": "returns the number of oracles"
				},
				"removeOracle(address,uint32,uint32,uint32)": {
					"notice": "called by the owner to remove an Oracle and update the round related parameters"
				},
				"reportingRound()": {
					"notice": "get the ID of the round most recently reported on"
				},
				"reportingRoundStartedAt()": {
					"notice": "get the start time of the current reporting round"
				},
				"updateAnswer(uint256,int256)": {
					"notice": "called by oracles when they have witnessed a need to update"
				},
				"updateAvailableFunds()": {
					"notice": "recalculate the amount of LINK available for payouts"
				},
				"updateFutureRounds(uint128,uint32,uint32,uint32,uint32)": {
					"notice": "update the round and payment related parameters for subsequent rounds"
				},
				"withdraw(address,uint256)": {
					"notice": "transfers the oracle's LINK to another address"
				},
				"withdrawFunds(address,uint256)": {
					"notice": "transfers the owner's LINK to another address"
				},
				"withdrawable()": {
					"notice": "query the available amount of LINK for an oracle to withdraw"
				}
			},
			"notice": "Node handles aggregating data pushed in from off-chain, and unlocks payment for oracles as they report. Oracles' submissions are gathered in rounds, with each round aggregating the submissions for each oracle into a single answer. The latest aggregated answer is exposed as well as historical answers and their updated at timestamp."
		}
	},
	"sources": {
		"dev/PrepaidAggregator.sol": {
			"id": 8
		},
		"Median.sol": {
			"id": 3
		},
		"vendor/SafeMath.sol": {
			"id": 31
		},
		"dev/SignedSafeMath.sol": {
			"id": 12
		},
		"dev/SafeMath128.sol": {
			"id": 9
		},
		"dev/SafeMath64.sol": {
			"id": 11
		},
		"dev/SafeMath32.sol": {
			"id": 10
		},
		"interfaces/LinkTokenInterface.sol": {
			"id": 19
		},
		"interfaces/WithdrawalInterface.sol": {
			"id": 22
		},
		"dev/AggregatorInterface.sol": {
			"id": 6
		},
		"Owned.sol": {
			"id": 5
		}
	},
	"sourceCodes": {
		"dev/PrepaidAggregator.sol": "pragma solidity 0.6.2;\n\nimport \"../Median.sol\";\nimport \"../vendor/SafeMath.sol\";\nimport \"./SafeMath128.sol\";\nimport \"./SafeMath64.sol\";\nimport \"./SafeMath32.sol\";\nimport \"../interfaces/LinkTokenInterface.sol\";\nimport \"../interfaces/WithdrawalInterface.sol\";\nimport \"./AggregatorInterface.sol\";\nimport \"../Owned.sol\";\n\n/**\n * @title The Prepaid Aggregator contract\n * @notice Node handles aggregating data pushed in from off-chain, and unlocks\n * payment for oracles as they report. Oracles' submissions are gathered in\n * rounds, with each round aggregating the submissions for each oracle into a\n * single answer. The latest aggregated answer is exposed as well as historical\n * answers and their updated at timestamp.\n */\ncontract PrepaidAggregator is AggregatorInterface, Owned, WithdrawalInterface {\n  using SafeMath for uint256;\n  using SafeMath128 for uint128;\n  using SafeMath64 for uint64;\n  using SafeMath32 for uint32;\n\n  struct Round {\n    int256 answer;\n    uint64 startedAt;\n    uint64 updatedAt;\n    uint32 answeredInRound;\n    RoundDetails details;\n  }\n\n  struct RoundDetails {\n    int256[] answers;\n    uint32 maxAnswers;\n    uint32 minAnswers;\n    uint32 timeout;\n    uint128 paymentAmount;\n  }\n\n  struct OracleStatus {\n    uint128 withdrawable;\n    uint32 startingRound;\n    uint32 endingRound;\n    uint32 lastReportedRound;\n    uint32 lastStartedRound;\n    int256 latestAnswer;\n    uint16 index;\n  }\n\n  uint128 public allocatedFunds;\n  uint128 public availableFunds;\n\n  // Round related params\n  uint128 public paymentAmount;\n  uint32 public maxAnswerCount;\n  uint32 public minAnswerCount;\n  uint32 public restartDelay;\n  uint32 public timeout;\n  uint8 public decimals;\n  bytes32 public description;\n\n  uint32 private reportingRoundId;\n  uint32 internal latestRoundId;\n  LinkTokenInterface private LINK;\n  mapping(address => OracleStatus) private oracles;\n  mapping(uint32 => Round) internal rounds;\n  address[] private oracleAddresses;\n\n  event AvailableFundsUpdated(uint256 indexed amount);\n  event RoundDetailsUpdated(\n    uint128 indexed paymentAmount,\n    uint32 indexed minAnswerCount,\n    uint32 indexed maxAnswerCount,\n    uint32 restartDelay,\n    uint32 timeout // measured in seconds\n  );\n  event OracleAdded(address indexed oracle);\n  event OracleRemoved(address indexed oracle);\n  event SubmissionReceived(\n    int256 indexed answer,\n    uint32 indexed round,\n    address indexed oracle\n  );\n\n  uint32 constant private ROUND_MAX = 2**32-1;\n\n  /**\n   * @notice Deploy with the address of the LINK token and initial payment amount\n   * @dev Sets the LinkToken address and amount of LINK paid\n   * @param _link The address of the LINK token\n   * @param _paymentAmount The amount paid of LINK paid to each oracle per response\n   * @param _timeout is the number of seconds after the previous round that are\n   * allowed to lapse before allowing an oracle to skip an unfinished round\n   */\n  constructor(\n    address _link,\n    uint128 _paymentAmount,\n    uint32 _timeout,\n    uint8 _decimals,\n    bytes32 _description\n  ) public {\n    LINK = LinkTokenInterface(_link);\n    paymentAmount = _paymentAmount;\n    timeout = _timeout;\n    decimals = _decimals;\n    description = _description;\n  }\n\n  /**\n   * @notice called by oracles when they have witnessed a need to update\n   * @param _round is the ID of the round this answer pertains to\n   * @param _answer is the updated data that the oracle is submitting\n   */\n  function updateAnswer(uint256 _round, int256 _answer)\n    external\n    onlyValidRoundId(uint32(_round))\n    onlyValidOracleRound(uint32(_round))\n  {\n    startNewRound(uint32(_round));\n    recordSubmission(_answer, uint32(_round));\n    updateRoundAnswer(uint32(_round));\n    payOracle(uint32(_round));\n    deleteRound(uint32(_round));\n  }\n\n  /**\n   * @notice called by the owner to add a new Oracle and update the round\n   * related parameters\n   * @param _oracle is the address of the new Oracle being added\n   * @param _minAnswers is the new minimum answer count for each round\n   * @param _maxAnswers is the new maximum answer count for each round\n   * @param _restartDelay is the number of rounds an Oracle has to wait before\n   * they can initiate a round\n   */\n  function addOracle(\n    address _oracle,\n    uint32 _minAnswers,\n    uint32 _maxAnswers,\n    uint32 _restartDelay\n  )\n    external\n    onlyOwner()\n    onlyUnenabledAddress(_oracle)\n  {\n    require(oracleCount() < 42, \"cannot add more than 42 oracles\");\n    oracles[_oracle].startingRound = getStartingRound(_oracle);\n    oracles[_oracle].endingRound = ROUND_MAX;\n    oracleAddresses.push(_oracle);\n    oracles[_oracle].index = uint16(oracleAddresses.length.sub(1));\n\n    emit OracleAdded(_oracle);\n\n    updateFutureRounds(paymentAmount, _minAnswers, _maxAnswers, _restartDelay, timeout);\n  }\n\n  /**\n   * @notice called by the owner to remove an Oracle and update the round\n   * related parameters\n   * @param _oracle is the address of the Oracle being removed\n   * @param _minAnswers is the new minimum answer count for each round\n   * @param _maxAnswers is the new maximum answer count for each round\n   * @param _restartDelay is the number of rounds an Oracle has to wait before\n   * they can initiate a round\n   */\n  function removeOracle(\n    address _oracle,\n    uint32 _minAnswers,\n    uint32 _maxAnswers,\n    uint32 _restartDelay\n  )\n    external\n    onlyOwner()\n    onlyEnabledAddress(_oracle)\n  {\n    oracles[_oracle].endingRound = reportingRoundId;\n    address tail = oracleAddresses[oracleCount().sub(1)];\n    uint16 index = oracles[_oracle].index;\n    oracles[tail].index = index;\n    delete oracles[_oracle].index;\n    oracleAddresses[index] = tail;\n    oracleAddresses.pop();\n\n    emit OracleRemoved(_oracle);\n\n    updateFutureRounds(paymentAmount, _minAnswers, _maxAnswers, _restartDelay, timeout);\n  }\n\n  /**\n   * @notice update the round and payment related parameters for subsequent\n   * rounds\n   * @param _newPaymentAmount is the payment amount for subsequent rounds\n   * @param _minAnswers is the new minimum answer count for each round\n   * @param _maxAnswers is the new maximum answer count for each round\n   * @param _restartDelay is the number of rounds an Oracle has to wait before\n   * they can initiate a round\n   */\n  function updateFutureRounds(\n    uint128 _newPaymentAmount,\n    uint32 _minAnswers,\n    uint32 _maxAnswers,\n    uint32 _restartDelay,\n    uint32 _timeout\n  )\n    public\n    onlyOwner()\n    onlyValidRange(_minAnswers, _maxAnswers, _restartDelay)\n  {\n    paymentAmount = _newPaymentAmount;\n    minAnswerCount = _minAnswers;\n    maxAnswerCount = _maxAnswers;\n    restartDelay = _restartDelay;\n    timeout = _timeout;\n\n    emit RoundDetailsUpdated(\n      paymentAmount,\n      _minAnswers,\n      _maxAnswers,\n      _restartDelay,\n      _timeout\n    );\n  }\n\n  /**\n   * @notice recalculate the amount of LINK available for payouts\n   */\n  function updateAvailableFunds()\n    public\n  {\n    uint128 pastAvailableFunds = availableFunds;\n\n    uint256 available = LINK.balanceOf(address(this)).sub(allocatedFunds);\n    availableFunds = uint128(available);\n\n    if (pastAvailableFunds != available) {\n      emit AvailableFundsUpdated(available);\n    }\n  }\n\n  /**\n   * @notice returns the number of oracles\n   */\n  function oracleCount() public view returns (uint32) {\n    return uint32(oracleAddresses.length);\n  }\n\n  /**\n   * @notice returns an array of addresses containing the oracles on contract\n   */\n  function getOracles() external view returns (address[] memory) {\n    return oracleAddresses;\n  }\n\n  /**\n   * @notice get the most recently reported answer\n   */\n  function latestAnswer()\n    external\n    view\n    virtual\n    override\n    returns (int256)\n  {\n    return _latestAnswer();\n  }\n\n  /**\n   * @notice get the most recent updated at timestamp\n   */\n  function latestTimestamp()\n    external\n    view\n    virtual\n    override\n    returns (uint256)\n  {\n    return _latestTimestamp();\n  }\n\n  /**\n   * @notice get the ID of the last updated round\n   */\n  function latestRound()\n    external\n    view\n    override\n    returns (uint256)\n  {\n    return latestRoundId;\n  }\n\n  /**\n   * @notice get the ID of the round most recently reported on\n   */\n  function reportingRound()\n    external\n    view\n    returns (uint256)\n  {\n    return reportingRoundId;\n  }\n\n  /**\n   * @notice get past rounds answers\n   * @param _roundId the round number to retrieve the answer for\n   */\n  function getAnswer(uint256 _roundId)\n    external\n    view\n    virtual\n    override\n    returns (int256)\n  {\n    return _getAnswer(_roundId);\n  }\n\n  /**\n   * @notice get timestamp when an answer was last updated\n   * @param _roundId the round number to retrieve the updated timestamp for\n   */\n  function getTimestamp(uint256 _roundId)\n    external\n    view\n    virtual\n    override\n    returns (uint256)\n  {\n    return _getTimestamp(_roundId);\n  }\n\n  /**\n   * @notice get the timed out status of a given round\n   * @param _roundId the round number to retrieve the timed out status for\n   */\n  function getTimedOutStatus(uint256 _roundId)\n    external\n    view\n    returns (bool)\n  {\n    uint32 roundId = uint32(_roundId);\n    uint32 answeredIn = rounds[roundId].answeredInRound;\n    return answeredIn > 0 && answeredIn != roundId;\n  }\n\n  /**\n   * @notice get the start time of the current reporting round\n   */\n  function reportingRoundStartedAt()\n    external\n    view\n    returns (uint256)\n  {\n    return rounds[reportingRoundId].startedAt;\n  }\n\n  /**\n   * @notice get the start time of a round\n   * @param _roundId the round number to retrieve the startedAt time for\n   */\n  function getRoundStartedAt(uint256 _roundId)\n    external\n    view\n    returns (uint256)\n  {\n    return rounds[uint32(_roundId)].startedAt;\n  }\n\n  /**\n   * @notice get the round ID that an answer was originally reported in\n   * @param _roundId the round number to retrieve the answer for\n   */\n  function getOriginatingRoundOfAnswer(uint256 _roundId)\n    external\n    view\n    returns (uint256)\n  {\n    return rounds[uint32(_roundId)].answeredInRound;\n  }\n\n  /**\n   * @notice query the available amount of LINK for an oracle to withdraw\n   */\n  function withdrawable()\n    external\n    view\n    override\n    returns (uint256)\n  {\n    return oracles[msg.sender].withdrawable;\n  }\n\n  /**\n   * @notice transfers the oracle's LINK to another address\n   * @param _recipient is the address to send the LINK to\n   * @param _amount is the amount of LINK to send\n   */\n  function withdraw(address _recipient, uint256 _amount)\n    external\n    override\n  {\n    uint128 amount = uint128(_amount);\n    uint128 available = oracles[msg.sender].withdrawable;\n    require(available >= amount, \"Insufficient balance\");\n\n    oracles[msg.sender].withdrawable = available.sub(amount);\n    allocatedFunds = allocatedFunds.sub(amount);\n\n    assert(LINK.transfer(_recipient, uint256(amount)));\n  }\n\n  /**\n   * @notice transfers the owner's LINK to another address\n   * @param _recipient is the address to send the LINK to\n   * @param _amount is the amount of LINK to send\n   */\n  function withdrawFunds(address _recipient, uint256 _amount)\n    external\n    onlyOwner()\n  {\n    require(availableFunds >= _amount, \"Insufficient funds\");\n    require(LINK.transfer(_recipient, _amount), \"LINK transfer failed\");\n    updateAvailableFunds();\n  }\n\n  /**\n   * @notice get the latest submission for any oracle\n   * @param _oracle is the address to lookup the latest submission for\n   */\n  function latestSubmission(address _oracle)\n    external\n    view\n    returns (int256, uint256)\n  {\n    return (oracles[_oracle].latestAnswer, oracles[_oracle].lastReportedRound);\n  }\n\n  /**\n   * @notice called through LINK's transferAndCall to update available funds\n   * in the same transaction as the funds were transfered to the aggregator\n   */\n  function onTokenTransfer(address, uint256, bytes memory) public {\n    updateAvailableFunds();\n  }\n\n  /**\n   * Internal\n   */\n\n  /**\n   * @dev Internal implementation for latestAnswer\n   */\n  function _latestAnswer()\n    internal\n    view\n    returns (int256)\n  {\n    return rounds[latestRoundId].answer;\n  }\n\n  /**\n   * @dev Internal implementation of latestTimestamp\n   */\n  function _latestTimestamp()\n    internal\n    view\n    returns (uint256)\n  {\n    return rounds[latestRoundId].updatedAt;\n  }\n\n  /**\n   * @dev Internal implementation of getAnswer\n   */\n  function _getAnswer(uint256 _roundId)\n    internal\n    view\n    returns (int256)\n  {\n    return rounds[uint32(_roundId)].answer;\n  }\n\n  /**\n   * @dev Internal implementation of getTimestamp\n   */\n  function _getTimestamp(uint256 _roundId)\n    internal\n    view\n    returns (uint256)\n  {\n    return rounds[uint32(_roundId)].updatedAt;\n  }\n\n  /**\n   * Private\n   */\n\n  function startNewRound(uint32 _id)\n    private\n    ifNewRound(_id)\n    ifDelayed(_id)\n  {\n    updateTimedOutRoundInfo(_id.sub(1));\n\n    reportingRoundId = _id;\n    rounds[_id].details.maxAnswers = maxAnswerCount;\n    rounds[_id].details.minAnswers = minAnswerCount;\n    rounds[_id].details.paymentAmount = paymentAmount;\n    rounds[_id].details.timeout = timeout;\n    rounds[_id].startedAt = uint64(block.timestamp);\n\n    oracles[msg.sender].lastStartedRound = _id;\n\n    emit NewRound(_id, msg.sender, rounds[_id].startedAt);\n  }\n\n  function updateTimedOutRoundInfo(uint32 _id)\n    private\n    ifTimedOut(_id)\n    onlyWithPreviousAnswer(_id)\n  {\n    uint32 prevId = _id.sub(1);\n    rounds[_id].answer = rounds[prevId].answer;\n    rounds[_id].answeredInRound = rounds[prevId].answeredInRound;\n    rounds[_id].updatedAt = uint64(block.timestamp);\n\n    delete rounds[_id].details;\n  }\n\n  function updateRoundAnswer(uint32 _id)\n    private\n    ifMinAnswersReceived(_id)\n  {\n    int256 newAnswer = Median.calculateInplace(rounds[_id].details.answers);\n    rounds[_id].answer = newAnswer;\n    rounds[_id].updatedAt = uint64(block.timestamp);\n    rounds[_id].answeredInRound = _id;\n    latestRoundId = _id;\n\n    emit AnswerUpdated(newAnswer, _id, now);\n  }\n\n  function payOracle(uint32 _id)\n    private\n  {\n    uint128 payment = rounds[_id].details.paymentAmount;\n    uint128 available = availableFunds.sub(payment);\n\n    availableFunds = available;\n    allocatedFunds = allocatedFunds.add(payment);\n    oracles[msg.sender].withdrawable = oracles[msg.sender].withdrawable.add(payment);\n\n    emit AvailableFundsUpdated(available);\n  }\n\n  function recordSubmission(int256 _answer, uint32 _id)\n    private\n    onlyWhenAcceptingAnswers(_id)\n  {\n    rounds[_id].details.answers.push(_answer);\n    oracles[msg.sender].lastReportedRound = _id;\n    oracles[msg.sender].latestAnswer = _answer;\n\n    emit SubmissionReceived(_answer, _id, msg.sender);\n  }\n\n  function deleteRound(uint32 _id)\n    private\n    ifMaxAnswersReceived(_id)\n  {\n    delete rounds[_id].details;\n  }\n\n  function timedOut(uint32 _id)\n    private\n    view\n    returns (bool)\n  {\n    uint64 startedAt = rounds[_id].startedAt;\n    uint32 roundTimeout = rounds[_id].details.timeout;\n    return startedAt > 0 && roundTimeout > 0 && startedAt.add(roundTimeout) < block.timestamp;\n  }\n\n  function finished(uint32 _id)\n    private\n    view\n    returns (bool)\n  {\n    return rounds[_id].updatedAt > 0;\n  }\n\n  function getStartingRound(address _oracle)\n    private\n    view\n    returns (uint32)\n  {\n    uint32 currentRound = reportingRoundId;\n    if (currentRound != 0 && currentRound == oracles[_oracle].endingRound) {\n      return currentRound;\n    }\n    return currentRound.add(1);\n  }\n\n  /**\n   * Modifiers\n   */\n\n  modifier onlyValidOracleRound(uint32 _id) {\n    uint32 startingRound = oracles[msg.sender].startingRound;\n    require(startingRound != 0, \"Only updatable by whitelisted oracles\");\n    require(startingRound <= _id, \"New oracles cannot participate in in-progress rounds\");\n    require(oracles[msg.sender].endingRound >= _id, \"Oracle has been removed from whitelist\");\n    require(oracles[msg.sender].lastReportedRound < _id, \"Cannot update round reports\");\n    _;\n  }\n\n  modifier ifMinAnswersReceived(uint32 _id) {\n    if (rounds[_id].details.answers.length >= rounds[_id].details.minAnswers) {\n      _;\n    }\n  }\n\n  modifier ifMaxAnswersReceived(uint32 _id) {\n    if (rounds[_id].details.answers.length == rounds[_id].details.maxAnswers) {\n      _;\n    }\n  }\n\n  modifier onlyWhenAcceptingAnswers(uint32 _id) {\n    require(rounds[_id].details.maxAnswers != 0, \"Round not currently eligible for reporting\");\n    _;\n  }\n\n  modifier ifNewRound(uint32 _id) {\n    if (_id == reportingRoundId.add(1)) {\n      _;\n    }\n  }\n\n  modifier ifDelayed(uint32 _id) {\n    uint256 lastStarted = oracles[msg.sender].lastStartedRound;\n    if (_id > lastStarted + restartDelay || lastStarted == 0) {\n      _;\n    }\n  }\n\n  modifier onlyValidRoundId(uint32 _id) {\n    require(_id == reportingRoundId || _id == reportingRoundId.add(1), \"Must report on current round\");\n    require(_id == 1 || finished(_id.sub(1)) || timedOut(_id.sub(1)), \"Not eligible to bump round\");\n    _;\n  }\n\n  modifier onlyValidRange(uint32 _min, uint32 _max, uint32 _restartDelay) {\n    uint32 oracleNum = oracleCount(); // Save on storage reads\n    require(oracleNum >= _max, \"Cannot have the answer max higher oracle count\");\n    require(_max >= _min, \"Cannot have the answer minimum higher the max\");\n    require(oracleNum == 0 || oracleNum > _restartDelay, \"Restart delay must be less than oracle count\");\n    _;\n  }\n\n  modifier onlyUnenabledAddress(address _oracle) {\n    require(oracles[_oracle].endingRound != ROUND_MAX, \"Address is already recorded as an oracle\");\n    _;\n  }\n\n  modifier onlyEnabledAddress(address _oracle) {\n    require(oracles[_oracle].endingRound == ROUND_MAX, \"Address is not a whitelisted oracle\");\n    _;\n  }\n\n  modifier ifTimedOut(uint32 _id) {\n    if (timedOut(_id)) {\n      _;\n    }\n  }\n\n  modifier onlyWithPreviousAnswer(uint32 _id) {\n    require(rounds[_id.sub(1)].updatedAt != 0, \"Must have a previous answer to pull from\");\n    _;\n  }\n\n}\n",
		"Median.sol": "pragma solidity ^0.6.0;\n\nimport \"./vendor/SafeMath.sol\";\nimport \"./dev/SignedSafeMath.sol\";\n\nlibrary Median {\n  using SignedSafeMath for int256;\n\n  int256 constant intMax = 57896044618658097711785492504343953926634992332820282019728792003956564819967;\n\n  /**\n   * @notice Returns the sorted middle, or the average of the two middle indexed items if the\n   * array has an even number of elements.\n   * @dev The list passed as an argument isn't modified.\n   * @dev This algorithm has expected runtime O(n), but for adversarially chosen inputs\n   * the runtime is O(n^2).\n   * @param list The list of elements to compare\n   */\n  function calculate(int256[] memory list)\n    internal\n    pure\n    returns (int256)\n  {\n    require(0 < list.length, \"list must not be empty\");\n    if (list.length <= 9) {\n      return shortList(list);\n    } else {\n      return longList(copy(list));\n    }\n  }\n\n  /**\n   * @notice See documentation for function calculate.\n   * @dev The list passed as an argument may be permuted.\n   */\n  function calculateInplace(int256[] memory list)\n    internal\n    pure\n    returns (int256)\n  {\n    require(0 < list.length, \"list must not be empty\");\n    if (list.length <= 9) {\n      return shortList(list);\n    } else {\n      return longList(list);\n    }\n  }\n\n  /**\n   * @notice Optimized median computation for lists of length at most 9\n   * @dev Assumes that 0 < list.len <= 9\n   * @dev Does not modify list\n   */\n  function shortList(int256[] memory list) private pure returns (int256) {\n    // Uses an optimal sorting network (https://en.wikipedia.org/wiki/Sorting_network)\n    // for lists of length 9. Network layout is taken from https://stackoverflow.com/a/46801450\n\n    uint256 len = list.length;\n    int256 x0 = list[0];\n    if (len == 1) {return x0;}\n    // --- end of subnetwork for lists of length <= 1\n    int256 x1 = list[1];\n    if (x0 > x1) {(x0, x1) = (x1, x0);}\n    if (len == 2) {return SignedSafeMath.avg(x0, x1);}\n    // --- end of subnetwork for lists of length <= 2\n    int256 x2 = list[2];\n    if (x1 > x2) {(x1, x2) = (x2, x1);}\n    if (x0 > x1) {(x0, x1) = (x1, x0);}\n    if (len == 3) {return x1;}\n    // --- end of subnetwork for lists of length <= 3\n    int256 x3 = list[3];\n    int256 x4 = 4 < len ? list[4] : intMax;\n    int256 x5 = 5 < len ? list[5] : intMax;\n    int256 x6 = 6 < len ? list[6] : intMax;\n    int256 x7 = 7 < len ? list[7] : intMax;\n    int256 x8 = 8 < len ? list[8] : intMax;\n    if (x3 > x4) {(x3, x4) = (x4, x3);}\n    if (x6 > x7) {(x6, x7) = (x7, x6);}\n    if (x4 > x5) {(x4, x5) = (x5, x4);}\n    if (x7 > x8) {(x7, x8) = (x8, x7);}\n    if (x3 > x4) {(x3, x4) = (x4, x3);}\n    if (x6 > x7) {(x6, x7) = (x7, x6);}\n    if (x0 > x3) {(x0, x3) = (x3, x0);}\n    if (x3 > x6) {(x3, x6) = (x6, x3);}\n    if (x0 > x3) {(x0, x3) = (x3, x0);}\n    if (x1 > x4) {(x1, x4) = (x4, x1);}\n    if (x4 > x7) {(x4, x7) = (x7, x4);}\n    if (x1 > x4) {(x1, x4) = (x4, x1);}\n    if (x5 > x8) {(x5, x8) = (x8, x5);}\n    if (x2 > x5) {(x2, x5) = (x5, x2);}\n    if (x2 > x4) {(x2, x4) = (x4, x2);}\n    if (x4 > x6) {(x4, x6) = (x6, x4);}\n    if (x2 > x4) {(x2, x4) = (x4, x2);}\n    if (x1 > x3) {(x1, x3) = (x3, x1);}\n    if (x2 > x3) {(x2, x3) = (x3, x2);}\n    // Since we don't care about fully sorting list, but only want the median,\n    // some unnecessary comparators have been commented out below.\n    // if (x5 > x8) {(x5, x8) = (x8, x5);}\n    // if (x5 > x7) {(x5, x7) = (x7, x5);}\n    // if (x5 > x6) {(x5, x6) = (x6, x5);}\n    if (len == 4) {return SignedSafeMath.avg(x1, x2);}\n    if (len == 5) {return x2;}\n    if (len == 6) {return SignedSafeMath.avg(x2, x3);}\n    if (len == 7) {return x3;}\n    if (len == 8) {return SignedSafeMath.avg(x3, x4);}\n    if (len == 9) {return x4;}\n    revert(\"list.length > 9\");\n  }\n\n  /**\n   * @notice Median computation for lists of any length\n   */\n  function longList(int256[] memory list)\n    private\n    pure\n    returns (int256)\n  {\n    uint256 len = list.length;\n    uint256 middleIndex = len / 2;\n    if (len % 2 == 0) {\n      int256 median1;\n      int256 median2;\n      (median1, median2) = quickselectTwo(list, 0, len - 1, middleIndex - 1, middleIndex);\n      return SignedSafeMath.avg(median1, median2);\n    } else {\n      return quickselect(list, 0, len - 1, middleIndex);\n    }\n  }\n\n  /**\n   * @notice Selects the k-th ranked element from list, looking only at indices between lo and hi\n   * (inclusive). Modifies list in-place.\n   */\n  function quickselect(int256[] memory list, uint lo, uint hi, uint k)\n    private\n    pure\n    returns (int256)\n  {\n    require(lo <= k);\n    require(k <= hi);\n    while (lo < hi) {\n      uint pivotIndex = partition(list, lo, hi);\n      if (k <= pivotIndex) {\n        // since pivotIndex < (original hi passed to partition),\n        // termination is guaranteed in this case\n        hi = pivotIndex;\n      } else {\n        // since (original lo passed to partition) <= pivotIndex,\n        // termination is guaranteed in this case\n        lo = pivotIndex + 1;\n      }\n    }\n    return list[lo];\n  }\n\n  /**\n   * @notice Selects the k1-th and k2-th ranked elements from list, looking only at indices between\n   * lo and hi (inclusive). Modifies list in-place.\n   */\n  function quickselectTwo(int256[] memory list, uint lo, uint hi, uint k1, uint k2)\n    internal\n    pure\n    returns (int256, int256)\n  {\n    require(k1 < k2);\n    require(lo <= k1 && k1 <= hi);\n    require(lo <= k2 && k2 <= hi);\n\n    while (true) {\n      uint pivotIdx = partition(list, lo, hi);\n      if (k2 <= pivotIdx) {\n        hi = pivotIdx;\n      } else if (pivotIdx < k1) {\n        lo = pivotIdx + 1;\n      } else {\n        assert(k1 <= pivotIdx && pivotIdx < k2);\n        int256 r1 = quickselect(list, lo, pivotIdx, k1);\n        int256 r2 = quickselect(list, pivotIdx + 1, hi, k2);\n        return (r1, r2);\n      }\n    }\n  }\n\n  /**\n   * @notice Partitions list in-place using Hoare's partitioning scheme.\n   * Only elements of list between indices lo and hi (inclusive) will be modified.\n   * Returns an index i, such that:\n   * - lo <= i < hi\n   * - forall j in [lo, i]. list[j] <= list[i]\n   * - forall j in [i, hi]. list[i] <= list[j]\n   */\n  function partition(int256[] memory list, uint lo, uint hi)\n    private\n    pure\n    returns (uint256)\n  {\n    // We don't care about overflow of the addition, because it would require a list\n    // larger than any feasible computer's memory.\n    int256 pivot = list[(lo + hi) / 2];\n    lo -= 1; // this can underflow. that's intentional.\n    hi += 1;\n    while (true) {\n      do {\n        lo += 1;\n      } while (list[lo] < pivot);\n      do {\n        hi -= 1;\n      } while (list[hi] > pivot);\n      if (lo < hi) {\n        (list[lo], list[hi]) = (list[hi], list[lo]);\n      } else {\n        // Let orig_lo and orig_hi be the original values of lo and hi passed to partition.\n        // Then, hi < orig_hi, because hi decreases *strictly* monotonically\n        // in each loop iteration and\n        // - either list[orig_hi] > pivot, in which case the first loop iteration\n        //   will achieve hi < orig_hi;\n        // - or list[orig_hi] <= pivot, in which case at least two loop iterations are\n        //   needed:\n        //   - lo will have to stop at least once in the interval\n        //     [orig_lo, (orig_lo + orig_hi)/2]\n        //   - (orig_lo + orig_hi)/2 < orig_hi\n        return hi;\n      }\n    }\n  }\n\n  /**\n   * @notice Makes an in-memory copy of the array passed in\n   * @param list Reference to the array to be copied\n   */\n  function copy(int256[] memory list)\n    private\n    pure\n    returns(int256[] memory)\n  {\n    int256[] memory list2 = new int256[](list.length);\n    for (uint256 i = 0; i < list.length; i++) {\n      list2[i] = list[i];\n    }\n    return list2;\n  }\n}\n",
		"vendor/SafeMath.sol": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n",
		"dev/SignedSafeMath.sol": "pragma solidity ^0.6.0;\n\nlibrary SignedSafeMath {\n\n  /**\n   * @dev Adds two int256s and makes sure the result doesn't overflow. Signed\n   * integers aren't supported by the SafeMath library, thus this method\n   * @param _a The first number to be added\n   * @param _a The second number to be added\n   */\n  function add(int256 _a, int256 _b)\n    internal\n    pure\n    returns (int256)\n  {\n    // solium-disable-next-line zeppelin/no-arithmetic-operations\n    int256 c = _a + _b;\n    require((_b >= 0 && c >= _a) || (_b < 0 && c < _a), \"SignedSafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @notice Computes average of two signed integers, ensuring that the computation\n   * doesn't overflow.\n   * @dev If the result is not an integer, it is rounded towards zero. For example,\n   * avg(-3, -4) = -3\n   */\n  function avg(int256 _a, int256 _b)\n    internal\n    pure\n    returns (int256)\n  {\n    int256 remainder = (_a % 2 + _b % 2) / 2;\n    return add(add(_a / 2, _b / 2), remainder);\n  }\n}\n",
		"dev/SafeMath128.sol": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * This library is a version of Open Zeppelin's SafeMath, modified to support\n * unsigned 128 bit integers.\n */\nlibrary SafeMath128 {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint128 a, uint128 b) internal pure returns (uint128) {\n    uint128 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint128 a, uint128 b) internal pure returns (uint128) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint128 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint128 a, uint128 b) internal pure returns (uint128) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint128 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint128 a, uint128 b) internal pure returns (uint128) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint128 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint128 a, uint128 b) internal pure returns (uint128) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n",
		"dev/SafeMath64.sol": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * This library is a version of Open Zeppelin's SafeMath, modified to support\n * unsigned 64 bit integers.\n */\nlibrary SafeMath64 {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint64 a, uint64 b) internal pure returns (uint64) {\n    uint64 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint64 a, uint64 b) internal pure returns (uint64) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint64 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint64 a, uint64 b) internal pure returns (uint64) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint64 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint64 a, uint64 b) internal pure returns (uint64) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint64 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint64 a, uint64 b) internal pure returns (uint64) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n",
		"dev/SafeMath32.sol": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * This library is a version of Open Zeppelin's SafeMath, modified to support\n * unsigned 32 bit integers.\n */\nlibrary SafeMath32 {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint32 a, uint32 b) internal pure returns (uint32) {\n    uint32 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint32 a, uint32 b) internal pure returns (uint32) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint32 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint32 a, uint32 b) internal pure returns (uint32) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint32 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint32 a, uint32 b) internal pure returns (uint32) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint32 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint32 a, uint32 b) internal pure returns (uint32) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n",
		"interfaces/LinkTokenInterface.sol": "pragma solidity ^0.6.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n  function approve(address spender, uint256 value) external returns (bool success);\n  function balanceOf(address owner) external view returns (uint256 balance);\n  function decimals() external view returns (uint8 decimalPlaces);\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n  function name() external view returns (string memory tokenName);\n  function symbol() external view returns (string memory tokenSymbol);\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n  function transfer(address to, uint256 value) external returns (bool success);\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n",
		"interfaces/WithdrawalInterface.sol": "pragma solidity ^0.6.0;\n\ninterface WithdrawalInterface {\n  /**\n   * @notice transfer LINK held by the contract belonging to msg.sender to\n   * another address\n   * @param recipient is the address to send the LINK to\n   * @param amount is the amount of LINK to send\n   */\n  function withdraw(address recipient, uint256 amount) external;\n\n  /**\n   * @notice query the available amount of LINK to withdraw by msg.sender\n   */\n  function withdrawable() external view returns (uint256);\n}\n",
		"dev/AggregatorInterface.sol": "pragma solidity ^0.6.0;\n\ninterface AggregatorInterface {\n  function latestAnswer() external view returns (int256);\n  function latestTimestamp() external view returns (uint256);\n  function latestRound() external view returns (uint256);\n  function getAnswer(uint256 roundId) external view returns (int256);\n  function getTimestamp(uint256 roundId) external view returns (uint256);\n\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 timestamp);\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\n}\n",
		"Owned.sol": "pragma solidity ^0.6.0;\n\n/**\n * @title The Owned contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract Owned {\n\n  address payable public owner;\n  address private pendingOwner;\n\n  event OwnershipTransferRequested(\n    address indexed from,\n    address indexed to\n  );\n  event OwnershipTransfered(\n    address indexed from,\n    address indexed to\n  );\n\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Allows an owner to begin transferring ownership to a new address,\n   * pending.\n   */\n  function transferOwnership(address _to)\n    external\n    onlyOwner()\n  {\n    pendingOwner = _to;\n\n    emit OwnershipTransferRequested(owner, _to);\n  }\n\n  /**\n   * @dev Allows an ownership transfer to be completed by the recipient.\n   */\n  function acceptOwnership()\n    external\n  {\n    require(msg.sender == pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = owner;\n    owner = msg.sender;\n    pendingOwner = address(0);\n\n    emit OwnershipTransfered(oldOwner, msg.sender);\n  }\n\n  /**\n   * @dev Reverts if called by anyone other than the contract owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner, \"Only callable by owner\");\n    _;\n  }\n\n}\n"
	},
	"sourceTreeHashHex": "0x842a2d0eb6031edaebe5a2048d4bd65f87d6bc842294239a46411a601ed8b83f",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.6.2+commit.bacdbe57.js",
		"settings": {
			"optimizer": {
				"enabled": false
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"userdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap",
						"evm.methodIdentifiers",
						"metadata"
					]
				}
			},
			"remappings": []
		}
	},
	"chains": {}
}