{
  "contractName": "HegicStakingWBTC",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "wbtc",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "acount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Profit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FALLBACK_RECIPIENT",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HEGIC",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LOT_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WBTC",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_revertTransfersInLockUpPeriod",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastBoughtTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockupPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "profitOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "revertTransfersInLockUpPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sendProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"wbtc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"acount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Profit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FALLBACK_RECIPIENT\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HEGIC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBTC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_revertTransfersInLockUpPeriod\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastBoughtTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockupPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"profitOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"revertTransfersInLockUpPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revertTransfersInLockUpPeriod(bool)\":{\"notice\":\"Used for ...\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/tom/Desktop/Medium/AutonomousHegician/contracts-v888/contracts/Staking/HegicStakingWBTC.sol\":\"HegicStakingWBTC\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/tom/Desktop/Medium/AutonomousHegician/contracts-v888/contracts/Interfaces/Interfaces.sol\":{\"keccak256\":\"0xcc22aa15c42a557b4223a7350a70089987fe4961594a7d33b5ba86d024c2fa8b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://49b7573ea7a0319b2a502de51dfa59e528ecf457c777b12cff67c1af1d6e8470\",\"dweb:/ipfs/QmdHVom1Co2j4xEe1ZEqfGiat15jXrnPfUHmzX2gNfoVmq\"]},\"/home/tom/Desktop/Medium/AutonomousHegician/contracts-v888/contracts/Staking/HegicStaking.sol\":{\"keccak256\":\"0xdae261e3916b27a7616a043bba0e512d09761e022211ec733827b267b565cd13\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac5b36ccc6ad7338f91af05fe05924c136c23569801867c1670d774a721db68\",\"dweb:/ipfs/QmUP8EEwPMCQR2ff8t2yYQ3A94NBAQF9aUmHi5yWYHdfmS\"]},\"/home/tom/Desktop/Medium/AutonomousHegician/contracts-v888/contracts/Staking/HegicStakingWBTC.sol\":{\"keccak256\":\"0x082d10c9e137d1f90c2eb6993758913659ee5f752f6cce72cf2da50745dbbb11\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8b84b6a88c0855986947ef4e47c72bd86d237148c055481ee5b125f547bf8ec8\",\"dweb:/ipfs/QmP9W2f7oqkgudnWuqu34eKS5XQ88RPgwfoJhS6KEqEF1n\"]},\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xb724300fea77c1c9a14e0e4ddfc48a6e39e679874ab4243eaab779d2269f64f9\",\"urls\":[\"bzz-raw://75f80bb70da262a22b71c8759ab97f8770bbd4556621c098b33f0941cf7b44b6\",\"dweb:/ipfs/QmQ1sMw96vyMza533z8Fq7pmeRk2bbWeWRrywTutbKxGko\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf204d98eef08edacf5a02a2af1516ea4febdb6aba7a1ae5ac8deb6e568fd3dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4dea62bffbd180772a6cfe7cb90e3a045c52d6b502bdb2fdff83193da42d8d0\",\"dweb:/ipfs/QmW8qGZ5nngajmv5Aamdrpkeuq7S5YCVaR7rtcqNekKHtK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7de652204c2ee291a61aa984103dfc7ae4392d651fbbc44a0079caee7c69a3\",\"dweb:/ipfs/Qmcw1cQnq9eWDnrCBwU3TNyqLfTMUFg5YKpYUkELoMPuUE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {
    "4756": [
      {
        "length": 32,
        "start": 2139
      },
      {
        "length": 32,
        "start": 2572
      },
      {
        "length": 32,
        "start": 2816
      }
    ],
    "4767": [
      {
        "length": 32,
        "start": 1440
      },
      {
        "length": 32,
        "start": 2069
      }
    ],
    "5204": [
      {
        "length": 32,
        "start": 1757
      },
      {
        "length": 32,
        "start": 1917
      },
      {
        "length": 32,
        "start": 2034
      },
      {
        "length": 32,
        "start": 4815
      }
    ]
  },
  "sourceMap": "804:829:14:-:0;;;1309:1:12;1283:27;;1449:6;1419:36;;969:138:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;969:138:14;;;;;;;;1590:212:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1590:212:12;;;;;;;2085:12:22;;969:138:14;;;;;;1590:212:12;;;;;;;2085:12:22;;:5;;1590:212:12;2085:12:22;:::i;:::-;-1:-1:-1;2107:16:22;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:22;:14;;-1:-1:-1;;2133:14:22;2145:2;2133:14;;;-1:-1:-1;;;;;;;1713:14:12::1;::::0;;;;::::1;::::0;1737:17:::1;2133:9:22::0;1737:14:12::1;:17::i;:::-;-1:-1:-1::0;;;1785:10:12::1;1764:31;::::0;;::::1;;::::0;1089:11:14;-1:-1:-1;;;;;;1089:11:14;::::1;::::0;-1:-1:-1;804:829:14;;10022:88:22;10082:9;:21;;-1:-1:-1;;10082:21:22;;;;;;;;;;;;10022:88::o;804:829:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;804:829:14;;;-1:-1:-1;804:829:14;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "804:829:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4255:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4255:166:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3262:98;;;:::i;:::-;;;;;;;;;;;;;;;;1225:51:12;;;:::i;:::-;;;;-1:-1:-1;;;;;1225:51:12;;;;;;;;;;;;;;4881:317:22;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4881:317:22;;;;;;;;;;;;;;;;;:::i;2625:127:12:-;;;;;;;;;;;;;;;;-1:-1:-1;2625:127:12;;;;:::i;:::-;;3121:81:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1088:38:12;;;:::i;5593:215:22:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5593:215:22;;;;;;;;:::i;1521:62:12:-;;;;;;;;;;;;;;;;-1:-1:-1;1521:62:12;-1:-1:-1;;;;;1521:62:12;;:::i;934:28:14:-;;;:::i;1132:43:12:-;;;:::i;2758:142::-;;;;;;;;;;;;;;;;-1:-1:-1;2758:142:12;-1:-1:-1;;;;;2758:142:12;;:::i;1113:402:14:-;;;;;;;;;;;;;;;;-1:-1:-1;1113:402:14;;:::i;3418:117:22:-;;;;;;;;;;;;;;;;-1:-1:-1;3418:117:22;-1:-1:-1;;;;;3418:117:22;;:::i;1053:29:12:-;;;:::i;1283:27::-;;;:::i;2413:85:22:-;;;:::i;6295:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6295:266:22;;;;;;;;:::i;1461:54:12:-;;;;;;;;;;;;;;;;-1:-1:-1;1461:54:12;-1:-1:-1;;;;;1461:54:12;;:::i;3738:172:22:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3738:172:22;;;;;;;;:::i;2079:329:12:-;;;;;;;;;;;;;;;;-1:-1:-1;2079:329:12;;:::i;3968:149:22:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3968:149:22;;;;;;;;;;:::i;2414:161:12:-;;;;;;;;;;;;;;;;-1:-1:-1;2414:161:12;;:::i;1419:36::-;;;:::i;1808:265::-;;;:::i;2219:81:22:-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:22;4255:166;;;;;:::o;3262:98::-;3341:12;;3262:98;:::o;1225:51:12:-;;;:::o;4881:317:22:-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5080:19:22;;;;;;:11;:19;;;;;;5100:12;:10;:12::i;:::-;-1:-1:-1;;;;;5080:33:22;;;;;;;;;;;;-1:-1:-1;5080:33:22;;;:89;:37;:89::i;:::-;5049:8;:121::i;:::-;-1:-1:-1;5187:4:22;4881:317;;;;;:::o;2625:127:12:-;2726:10;2695:42;;;;:30;:42;;;;;:50;;-1:-1:-1;;2695:50:12;;;;;;;;;;2625:127::o;3121:81:22:-;3186:9;;;;3121:81;:::o;1088:38:12:-;1122:4;1088:38;:::o;5593:215:22:-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:22;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:22;;;:34;;;;;;;;;;;:38;:50::i;1521:62:12:-;;;;;;;;;;;;;;;:::o;934:28:14:-;;;:::o;1132:43:12:-;1165:10;1132:43;:::o;2758:142::-;2825:4;2848:45;2873:19;2884:7;2873:10;:19::i;:::-;-1:-1:-1;;;;;2848:20:12;;;;;;:11;:20;;;;;;;:24;:45::i;1113:402:14:-;1174:17;1194:13;:11;:13::i;:::-;1174:33;-1:-1:-1;1221:16:14;;1217:292;;1291:12;1268:20;:6;1215:4:12;1268:10:14;:20::i;:::-;:35;;;;;1253:11;:50;;1268:35;;;;1253:50;;;;;1317:56;:4;-1:-1:-1;;;;;1317:21:14;1339:10;1359:4;1366:6;1317:21;:56::i;:::-;1392:14;;;;;;;;;;;;;;;;;1217:292;;;1437:61;-1:-1:-1;;;;;1437:4:14;:21;1459:10;1471:18;1491:6;1437:21;:61::i;:::-;1113:402;;:::o;3418:117:22:-;-1:-1:-1;;;;;3510:18:22;3484:7;3510:18;;;;;;;;;;;;3418:117::o;1053:29:12:-;;;:::o;1283:27::-;;;;:::o;2413:85:22:-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;6295:266;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:22;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:22;;;:34;;;;;;;;;;;:96;:38;:96::i;1461:54:12:-;;;;;;;;;;;;;:::o;3738:172:22:-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;2079:329:12:-;2153:10;2133:31;;;;:19;:31;;;;;2167:15;2133:49;;2200:10;2192:37;;;;;-1:-1:-1;;;2192:37:12;;;;;;;;;;;;-1:-1:-1;;;2192:37:12;;;;;;;;;;;;;;;1122:4;2263:6;2247:13;:11;:13::i;:::-;:22;:36;;2239:45;;;;;;2294:25;2300:10;2312:6;2294:5;:25::i;:::-;2329:72;2352:10;2372:4;2379:21;:6;1165:10;2379;:21::i;:::-;-1:-1:-1;;;;;2329:5:12;:22;;:72;;:22;:72::i;:::-;2079:329;:::o;3968:149:22:-;-1:-1:-1;;;;;4083:18:22;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;2414:161:12:-;4074:12;;4058:10;4038:31;;;;:19;:31;;;;;;4091:15;;4038:49;;:31;:35;:49::i;:::-;:68;;4017:145;;;;;-1:-1:-1;;;4017:145:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:25:::1;2486:10;2498:6;2480:5;:25::i;:::-;2515:53;2534:10;2546:21;:6:::0;1165:10:::1;2546;:21::i;:::-;-1:-1:-1::0;;;;;2515:5:12::1;:18;::::0;:53;:18:::1;:53::i;1419:36::-:0;;;;:::o;1808:265::-;1858:11;1890:22;1901:10;1890;:22::i;:::-;1881:31;;1939:1;1930:6;:10;1922:34;;;;;-1:-1:-1;;;1922:34:12;;;;;;;;;;;;-1:-1:-1;;;1922:34:12;;;;;;;;;;;;;;;1978:10;1992:1;1966:23;;;:11;:23;;;;;:27;2003:23;2019:6;2003:15;:23::i;:::-;2041:25;;;;;;;;2047:10;;2041:25;;;;;;;;;;1808:265;:::o;590:104:18:-;677:10;590:104;:::o;9359:340:22:-;-1:-1:-1;;;;;9460:19:22;;9452:68;;;;-1:-1:-1;;;9452:68:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9538:21:22;;9530:68;;;;-1:-1:-1;;;9530:68:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9609:18:22;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9660:32;;;;;;;;;;;;;;;;;9359:340;;;:::o;7035:530::-;-1:-1:-1;;;;;7140:20:22;;7132:70;;;;-1:-1:-1;;;7132:70:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7220:23:22;;7212:71;;;;-1:-1:-1;;;7212:71:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7372:17:22;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7352:17:22;;;:9;:17;;;;;;;;;;;:91;;;;7476:20;;;;;;;:32;;7501:6;7476:24;:32::i;:::-;-1:-1:-1;;;;;7453:20:22;;;:9;:20;;;;;;;;;;;;:55;;;;7523:35;;;;;;;7453:20;;7523:35;;;;;;;;;;;;;7035:530;;;:::o;1746:187:21:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:21;;;1746:187::o;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:21:o;2906:171:12:-;2966:11;2996:74;1215:4;2996:60;3037:18;3047:7;3037:9;:18::i;:::-;-1:-1:-1;;;;;3012:19:12;;;;;;:10;:19;;;;;;2996:11;;:36;;:15;:36::i;:::-;:40;;:60::i;:::-;:64;;:74::i;2180:459:21:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:21;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:203:24;1004:68;;;-1:-1:-1;;;;;1004:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1004:68:24;-1:-1:-1;;;1004:68:24;;;977:96;;997:5;;977:19;:96::i;:::-;877:203;;;;:::o;7835:370:22:-;-1:-1:-1;;;;;7918:21:22;;7910:65;;;;;-1:-1:-1;;;7910:65:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:12;;:24;;8078:6;8061:16;:24::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:22;;:9;:18;;;;;;;;;;;:30;;8139:6;8116:22;:30::i;:::-;-1:-1:-1;;;;;8095:18:22;;:9;:18;;;;;;;;;;;:51;;;;8161:37;;;;;;;8095:18;;:9;;8161:37;;;;;;;;;;7835:370;;:::o;8524:410::-;-1:-1:-1;;;;;8607:21:22;;8599:67;;;;-1:-1:-1;;;8599:67:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8758:18:22;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8737:18:22;;:9;:18;;;;;;;;;;:89;8851:12;;:24;;8868:6;8851:16;:24::i;:::-;8836:12;:39;8890:37;;;;;;;;8916:1;;-1:-1:-1;;;;;8890:37:22;;;;;;;;;;;;8524:410;;:::o;696:175:24:-;805:58;;;-1:-1:-1;;;;;805:58:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;805:58:24;-1:-1:-1;;;805:58:24;;;778:86;;798:5;;778:19;:86::i;:::-;696:175;;;:::o;3083:253:12:-;3138:11;3161:12;3176:19;3187:7;3176:10;:19::i;:::-;3227:11;;-1:-1:-1;;;;;3205:19:12;;;;;;:10;:19;;;;;;;;:33;;;;3257:11;:20;;;;3161:34;;-1:-1:-1;3257:33:12;;3161:34;3257:24;:33::i;:::-;-1:-1:-1;;;;;3300:20:12;;;;;;;:11;:20;;;;;:29;;;-1:-1:-1;3248:42:12;;3083:253;-1:-1:-1;3083:253:12:o;1521:110:14:-;1587:37;-1:-1:-1;;;;;1587:4:14;:17;1605:10;1617:6;1587:17;:37::i;3342:578:12:-;-1:-1:-1;;;;;3439:18:12;;;3435:40;;3459:16;3470:4;3459:10;:16::i;:::-;;3435:40;-1:-1:-1;;;;;3489:16:12;;;3485:36;;3507:14;3518:2;3507:10;:14::i;:::-;;3485:36;3578:12;;-1:-1:-1;;;;;3548:25:12;;;;;;:19;:25;;;;;;3594:15;;3548:43;;:25;:29;:43::i;:::-;:61;:128;;;;-1:-1:-1;;;;;;3653:23:12;;;;;;;:19;:23;;;;;;;3625:25;;;;;;;;:51;3548:128;3531:383;;;-1:-1:-1;;;;;3727:34:12;;;;;;:30;:34;;;;;;;;3726:35;3701:137;;;;-1:-1:-1;;;3701:137:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3878:25:12;;;;;;;:19;:25;;;;;;;3852:23;;;;;;;:51;3342:578;;;:::o;1321:134:21:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;2959:751:24:-;3378:23;3404:69;3432:4;3404:69;;;;;;;;;;;;;;;;;3412:5;-1:-1:-1;;;;;3404:27:24;;;:69;;;;;:::i;:::-;3487:17;;3378:95;;-1:-1:-1;3487:21:24;3483:221;;3627:10;3616:30;;;;;;;;;;;;;;;-1:-1:-1;3616:30:24;3608:85;;;;-1:-1:-1;;;3608:85:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3713:272:21;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:21:o;3770:194:25:-;3873:12;3904:53;3927:6;3935:4;3941:1;3944:12;3904:22;:53::i;:::-;3897:60;3770:194;-1:-1:-1;;;;3770:194:25:o;5117:958::-;5247:12;5279:18;5290:6;5279:10;:18::i;:::-;5271:60;;;;;-1:-1:-1;;;5271:60:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;5402:12;5416:23;5443:6;-1:-1:-1;;;;;5443:11:25;5463:8;5474:4;5443:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5443:36:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5401:78;;;;5493:7;5489:580;;;5523:10;-1:-1:-1;5516:17:25;;-1:-1:-1;5516:17:25;5489:580;5634:17;;:21;5630:429;;5892:10;5886:17;5952:15;5939:10;5935:2;5931:19;5924:44;5841:145;6024:20;;-1:-1:-1;;;6024:20:25;;;;;;;;;;;;;;;;;6031:12;;6024:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:610;778:4;1239:20;;1084:66;1278:23;;;;;;:42;;-1:-1:-1;;1305:15:25;;;1270:51;-1:-1:-1;;718:610:25:o",
  "source": "/**\n * SPDX-License-Identifier: GPL-3.0-or-later\n * Hegic\n * Copyright (C) 2020 Hegic Protocol\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport \"./HegicStaking.sol\";\npragma solidity 0.6.12;\n\n\ncontract HegicStakingWBTC is HegicStaking, IHegicStakingERC20 {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint;\n\n    IERC20 public immutable WBTC;\n\n    constructor(ERC20 _token, ERC20 wbtc) public\n        HegicStaking(_token, \"HEGIC WBTC Staking lot\", \"hlWBTC\") {\n        WBTC = wbtc;\n    }\n\n    function sendProfit(uint amount) external override {\n        uint _totalSupply = totalSupply();\n        if (_totalSupply > 0) {\n            totalProfit += amount.mul(ACCURACY) / _totalSupply;\n            WBTC.safeTransferFrom(msg.sender, address(this), amount);\n            emit Profit(amount);\n        } else {\n            WBTC.safeTransferFrom(msg.sender, FALLBACK_RECIPIENT, amount);\n        }\n    }\n\n    function _transferProfit(uint amount) internal override {\n        WBTC.safeTransfer(msg.sender, amount);\n    }\n}\n",
  "sourcePath": "/home/tom/Desktop/Medium/AutonomousHegician/contracts-v888/contracts/Staking/HegicStakingWBTC.sol",
  "ast": {
    "absolutePath": "/home/tom/Desktop/Medium/AutonomousHegician/contracts-v888/contracts/Staking/HegicStakingWBTC.sol",
    "exportedSymbols": {
      "HegicStakingWBTC": [
        5289
      ]
    },
    "id": 5290,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/home/tom/Desktop/Medium/AutonomousHegician/contracts-v888/contracts/Staking/HegicStaking.sol",
        "file": "./HegicStaking.sol",
        "id": 5191,
        "nodeType": "ImportDirective",
        "scope": 5290,
        "sourceUnit": 5115,
        "src": "749:28:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5192,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "778:23:14"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5193,
              "name": "HegicStaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5114,
              "src": "833:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HegicStaking_$5114",
                "typeString": "contract HegicStaking"
              }
            },
            "id": 5194,
            "nodeType": "InheritanceSpecifier",
            "src": "833:12:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5195,
              "name": "IHegicStakingERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 421,
              "src": "847:18:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IHegicStakingERC20_$421",
                "typeString": "contract IHegicStakingERC20"
              }
            },
            "id": 5196,
            "nodeType": "InheritanceSpecifier",
            "src": "847:18:14"
          }
        ],
        "contractDependencies": [
          407,
          421,
          5114,
          6090,
          6975,
          7053
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5289,
        "linearizedBaseContracts": [
          5289,
          421,
          5114,
          407,
          6975,
          7053,
          6090
        ],
        "name": "HegicStakingWBTC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5199,
            "libraryName": {
              "contractScope": null,
              "id": 5197,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7266,
              "src": "878:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$7266",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "872:27:14",
            "typeName": {
              "contractScope": null,
              "id": 5198,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7053,
              "src": "892:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$7053",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 5202,
            "libraryName": {
              "contractScope": null,
              "id": 5200,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6468,
              "src": "910:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6468",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "904:24:14",
            "typeName": {
              "id": 5201,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "923:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "4dede3de",
            "id": 5204,
            "mutability": "immutable",
            "name": "WBTC",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5289,
            "src": "934:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$7053",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 5203,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7053,
              "src": "934:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$7053",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5220,
              "nodeType": "Block",
              "src": "1079:28:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5216,
                      "name": "WBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5204,
                      "src": "1089:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$7053",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5217,
                      "name": "wbtc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5208,
                      "src": "1096:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$6975",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1089:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$7053",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 5219,
                  "nodeType": "ExpressionStatement",
                  "src": "1089:11:14"
                }
              ]
            },
            "documentation": null,
            "id": 5221,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5211,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5206,
                    "src": "1035:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$6975",
                      "typeString": "contract ERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "48454749432057425443205374616b696e67206c6f74",
                    "id": 5212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1043:24:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_82b1997ecba083da9dc6444e03945e2fbc7c3ae001c04071bb0b245bca7f2c1c",
                      "typeString": "literal_string \"HEGIC WBTC Staking lot\""
                    },
                    "value": "HEGIC WBTC Staking lot"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "686c57425443",
                    "id": 5213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1069:8:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1de5674121e0fc97ec0cb7e00c60d8475d20a0425407040843616fef379ecefa",
                      "typeString": "literal_string \"hlWBTC\""
                    },
                    "value": "hlWBTC"
                  }
                ],
                "id": 5214,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5210,
                  "name": "HegicStaking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5114,
                  "src": "1022:12:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HegicStaking_$5114_$",
                    "typeString": "type(contract HegicStaking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1022:56:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5206,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5221,
                  "src": "981:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$6975",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5205,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6975,
                    "src": "981:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$6975",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5208,
                  "mutability": "mutable",
                  "name": "wbtc",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5221,
                  "src": "995:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$6975",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5207,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6975,
                    "src": "995:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$6975",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "980:26:14"
            },
            "returnParameters": {
              "id": 5215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1079:0:14"
            },
            "scope": 5289,
            "src": "969:138:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              420
            ],
            "body": {
              "id": 5272,
              "nodeType": "Block",
              "src": "1164:351:14",
              "statements": [
                {
                  "assignments": [
                    5228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5228,
                      "mutability": "mutable",
                      "name": "_totalSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5272,
                      "src": "1174:17:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5227,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1174:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5231,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5229,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6561,
                      "src": "1194:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 5230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1194:13:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1174:33:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5232,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5228,
                      "src": "1221:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1236:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1221:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5270,
                    "nodeType": "Block",
                    "src": "1423:86:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5264,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1459:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1459:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5266,
                              "name": "FALLBACK_RECIPIENT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4767,
                              "src": "1471:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5267,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5223,
                              "src": "1491:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 5261,
                              "name": "WBTC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5204,
                              "src": "1437:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$7053",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7112,
                            "src": "1437:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$7053_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$7053_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 5268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1437:61:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5269,
                        "nodeType": "ExpressionStatement",
                        "src": "1437:61:14"
                      }
                    ]
                  },
                  "id": 5271,
                  "nodeType": "IfStatement",
                  "src": "1217:292:14",
                  "trueBody": {
                    "id": 5260,
                    "nodeType": "Block",
                    "src": "1239:178:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 5235,
                            "name": "totalProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4770,
                            "src": "1253:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5238,
                                  "name": "ACCURACY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4765,
                                  "src": "1279:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5236,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5223,
                                  "src": "1268:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 5237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6381,
                                "src": "1268:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 5239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1268:20:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 5240,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5228,
                              "src": "1291:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1268:35:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1253:50:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5243,
                        "nodeType": "ExpressionStatement",
                        "src": "1253:50:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5247,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1339:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1339:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5251,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1359:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HegicStakingWBTC_$5289",
                                    "typeString": "contract HegicStakingWBTC"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HegicStakingWBTC_$5289",
                                    "typeString": "contract HegicStakingWBTC"
                                  }
                                ],
                                "id": 5250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1351:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5249,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1351:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 5252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1351:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5253,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5223,
                              "src": "1366:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 5244,
                              "name": "WBTC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5204,
                              "src": "1317:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$7053",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7112,
                            "src": "1317:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$7053_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$7053_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 5254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1317:56:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5255,
                        "nodeType": "ExpressionStatement",
                        "src": "1317:56:14"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5257,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5223,
                              "src": "1399:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5256,
                            "name": "Profit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "1392:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 5258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1392:14:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5259,
                        "nodeType": "EmitStatement",
                        "src": "1387:19:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5fc0d2dd",
            "id": 5273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5225,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1155:8:14"
            },
            "parameters": {
              "id": 5224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5223,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5273,
                  "src": "1133:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5222,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1132:13:14"
            },
            "returnParameters": {
              "id": 5226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:0:14"
            },
            "scope": 5289,
            "src": "1113:402:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5095
            ],
            "body": {
              "id": 5287,
              "nodeType": "Block",
              "src": "1577:54:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5282,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1605:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1605:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5284,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5275,
                        "src": "1617:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5279,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5204,
                        "src": "1587:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$7053",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7087,
                      "src": "1587:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$7053_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$7053_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 5285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:37:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5286,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:37:14"
                }
              ]
            },
            "documentation": null,
            "id": 5288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5277,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1568:8:14"
            },
            "parameters": {
              "id": 5276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5275,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5288,
                  "src": "1546:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1545:13:14"
            },
            "returnParameters": {
              "id": 5278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1577:0:14"
            },
            "scope": 5289,
            "src": "1521:110:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 5290,
        "src": "804:829:14"
      }
    ],
    "src": "749:885:14"
  },
  "legacyAST": {
    "absolutePath": "/home/tom/Desktop/Medium/AutonomousHegician/contracts-v888/contracts/Staking/HegicStakingWBTC.sol",
    "exportedSymbols": {
      "HegicStakingWBTC": [
        5289
      ]
    },
    "id": 5290,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/home/tom/Desktop/Medium/AutonomousHegician/contracts-v888/contracts/Staking/HegicStaking.sol",
        "file": "./HegicStaking.sol",
        "id": 5191,
        "nodeType": "ImportDirective",
        "scope": 5290,
        "sourceUnit": 5115,
        "src": "749:28:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5192,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "778:23:14"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5193,
              "name": "HegicStaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5114,
              "src": "833:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HegicStaking_$5114",
                "typeString": "contract HegicStaking"
              }
            },
            "id": 5194,
            "nodeType": "InheritanceSpecifier",
            "src": "833:12:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5195,
              "name": "IHegicStakingERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 421,
              "src": "847:18:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IHegicStakingERC20_$421",
                "typeString": "contract IHegicStakingERC20"
              }
            },
            "id": 5196,
            "nodeType": "InheritanceSpecifier",
            "src": "847:18:14"
          }
        ],
        "contractDependencies": [
          407,
          421,
          5114,
          6090,
          6975,
          7053
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5289,
        "linearizedBaseContracts": [
          5289,
          421,
          5114,
          407,
          6975,
          7053,
          6090
        ],
        "name": "HegicStakingWBTC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5199,
            "libraryName": {
              "contractScope": null,
              "id": 5197,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7266,
              "src": "878:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$7266",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "872:27:14",
            "typeName": {
              "contractScope": null,
              "id": 5198,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7053,
              "src": "892:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$7053",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 5202,
            "libraryName": {
              "contractScope": null,
              "id": 5200,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6468,
              "src": "910:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6468",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "904:24:14",
            "typeName": {
              "id": 5201,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "923:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "4dede3de",
            "id": 5204,
            "mutability": "immutable",
            "name": "WBTC",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5289,
            "src": "934:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$7053",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 5203,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7053,
              "src": "934:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$7053",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5220,
              "nodeType": "Block",
              "src": "1079:28:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5216,
                      "name": "WBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5204,
                      "src": "1089:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$7053",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5217,
                      "name": "wbtc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5208,
                      "src": "1096:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$6975",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1089:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$7053",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 5219,
                  "nodeType": "ExpressionStatement",
                  "src": "1089:11:14"
                }
              ]
            },
            "documentation": null,
            "id": 5221,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5211,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5206,
                    "src": "1035:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$6975",
                      "typeString": "contract ERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "48454749432057425443205374616b696e67206c6f74",
                    "id": 5212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1043:24:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_82b1997ecba083da9dc6444e03945e2fbc7c3ae001c04071bb0b245bca7f2c1c",
                      "typeString": "literal_string \"HEGIC WBTC Staking lot\""
                    },
                    "value": "HEGIC WBTC Staking lot"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "686c57425443",
                    "id": 5213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1069:8:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1de5674121e0fc97ec0cb7e00c60d8475d20a0425407040843616fef379ecefa",
                      "typeString": "literal_string \"hlWBTC\""
                    },
                    "value": "hlWBTC"
                  }
                ],
                "id": 5214,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5210,
                  "name": "HegicStaking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5114,
                  "src": "1022:12:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HegicStaking_$5114_$",
                    "typeString": "type(contract HegicStaking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1022:56:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5206,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5221,
                  "src": "981:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$6975",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5205,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6975,
                    "src": "981:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$6975",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5208,
                  "mutability": "mutable",
                  "name": "wbtc",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5221,
                  "src": "995:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$6975",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5207,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6975,
                    "src": "995:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$6975",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "980:26:14"
            },
            "returnParameters": {
              "id": 5215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1079:0:14"
            },
            "scope": 5289,
            "src": "969:138:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              420
            ],
            "body": {
              "id": 5272,
              "nodeType": "Block",
              "src": "1164:351:14",
              "statements": [
                {
                  "assignments": [
                    5228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5228,
                      "mutability": "mutable",
                      "name": "_totalSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5272,
                      "src": "1174:17:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5227,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1174:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5231,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5229,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6561,
                      "src": "1194:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 5230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1194:13:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1174:33:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5232,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5228,
                      "src": "1221:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1236:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1221:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5270,
                    "nodeType": "Block",
                    "src": "1423:86:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5264,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1459:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1459:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5266,
                              "name": "FALLBACK_RECIPIENT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4767,
                              "src": "1471:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5267,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5223,
                              "src": "1491:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 5261,
                              "name": "WBTC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5204,
                              "src": "1437:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$7053",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7112,
                            "src": "1437:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$7053_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$7053_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 5268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1437:61:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5269,
                        "nodeType": "ExpressionStatement",
                        "src": "1437:61:14"
                      }
                    ]
                  },
                  "id": 5271,
                  "nodeType": "IfStatement",
                  "src": "1217:292:14",
                  "trueBody": {
                    "id": 5260,
                    "nodeType": "Block",
                    "src": "1239:178:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 5235,
                            "name": "totalProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4770,
                            "src": "1253:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5238,
                                  "name": "ACCURACY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4765,
                                  "src": "1279:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5236,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5223,
                                  "src": "1268:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 5237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6381,
                                "src": "1268:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 5239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1268:20:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 5240,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5228,
                              "src": "1291:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1268:35:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1253:50:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5243,
                        "nodeType": "ExpressionStatement",
                        "src": "1253:50:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5247,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1339:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1339:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5251,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1359:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HegicStakingWBTC_$5289",
                                    "typeString": "contract HegicStakingWBTC"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HegicStakingWBTC_$5289",
                                    "typeString": "contract HegicStakingWBTC"
                                  }
                                ],
                                "id": 5250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1351:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5249,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1351:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 5252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1351:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5253,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5223,
                              "src": "1366:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 5244,
                              "name": "WBTC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5204,
                              "src": "1317:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$7053",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7112,
                            "src": "1317:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$7053_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$7053_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 5254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1317:56:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5255,
                        "nodeType": "ExpressionStatement",
                        "src": "1317:56:14"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5257,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5223,
                              "src": "1399:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5256,
                            "name": "Profit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "1392:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 5258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1392:14:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5259,
                        "nodeType": "EmitStatement",
                        "src": "1387:19:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5fc0d2dd",
            "id": 5273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5225,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1155:8:14"
            },
            "parameters": {
              "id": 5224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5223,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5273,
                  "src": "1133:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5222,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1132:13:14"
            },
            "returnParameters": {
              "id": 5226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:0:14"
            },
            "scope": 5289,
            "src": "1113:402:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5095
            ],
            "body": {
              "id": 5287,
              "nodeType": "Block",
              "src": "1577:54:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5282,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1605:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1605:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5284,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5275,
                        "src": "1617:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5279,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5204,
                        "src": "1587:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$7053",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7087,
                      "src": "1587:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$7053_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$7053_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 5285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:37:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5286,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:37:14"
                }
              ]
            },
            "documentation": null,
            "id": 5288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5277,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1568:8:14"
            },
            "parameters": {
              "id": 5276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5275,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5288,
                  "src": "1546:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1545:13:14"
            },
            "returnParameters": {
              "id": 5278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1577:0:14"
            },
            "scope": 5289,
            "src": "1521:110:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 5290,
        "src": "804:829:14"
      }
    ],
    "src": "749:885:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-15T22:58:26.117Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "revertTransfersInLockUpPeriod(bool)": {
        "notice": "Used for ..."
      }
    },
    "version": 1
  }
}