{
  "contractName": "HegicCallOptions",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AggregatorInterface",
          "name": "_priceProvider",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "settlementFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalFee",
          "type": "uint256"
        }
      ],
      "name": "Create",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        }
      ],
      "name": "Exercise",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        }
      ],
      "name": "Expire",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "strike",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "optionID",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "optionID",
          "type": "uint256"
        }
      ],
      "name": "exercise",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "strike",
          "type": "uint256"
        }
      ],
      "name": "fees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "settlementFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "strikeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "impliedVolRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "options",
      "outputs": [
        {
          "internalType": "enum HegicOptions.State",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "address payable",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "strike",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiration",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract HegicETHPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "priceProvider",
      "outputs": [
        {
          "internalType": "contract AggregatorInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setImpliedVolRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "setSettlementFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settlementFeeRecipient",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "optionID",
          "type": "uint256"
        }
      ],
      "name": "unlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "optionIDs",
          "type": "uint256[]"
        }
      ],
      "name": "unlockAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferPoolOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setLockupPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AggregatorInterface\",\"name\":\"_priceProvider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"settlementFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFee\",\"type\":\"uint256\"}],\"name\":\"Create\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"Exercise\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"}],\"name\":\"Expire\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strike\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"optionID\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"optionID\",\"type\":\"uint256\"}],\"name\":\"exercise\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strike\",\"type\":\"uint256\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"settlementFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strikeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"impliedVolRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"options\",\"outputs\":[{\"internalType\":\"enum HegicOptions.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"strike\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract HegicETHPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceProvider\",\"outputs\":[{\"internalType\":\"contract AggregatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setImpliedVolRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setLockupPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"setSettlementFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settlementFeeRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferPoolOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"optionID\",\"type\":\"uint256\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"optionIDs\",\"type\":\"uint256[]\"}],\"name\":\"unlockAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0mllwntrmt3\",\"methods\":{\"constructor\":{\"params\":{\"_priceProvider\":\"The address of ChainLink ETH/USD price feed contract\"}},\"create(uint256,uint256,uint256)\":{\"params\":{\"amount\":\"Option amount\",\"period\":\"Option period in seconds (1 days <= period <= 4 weeks)\",\"strike\":\"Strike price of the option\"},\"returns\":{\"optionID\":\"Created option's ID\"}},\"exercise(uint256)\":{\"params\":{\"optionID\":\"ID of your option\"}},\"fees(uint256,uint256,uint256)\":{\"params\":{\"amount\":\"Option amount\",\"period\":\"Option period in seconds (1 days <= period <= 4 weeks)\",\"strike\":\"Strike price of the option\"},\"returns\":{\"periodFee\":\"Option period fee amount\",\"settlementFee\":\"Amount to be distributed to the HEGIC token holders\",\"strikeFee\":\"Amount that covers the price difference in the ITM options\",\"total\":\"Total price to be paid\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setImpliedVolRate(uint256)\":{\"params\":{\"value\":\"New IVRate value\"}},\"setLockupPeriod(uint256)\":{\"params\":{\"value\":\"New period value\"}},\"setSettlementFeeRecipient(address)\":{\"params\":{\"recipient\":\"New settlementFee recipient address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlock(uint256)\":{\"params\":{\"optionID\":\"ID of the option\"}},\"unlockAll(uint256[])\":{\"params\":{\"optionIDs\":\"array of options\"}}},\"title\":\"Hegic ETH Call Options\"},\"userdoc\":{\"methods\":{\"create(uint256,uint256,uint256)\":{\"notice\":\"Creates a new option\"},\"exercise(uint256)\":{\"notice\":\"Exercises an active option\"},\"fees(uint256,uint256,uint256)\":{\"notice\":\"Used for getting the actual options prices\"},\"setImpliedVolRate(uint256)\":{\"notice\":\"Used for adjusting the options prices while balancing asset's implied volatility rate\"},\"setLockupPeriod(uint256)\":{\"notice\":\"Used for changing the lockup period\"},\"setSettlementFeeRecipient(address)\":{\"notice\":\"Used for changing settlementFeeRecipient\"},\"transferPoolOwnership()\":{\"notice\":\"Can be used to update the contract in critical situations in the first 90 days after deployment\"},\"unlock(uint256)\":{\"notice\":\"Unlock funds locked in the expired options\"},\"unlockAll(uint256[])\":{\"notice\":\"Unlocks an array of options\"}},\"notice\":\"ETH Call Options Contract\"}},\"settings\":{\"compilationTarget\":{\"/home/tom/Desktop/Medium/defi_cefi_bridge/tontine/hedge-contracts-v1/contracts/HegicCallOptions.sol\":\"HegicCallOptions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/tom/Desktop/Medium/defi_cefi_bridge/tontine/hedge-contracts-v1/contracts/HegicCallOptions.sol\":{\"keccak256\":\"0xe832a52317644f5c15ae43a03f97cdc99262530a4e8139f2feb8e0c61cd17a85\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://983012755c2e6a694742c43ebee2251c5bbd875990fbc1e6fe67dec8822f7582\",\"dweb:/ipfs/QmYXtaNnGkjYmm8HUxsN6LZQe9tekgYT7oAQizPf3RBMsB\"]},\"/home/tom/Desktop/Medium/defi_cefi_bridge/tontine/hedge-contracts-v1/contracts/HegicERCPool.sol\":{\"keccak256\":\"0xd8dbffc0064649d3d9192bfffe925710c301daf468c7092b789b18101532c45a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4a090709ad9219c7d560542d34a37ee2f150fab3670f430770a60755b0ba225b\",\"dweb:/ipfs/QmW42PjjB1gmgpHN1RgJVsAHS8MjHMRh5RXVLz1sbH4sKt\"]},\"/home/tom/Desktop/Medium/defi_cefi_bridge/tontine/hedge-contracts-v1/contracts/HegicETHPool.sol\":{\"keccak256\":\"0x34f175ac475949b0f3f7eb669e9c5216194b06db1ee36a9e85bfe0d2e3175ba5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://24f120ab49b1c4e3f822d9a83dce084aa4e94880e6f0f51fc3b78fa587edf9bd\",\"dweb:/ipfs/QmbsXs3GFtBo4pvVrcF5Z9DeTL2C1Meae7z8446QRX7fY5\"]},\"/home/tom/Desktop/Medium/defi_cefi_bridge/tontine/hedge-contracts-v1/contracts/HegicOptions.sol\":{\"keccak256\":\"0x420aa6c8502f74f7bb2a4c81cdac3ca913db4462963b99a40dd129e0ae537566\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://22b763a5b539ebc96e35670d1a417e5d8bee53aa9e19f1a6fcc209efb5f1cb76\",\"dweb:/ipfs/QmVFUaMgpL7h87iEt3tpACPEYa2ARfqeoVyjJE4CdWK1cx\"]},\"/home/tom/Desktop/Medium/defi_cefi_bridge/tontine/hedge-contracts-v1/contracts/Interfaces.sol\":{\"keccak256\":\"0x2575f801dbe4d09d992b67495cb00c7a757dcea37daac6d2072e6f3587be7e60\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://29959e2d0de847eda629469da1d8dae0099aa0813c7ee56a062c781d08e0d5ba\",\"dweb:/ipfs/QmTxLWVwHEwKbggbyNXfyJQ6t9cP9aHPxCHjBtVNyicQ5p\"]},\"@chainlink/contracts/src/v0.6/dev/AggregatorInterface.sol\":{\"keccak256\":\"0x6d7bd741da79333f80399d082539f7e1cd5c2c8130351e9d7fbcd490af6ffac3\",\"urls\":[\"bzz-raw://2bc99efdabc4861265f9918d384e1aa83c83b3dd55191d676aab1aecf2dc2619\",\"dweb:/ipfs/QmcuDP7AouUwxTfyXxVLTRhymp3bcAghA6ae6ZxrYB6PzY\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003a8f38038062003a8f833981810160405260208110156200003757600080fd5b50518060016000620000516001600160e01b036200016a16565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b0319166001600160a01b0384161780825582919060ff60a01b1916600160a01b836001811115620000d357fe5b0217905550620000eb6001600160e01b036200016e16565b600180546001600160a01b0319166001600160a01b0392909216919091179055505061157c6003554260045560405162000125906200017d565b604051809103906000f08015801562000142573d6000803e3d6000fd5b50600680546001600160a01b0319166001600160a01b0392909216919091179055506200018b565b3390565b6000546001600160a01b031690565b611fb48062001adb83390190565b611940806200019b6000396000f3fe6080604052600436106100fe5760003560e01c806396350a8511610095578063c97fe94b11610064578063c97fe94b146102ee578063ceaeeba914610317578063e342b59814610341578063f2fde38b146103be578063f53e2894146103f1576100fe565b806396350a8514610252578063b07f0a4114610285578063b888879e146102af578063c771c390146102c4576100fe565b8063410fa5d9116100d1578063410fa5d9146101e75780636198e339146101fe578063715018a6146102285780638da5cb5b1461023d576100fe565b806316f0115b14610103578063181731dc1461013457806318f88e5b14610149578063409e220514610170575b600080fd5b34801561010f57600080fd5b5061011861044d565b604080516001600160a01b039092168252519081900360200190f35b34801561014057600080fd5b5061011861045c565b34801561015557600080fd5b5061015e61046b565b60408051918252519081900360200190f35b34801561017c57600080fd5b5061019a6004803603602081101561019357600080fd5b5035610471565b604051808760028111156101aa57fe5b60ff1681526001600160a01b039096166020870152506040808601949094526060850192909252608084015260a0830152519081900360c0019150f35b3480156101f357600080fd5b506101fc6104c3565b005b34801561020a57600080fd5b506101fc6004803603602081101561022157600080fd5b50356105a9565b34801561023457600080fd5b506101fc61073a565b34801561024957600080fd5b506101186107dc565b34801561025e57600080fd5b506101fc6004803603602081101561027557600080fd5b50356001600160a01b03166107eb565b34801561029157600080fd5b506101fc600480360360208110156102a857600080fd5b5035610878565b3480156102bb57600080fd5b50610118610a4b565b3480156102d057600080fd5b506101fc600480360360208110156102e757600080fd5b5035610a5a565b61015e6004803603606081101561030457600080fd5b5080359060208101359060400135610b72565b34801561032357600080fd5b506101fc6004803603602081101561033a57600080fd5b5035610f2b565b34801561034d57600080fd5b506101fc6004803603602081101561036457600080fd5b81019060208101813564010000000081111561037f57600080fd5b82018360208201111561039157600080fd5b803590602001918460208302840111640100000000831117156103b357600080fd5b509092509050610fc9565b3480156103ca57600080fd5b506101fc600480360360208110156103e157600080fd5b50356001600160a01b0316610ff8565b3480156103fd57600080fd5b506104276004803603606081101561041457600080fd5b50803590602081013590604001356110f0565b604080519485526020850193909352838301919091526060830152519081900360800190f35b6006546001600160a01b031681565b6001546001600160a01b031681565b60035481565b6002818154811061047e57fe5b60009182526020909120600590910201805460018201546002830154600384015460049094015460ff841695506101009093046001600160a01b031693919290919086565b6104cb6111b6565b6000546001600160a01b0390811691161461051b576040805162461bcd60e51b815260206004820181905260248201526000805160206118ca833981519152604482015290519081900360640190fd5b6004546276a70001421061052e57600080fd5b6006546001600160a01b031663f2fde38b6105476107dc565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b15801561058f57600080fd5b505af11580156105a3573d6000803e3d6000fd5b50505050565b6000600282815481106105b857fe5b9060005260206000209060050201905042816004015410610620576040805162461bcd60e51b815260206004820152601a60248201527f4f7074696f6e20686173206e6f74206578706972656420796574000000000000604482015290519081900360640190fd5b6000815460ff16600281111561063257fe5b1461067b576040805162461bcd60e51b81526020600482015260146024820152734f7074696f6e206973206e6f742061637469766560601b604482015290519081900360640190fd5b805460ff191660029081178083556040805160c081019091526106fc9290918491839160ff16908111156106ab57fe5b60028111156106b657fe5b8152815461010090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260049091015460a0909101526111ba565b6003810154604080519182525183917f5f36a4a575e512eb69d6d28c3b0ff98cca7ba50ad5bf04e14094ad1d425e0d31919081900360200190a25050565b6107426111b6565b6000546001600160a01b03908116911614610792576040805162461bcd60e51b815260206004820181905260248201526000805160206118ca833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6107f36111b6565b6000546001600160a01b03908116911614610843576040805162461bcd60e51b815260206004820181905260248201526000805160206118ca833981519152604482015290519081900360640190fd5b6001600160a01b03811661085657600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006002828154811061088757fe5b9060005260206000209060050201905042816004015410156108e5576040805162461bcd60e51b815260206004820152601260248201527113dc1d1a5bdb881a185cc8195e1c1a5c995960721b604482015290519081900360640190fd5b805461010090046001600160a01b0316331461093b576040805162461bcd60e51b815260206004820152601060248201526f2bb937b7339036b9b39739b2b73232b960811b604482015290519081900360640190fd5b6000815460ff16600281111561094d57fe5b1461098d576040805162461bcd60e51b815260206004820152600b60248201526a57726f6e6720737461746560a81b604482015290519081900360640190fd5b805460ff19166001178082556040805160c08101909152600091610a0f91908490829060ff1660028111156109be57fe5b60028111156109c957fe5b8152815461010090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260049091015460a090910152611276565b60408051828152905191925084917e84fe51c7cb34b132b7b6eb5d5a87a489f8d6d284758d00a0402c1bad9a0def9181900360200190a2505050565b6005546001600160a01b031681565b610a626111b6565b6000546001600160a01b03908116911614610ab2576040805162461bcd60e51b815260206004820181905260248201526000805160206118ca833981519152604482015290519081900360640190fd5b624f1a00811115610b0a576040805162461bcd60e51b815260206004820152601a60248201527f4c6f636b757020706572696f6420697320746f6f206c61726765000000000000604482015290519081900360640190fd5b60065460408051630c771c3960e41b81526004810184905290516001600160a01b039092169163c771c3909160248082019260009290919082900301818387803b158015610b5757600080fd5b505af1158015610b6b573d6000803e3d6000fd5b5050505050565b6000806000610b828686866110f0565b509193509150600090506305f5e100610ba1868863ffffffff61140d16565b81610ba857fe5b04905060008111610bf6576040805162461bcd60e51b8152602060048201526013602482015272105b5bdd5b9d081a5cc81d1bdbc81cdb585b1b606a1b604482015290519081900360640190fd5b828210610c41576040805162461bcd60e51b8152602060048201526014602482015273141c995b5a5d5b481a5cc81d1bdbc81cdb585b1b60621b604482015290519081900360640190fd5b62015180871015610c8f576040805162461bcd60e51b815260206004820152601360248201527214195c9a5bd9081a5cc81d1bdbc81cda1bdc9d606a1b604482015290519081900360640190fd5b6224ea00871115610cdc576040805162461bcd60e51b8152602060048201526012602482015271506572696f6420697320746f6f206c6f6e6760701b604482015290519081900360640190fd5b823414610d1e576040805162461bcd60e51b815260206004820152600b60248201526a57726f6e672076616c756560a81b604482015290519081900360640190fd5b6000610d38610d33858563ffffffff61146f16565b6114b1565b600280546040805160c08101825260008082523360208301529181018b9052606081018c905260808101859052428d0160a082015260018084018555918490528051600584027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054949b509596509094939092849260ff19909116918490811115610dc157fe5b021790555060208281015182546001600160a01b0390911661010002610100600160a81b03199091161782556040808401516001840155606084015160028401556080840151600384015560a09093015160049092019190915581518581529081018690528151339288927f9acccf962da4ed9c3db3a1beedb70b0d4c3f6a69c170baca7198a74548b5ef4e929081900390910190a3610ee560028681548110610e6757fe5b600091825260209091206040805160c081019091526005909202018054829060ff166002811115610e9457fe5b6002811115610e9f57fe5b8152815461010090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260049091015460a090910152611522565b6001546040516001600160a01b039091169084156108fc029085906000818181858888f19350505050158015610f1f573d6000803e3d6000fd5b50505050509392505050565b610f336111b6565b6000546001600160a01b03908116911614610f83576040805162461bcd60e51b815260206004820181905260248201526000805160206118ca833981519152604482015290519081900360640190fd5b6103e8811015610fc45760405162461bcd60e51b81526004018080602001828103825260218152602001806118ea6021913960400191505060405180910390fd5b600355565b8060005b818110156105a357610ff0848483818110610fe457fe5b905060200201356105a9565b600101610fcd565b6110006111b6565b6000546001600160a01b03908116911614611050576040805162461bcd60e51b815260206004820181905260248201526000805160206118ca833981519152604482015290519081900360640190fd5b6001600160a01b0381166110955760405162461bcd60e51b81526004018080602001828103825260268152602001806118836026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000806000600560009054906101000a90046001600160a01b03166001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561114657600080fd5b505afa15801561115a573d6000803e3d6000fd5b505050506040513d602081101561117057600080fd5b5051905061117d87611574565b935061118b8789888461157b565b91506111988787836115fc565b92506111aa828463ffffffff61169616565b94505093509350935093565b3390565b600654608082015160408051634029441560e11b81526004810192909252516001600160a01b0390921691638052882a9160248082019260009290919082900301818387803b15801561120c57600080fd5b505af1158015611220573d6000803e3d6000fd5b5050600654606084015160408051636198e33960e01b81526004810192909252516001600160a01b039092169350636198e339925060248082019260009290919082900301818387803b158015610b5757600080fd5b600080600560009054906101000a90046001600160a01b03166001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156112c757600080fd5b505afa1580156112db573d6000803e3d6000fd5b505050506040513d60208110156112f157600080fd5b5051604084015190915081101561134f576040805162461bcd60e51b815260206004820152601860248201527f43757272656e7420707269636520697320746f6f206c6f770000000000000000604482015290519081900360640190fd5b61138a8161137e856060015161137287604001518661146f90919063ffffffff16565b9063ffffffff61140d16565b9063ffffffff6116f016565b600654602085015160408051633419e74d60e21b81526001600160a01b03928316600482015260248101859052905193955091169163d0679d349160448082019260009290919082900301818387803b1580156113e657600080fd5b505af11580156113fa573d6000803e3d6000fd5b50505050611407836111ba565b50919050565b60008261141c57506000611469565b8282028284828161142957fe5b04146114665760405162461bcd60e51b81526004018080602001828103825260218152602001806118a96021913960400191505060405180910390fd5b90505b92915050565b600061146683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611732565b6000600660009054906101000a90046001600160a01b03166001600160a01b0316639ac1f394836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561150357600080fd5b505af1158015611517573d6000803e3d6000fd5b509495945050505050565b6006546060820151604080516337519c1960e21b81526004810192909252516001600160a01b039092169163dd4670649160248082019260009290919082900301818387803b158015610b5757600080fd5b6064900490565b600080600554600160a01b900460ff16600181111561159657fe5b14156115d2576115cb6305f5e10061137e8461137e876113726003546113726115be8d6117c9565b8e9063ffffffff61140d16565b90506115f4565b6115cb6305f5e10061137e8561137e866113726003546113726115be8d6117c9565b949350505050565b6000818311801561162457506000600554600160a01b900460ff16600181111561162257fe5b145b15611648576116418261137e86611372878463ffffffff61146f16565b905061168f565b818310801561166e57506001600554600160a01b900460ff16600181111561166c57fe5b145b1561168b576116418261137e86611372838863ffffffff61146f16565b5060005b9392505050565b600082820183811015611466576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061146683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061181d565b600081848411156117c15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561178657818101518382015260200161176e565b50505050905090810190601f1680156117b35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b8060006117e2600261137e84600163ffffffff61169616565b90505b818110156114075780611813600261137e83611807888263ffffffff6116f016565b9063ffffffff61169616565b90925090506117e5565b6000818361186c5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561178657818101518382015260200161176e565b50600083858161187857fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572496d706c696564566f6c52617465206c696d697420697320746f6f20736d616c6ca2646970667358221220e440cf89bbf316beb9ac9342e8775350ce60c0eb683fcf13d2ea3d7878a6827764736f6c634300060800336080604052621275006007553480156200001857600080fd5b50604051806040016040528060128152602001712432b3b4b19022aa24102628102a37b5b2b760711b815250604051806040016040528060088152602001670eee4d2e8ca8aa8960c31b8152506000620000776200010260201b60201c565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508151620000d690600490602085019062000107565b508051620000ec90600590602084019062000107565b50506006805460ff1916601217905550620001a9565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200014a57805160ff19168380011785556200017a565b828001600101855582156200017a579182015b828111156200017a5782518255916020019190600101906200015d565b50620001889291506200018c565b5090565b6200010491905b8082111562000188576000815560010162000193565b611dfb80620001b96000396000f3fe6080604052600436106101bb5760003560e01c80638052882a116100ec578063ad7a672f1161008a578063dd46706411610064578063dd46706414610601578063dd62ed3e1461062b578063ee947a7c14610666578063f2fde38b1461067b576101c2565b8063ad7a672f14610589578063c771c3901461059e578063d0679d34146105c8576101c2565b80639ac1f394116100c65780639ac1f394146104fa578063a457c2d714610502578063a9059cbb1461053b578063ab2f0e5114610574576101c2565b80638052882a1461048a5780638da5cb5b146104b457806395d89b41146104e5576101c2565b806339509351116101595780636ab28bc8116101335780636ab28bc81461041857806370a082311461042d578063715018a614610460578063797be55e14610475576101c2565b80633950935114610383578063441a3e70146103bc5780636198e339146103ec576101c2565b806321e5e2c41161019557806321e5e2c4146102c557806323b872dd146102f85780632e2ebe061461033b578063313ce56714610358576101c2565b806306fdde03146101c7578063095ea7b31461025157806318160ddd1461029e576101c2565b366101c257005b600080fd5b3480156101d357600080fd5b506101dc6106ae565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102165781810151838201526020016101fe565b50505050905090810190601f1680156102435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561025d57600080fd5b5061028a6004803603604081101561027457600080fd5b506001600160a01b038135169060200135610744565b604080519115158252519081900360200190f35b3480156102aa57600080fd5b506102b3610762565b60408051918252519081900360200190f35b3480156102d157600080fd5b506102b3600480360360208110156102e857600080fd5b50356001600160a01b0316610768565b34801561030457600080fd5b5061028a6004803603606081101561031b57600080fd5b506001600160a01b038135811691602081013590911690604001356107c0565b6102b36004803603602081101561035157600080fd5b503561084d565b34801561036457600080fd5b5061036d6109bb565b6040805160ff9092168252519081900360200190f35b34801561038f57600080fd5b5061028a600480360360408110156103a657600080fd5b506001600160a01b0381351690602001356109c4565b3480156103c857600080fd5b506102b3600480360360408110156103df57600080fd5b5080359060200135610a18565b3480156103f857600080fd5b506104166004803603602081101561040f57600080fd5b5035610c77565b005b34801561042457600080fd5b506102b3610d29565b34801561043957600080fd5b506102b36004803603602081101561045057600080fd5b50356001600160a01b0316610d2f565b34801561046c57600080fd5b50610416610d4a565b34801561048157600080fd5b506102b3610dec565b34801561049657600080fd5b50610416600480360360208110156104ad57600080fd5b5035610df2565b3480156104c057600080fd5b506104c9610ea4565b604080516001600160a01b039092168252519081900360200190f35b3480156104f157600080fd5b506101dc610eb3565b610416610f14565b34801561050e57600080fd5b5061028a6004803603604081101561052557600080fd5b506001600160a01b038135169060200135610f84565b34801561054757600080fd5b5061028a6004803603604081101561055e57600080fd5b506001600160a01b038135169060200135610ff2565b34801561058057600080fd5b506102b3611006565b34801561059557600080fd5b506102b3611027565b3480156105aa57600080fd5b50610416600480360360208110156105c157600080fd5b503561103e565b3480156105d457600080fd5b50610416600480360360408110156105eb57600080fd5b506001600160a01b0381351690602001356110f3565b34801561060d57600080fd5b506104166004803603602081101561062457600080fd5b50356111da565b34801561063757600080fd5b506102b36004803603604081101561064e57600080fd5b506001600160a01b03813581169160200135166112a8565b34801561067257600080fd5b506102b36112d3565b34801561068757600080fd5b506104166004803603602081101561069e57600080fd5b50356001600160a01b03166112d9565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561073a5780601f1061070f5761010080835404028352916020019161073a565b820191906000526020600020905b81548152906001019060200180831161071d57829003601f168201915b5050505050905090565b60006107586107516113d1565b84846113d5565b5060015b92915050565b60035490565b600080610773610762565b11156107b7576107b0610784610762565b6107a461079085610d2f565b610798611027565b9063ffffffff6114c116565b9063ffffffff61152116565b90506107bb565b5060005b919050565b60006107cd848484611563565b610843846107d96113d1565b61083e85604051806060016040528060288152602001611cef602891396001600160a01b038a166000908152600260205260408120906108176113d1565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6116cc16565b6113d5565b5060019392505050565b336000908152600a6020526040812042905580610868610762565b90506000610874611027565b90506000821180156108865750600081115b156108b5576108ae61089e823463ffffffff61176316565b6107a4348563ffffffff6114c116565b92506108ca565b6108c7346103e863ffffffff6114c116565b92505b8383101561091f576040805162461bcd60e51b815260206004820152601d60248201527f506f6f6c3a204d696e74206c696d697420697320746f6f206c61726765000000604482015290519081900360640190fd5b60008311610970576040805162461bcd60e51b8152602060048201526019602482015278141bdbdb0e88105b5bdd5b9d081a5cc81d1bdbc81cdb585b1b603a1b604482015290519081900360640190fd5b61097a33846117a5565b6040805134815260208101859052815133927f4089141ea5e4c16575f5ebf65f1786497ea07c175846fc7745ef8d8986a4ff65928290030190a25050919050565b60065460ff1690565b60006107586109d16113d1565b8461083e85600260006109e26113d1565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6118a316565b600754336000908152600a602052604081205490914291610a3e9163ffffffff6118a316565b1115610a91576040805162461bcd60e51b815260206004820152601d60248201527f506f6f6c3a205769746864726177616c206973206c6f636b6564207570000000604482015290519081900360640190fd5b610a99611006565b831115610ad75760405162461bcd60e51b815260040180806020018281038252604b815260200180611b0f604b913960600191505060405180910390fd5b610afa610ae2611027565b6107a4610aed610762565b869063ffffffff6114c116565b905081811115610b51576040805162461bcd60e51b815260206004820152601d60248201527f506f6f6c3a204275726e206c696d697420697320746f6f20736d616c6c000000604482015290519081900360640190fd5b610b5a33610d2f565b811115610bae576040805162461bcd60e51b815260206004820152601960248201527f506f6f6c3a20416d6f756e7420697320746f6f206c6172676500000000000000604482015290519081900360640190fd5b60008111610bff576040805162461bcd60e51b8152602060048201526019602482015278141bdbdb0e88105b5bdd5b9d081a5cc81d1bdbc81cdb585b1b603a1b604482015290519081900360640190fd5b610c0933826118fd565b6040805184815260208101839052815133927ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568928290030190a2604051339084156108fc029085906000818181858888f19350505050158015610c70573d6000803e3d6000fd5b5092915050565b610c7f6113d1565b6000546001600160a01b03908116911614610ccf576040805162461bcd60e51b81526020600482018190526024820152600080516020611d17833981519152604482015290519081900360640190fd5b806008541015610d105760405162461bcd60e51b8152600401808060200182810382526071815260200180611c7e6071913960800191505060405180910390fd5b600854610d23908263ffffffff61176316565b60085550565b60085481565b6001600160a01b031660009081526001602052604090205490565b610d526113d1565b6000546001600160a01b03908116911614610da2576040805162461bcd60e51b81526020600482018190526024820152600080516020611d17833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60095481565b610dfa6113d1565b6000546001600160a01b03908116911614610e4a576040805162461bcd60e51b81526020600482018190526024820152600080516020611d17833981519152604482015290519081900360640190fd5b806009541015610e8b5760405162461bcd60e51b8152600401808060200182810382526073815260200180611bc46073913960800191505060405180910390fd5b600954610e9e908263ffffffff61176316565b60095550565b6000546001600160a01b031690565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561073a5780601f1061070f5761010080835404028352916020019161073a565b610f1c6113d1565b6000546001600160a01b03908116911614610f6c576040805162461bcd60e51b81526020600482018190526024820152600080516020611d17833981519152604482015290519081900360640190fd5b600954610f7f903463ffffffff6118a316565b600955565b6000610758610f916113d1565b8461083e85604051806060016040528060258152602001611da16025913960026000610fbb6113d1565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6116cc16565b6000610758610fff6113d1565b8484611563565b6000611022600854611016611027565b9063ffffffff61176316565b905090565b60006110226009544761176390919063ffffffff16565b6110466113d1565b6000546001600160a01b03908116911614611096576040805162461bcd60e51b81526020600482018190526024820152600080516020611d17833981519152604482015290519081900360640190fd5b624f1a008111156110ee576040805162461bcd60e51b815260206004820152601a60248201527f4c6f636b757020706572696f6420697320746f6f206c61726765000000000000604482015290519081900360640190fd5b600755565b6110fb6113d1565b6000546001600160a01b0390811691161461114b576040805162461bcd60e51b81526020600482018190526024820152600080516020611d17833981519152604482015290519081900360640190fd5b6001600160a01b03821661115e57600080fd5b80600854101561119f5760405162461bcd60e51b8152600401808060200182810382526073815260200180611bc46073913960800191505060405180910390fd5b6040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156111d5573d6000803e3d6000fd5b505050565b6111e26113d1565b6000546001600160a01b03908116911614611232576040805162461bcd60e51b81526020600482018190526024820152600080516020611d17833981519152604482015290519081900360640190fd5b600861125961123f611027565b6107a4600a610798866008546118a390919063ffffffff16565b106112955760405162461bcd60e51b8152600401808060200182810382526071815260200180611c7e6071913960800191505060405180910390fd5b600854610d23908263ffffffff6118a316565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60075481565b6112e16113d1565b6000546001600160a01b03908116911614611331576040805162461bcd60e51b81526020600482018190526024820152600080516020611d17833981519152604482015290519081900360640190fd5b6001600160a01b0381166113765760405162461bcd60e51b8152600401808060200182810382526026815260200180611b7c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b03831661141a5760405162461bcd60e51b8152600401808060200182810382526024815260200180611d7d6024913960400191505060405180910390fd5b6001600160a01b03821661145f5760405162461bcd60e51b8152600401808060200182810382526022815260200180611ba26022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000826114d05750600061075c565b828202828482816114dd57fe5b041461151a5760405162461bcd60e51b8152600401808060200182810382526021815260200180611c5d6021913960400191505060405180910390fd5b9392505050565b600061151a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611a05565b6001600160a01b0383166115a85760405162461bcd60e51b8152600401808060200182810382526025815260200180611d586025913960400191505060405180910390fd5b6001600160a01b0382166115ed5760405162461bcd60e51b8152600401808060200182810382526023815260200180611aec6023913960400191505060405180910390fd5b6115f8838383611a6a565b61163b81604051806060016040528060268152602001611c37602691396001600160a01b038616600090815260016020526040902054919063ffffffff6116cc16565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611670908263ffffffff6118a316565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561175b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611720578181015183820152602001611708565b50505050905090810190601f16801561174d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600061151a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506116cc565b6001600160a01b038216611800576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61180c60008383611a6a565b60035461181f908263ffffffff6118a316565b6003556001600160a01b03821660009081526001602052604090205461184b908263ffffffff6118a316565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008282018381101561151a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166119425760405162461bcd60e51b8152600401808060200182810382526021815260200180611d376021913960400191505060405180910390fd5b61194e82600083611a6a565b61199181604051806060016040528060228152602001611b5a602291396001600160a01b038516600090815260016020526040902054919063ffffffff6116cc16565b6001600160a01b0383166000908152600160205260409020556003546119bd908263ffffffff61176316565b6003556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60008183611a545760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611720578181015183820152602001611708565b506000838581611a6057fe5b0495945050505050565b6007546001600160a01b0384166000908152600a60205260409020544291611a98919063ffffffff6118a316565b11156111d5576040805162461bcd60e51b815260206004820152601d60248201527f506f6f6c3a205769746864726177616c206973206c6f636b6564207570000000604482015290519081900360640190fdfe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373506f6f6c204572726f723a204e6f7420656e6f7567682066756e6473206f6e2074686520706f6f6c20636f6e74726163742e20506c65617365206c6f7765722074686520616d6f756e742e45524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373506f6f6c204572726f723a20596f752061726520747279696e6720746f20756e6c6f636b206d6f7265207072656d69756d73207468616e2068617665206265656e206c6f636b656420666f722074686520636f6e74726163742e20506c65617365206c6f7765722074686520616d6f756e742e45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77506f6f6c204572726f723a20596f752061726520747279696e6720746f20756e6c6f636b206d6f72652066756e6473207468616e2068617665206265656e206c6f636b656420666f7220796f757220636f6e74726163742e20506c65617365206c6f7765722074686520616d6f756e742e45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220700f4ff937751dd8eaf511b3fb35e0f4902ba4aa201313084cf2e41dc94b88e064736f6c63430006080033",
  "deployedBytecode": "0x6080604052600436106100fe5760003560e01c806396350a8511610095578063c97fe94b11610064578063c97fe94b146102ee578063ceaeeba914610317578063e342b59814610341578063f2fde38b146103be578063f53e2894146103f1576100fe565b806396350a8514610252578063b07f0a4114610285578063b888879e146102af578063c771c390146102c4576100fe565b8063410fa5d9116100d1578063410fa5d9146101e75780636198e339146101fe578063715018a6146102285780638da5cb5b1461023d576100fe565b806316f0115b14610103578063181731dc1461013457806318f88e5b14610149578063409e220514610170575b600080fd5b34801561010f57600080fd5b5061011861044d565b604080516001600160a01b039092168252519081900360200190f35b34801561014057600080fd5b5061011861045c565b34801561015557600080fd5b5061015e61046b565b60408051918252519081900360200190f35b34801561017c57600080fd5b5061019a6004803603602081101561019357600080fd5b5035610471565b604051808760028111156101aa57fe5b60ff1681526001600160a01b039096166020870152506040808601949094526060850192909252608084015260a0830152519081900360c0019150f35b3480156101f357600080fd5b506101fc6104c3565b005b34801561020a57600080fd5b506101fc6004803603602081101561022157600080fd5b50356105a9565b34801561023457600080fd5b506101fc61073a565b34801561024957600080fd5b506101186107dc565b34801561025e57600080fd5b506101fc6004803603602081101561027557600080fd5b50356001600160a01b03166107eb565b34801561029157600080fd5b506101fc600480360360208110156102a857600080fd5b5035610878565b3480156102bb57600080fd5b50610118610a4b565b3480156102d057600080fd5b506101fc600480360360208110156102e757600080fd5b5035610a5a565b61015e6004803603606081101561030457600080fd5b5080359060208101359060400135610b72565b34801561032357600080fd5b506101fc6004803603602081101561033a57600080fd5b5035610f2b565b34801561034d57600080fd5b506101fc6004803603602081101561036457600080fd5b81019060208101813564010000000081111561037f57600080fd5b82018360208201111561039157600080fd5b803590602001918460208302840111640100000000831117156103b357600080fd5b509092509050610fc9565b3480156103ca57600080fd5b506101fc600480360360208110156103e157600080fd5b50356001600160a01b0316610ff8565b3480156103fd57600080fd5b506104276004803603606081101561041457600080fd5b50803590602081013590604001356110f0565b604080519485526020850193909352838301919091526060830152519081900360800190f35b6006546001600160a01b031681565b6001546001600160a01b031681565b60035481565b6002818154811061047e57fe5b60009182526020909120600590910201805460018201546002830154600384015460049094015460ff841695506101009093046001600160a01b031693919290919086565b6104cb6111b6565b6000546001600160a01b0390811691161461051b576040805162461bcd60e51b815260206004820181905260248201526000805160206118ca833981519152604482015290519081900360640190fd5b6004546276a70001421061052e57600080fd5b6006546001600160a01b031663f2fde38b6105476107dc565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b15801561058f57600080fd5b505af11580156105a3573d6000803e3d6000fd5b50505050565b6000600282815481106105b857fe5b9060005260206000209060050201905042816004015410610620576040805162461bcd60e51b815260206004820152601a60248201527f4f7074696f6e20686173206e6f74206578706972656420796574000000000000604482015290519081900360640190fd5b6000815460ff16600281111561063257fe5b1461067b576040805162461bcd60e51b81526020600482015260146024820152734f7074696f6e206973206e6f742061637469766560601b604482015290519081900360640190fd5b805460ff191660029081178083556040805160c081019091526106fc9290918491839160ff16908111156106ab57fe5b60028111156106b657fe5b8152815461010090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260049091015460a0909101526111ba565b6003810154604080519182525183917f5f36a4a575e512eb69d6d28c3b0ff98cca7ba50ad5bf04e14094ad1d425e0d31919081900360200190a25050565b6107426111b6565b6000546001600160a01b03908116911614610792576040805162461bcd60e51b815260206004820181905260248201526000805160206118ca833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6107f36111b6565b6000546001600160a01b03908116911614610843576040805162461bcd60e51b815260206004820181905260248201526000805160206118ca833981519152604482015290519081900360640190fd5b6001600160a01b03811661085657600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006002828154811061088757fe5b9060005260206000209060050201905042816004015410156108e5576040805162461bcd60e51b815260206004820152601260248201527113dc1d1a5bdb881a185cc8195e1c1a5c995960721b604482015290519081900360640190fd5b805461010090046001600160a01b0316331461093b576040805162461bcd60e51b815260206004820152601060248201526f2bb937b7339036b9b39739b2b73232b960811b604482015290519081900360640190fd5b6000815460ff16600281111561094d57fe5b1461098d576040805162461bcd60e51b815260206004820152600b60248201526a57726f6e6720737461746560a81b604482015290519081900360640190fd5b805460ff19166001178082556040805160c08101909152600091610a0f91908490829060ff1660028111156109be57fe5b60028111156109c957fe5b8152815461010090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260049091015460a090910152611276565b60408051828152905191925084917e84fe51c7cb34b132b7b6eb5d5a87a489f8d6d284758d00a0402c1bad9a0def9181900360200190a2505050565b6005546001600160a01b031681565b610a626111b6565b6000546001600160a01b03908116911614610ab2576040805162461bcd60e51b815260206004820181905260248201526000805160206118ca833981519152604482015290519081900360640190fd5b624f1a00811115610b0a576040805162461bcd60e51b815260206004820152601a60248201527f4c6f636b757020706572696f6420697320746f6f206c61726765000000000000604482015290519081900360640190fd5b60065460408051630c771c3960e41b81526004810184905290516001600160a01b039092169163c771c3909160248082019260009290919082900301818387803b158015610b5757600080fd5b505af1158015610b6b573d6000803e3d6000fd5b5050505050565b6000806000610b828686866110f0565b509193509150600090506305f5e100610ba1868863ffffffff61140d16565b81610ba857fe5b04905060008111610bf6576040805162461bcd60e51b8152602060048201526013602482015272105b5bdd5b9d081a5cc81d1bdbc81cdb585b1b606a1b604482015290519081900360640190fd5b828210610c41576040805162461bcd60e51b8152602060048201526014602482015273141c995b5a5d5b481a5cc81d1bdbc81cdb585b1b60621b604482015290519081900360640190fd5b62015180871015610c8f576040805162461bcd60e51b815260206004820152601360248201527214195c9a5bd9081a5cc81d1bdbc81cda1bdc9d606a1b604482015290519081900360640190fd5b6224ea00871115610cdc576040805162461bcd60e51b8152602060048201526012602482015271506572696f6420697320746f6f206c6f6e6760701b604482015290519081900360640190fd5b823414610d1e576040805162461bcd60e51b815260206004820152600b60248201526a57726f6e672076616c756560a81b604482015290519081900360640190fd5b6000610d38610d33858563ffffffff61146f16565b6114b1565b600280546040805160c08101825260008082523360208301529181018b9052606081018c905260808101859052428d0160a082015260018084018555918490528051600584027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054949b509596509094939092849260ff19909116918490811115610dc157fe5b021790555060208281015182546001600160a01b0390911661010002610100600160a81b03199091161782556040808401516001840155606084015160028401556080840151600384015560a09093015160049092019190915581518581529081018690528151339288927f9acccf962da4ed9c3db3a1beedb70b0d4c3f6a69c170baca7198a74548b5ef4e929081900390910190a3610ee560028681548110610e6757fe5b600091825260209091206040805160c081019091526005909202018054829060ff166002811115610e9457fe5b6002811115610e9f57fe5b8152815461010090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260049091015460a090910152611522565b6001546040516001600160a01b039091169084156108fc029085906000818181858888f19350505050158015610f1f573d6000803e3d6000fd5b50505050509392505050565b610f336111b6565b6000546001600160a01b03908116911614610f83576040805162461bcd60e51b815260206004820181905260248201526000805160206118ca833981519152604482015290519081900360640190fd5b6103e8811015610fc45760405162461bcd60e51b81526004018080602001828103825260218152602001806118ea6021913960400191505060405180910390fd5b600355565b8060005b818110156105a357610ff0848483818110610fe457fe5b905060200201356105a9565b600101610fcd565b6110006111b6565b6000546001600160a01b03908116911614611050576040805162461bcd60e51b815260206004820181905260248201526000805160206118ca833981519152604482015290519081900360640190fd5b6001600160a01b0381166110955760405162461bcd60e51b81526004018080602001828103825260268152602001806118836026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000806000600560009054906101000a90046001600160a01b03166001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561114657600080fd5b505afa15801561115a573d6000803e3d6000fd5b505050506040513d602081101561117057600080fd5b5051905061117d87611574565b935061118b8789888461157b565b91506111988787836115fc565b92506111aa828463ffffffff61169616565b94505093509350935093565b3390565b600654608082015160408051634029441560e11b81526004810192909252516001600160a01b0390921691638052882a9160248082019260009290919082900301818387803b15801561120c57600080fd5b505af1158015611220573d6000803e3d6000fd5b5050600654606084015160408051636198e33960e01b81526004810192909252516001600160a01b039092169350636198e339925060248082019260009290919082900301818387803b158015610b5757600080fd5b600080600560009054906101000a90046001600160a01b03166001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156112c757600080fd5b505afa1580156112db573d6000803e3d6000fd5b505050506040513d60208110156112f157600080fd5b5051604084015190915081101561134f576040805162461bcd60e51b815260206004820152601860248201527f43757272656e7420707269636520697320746f6f206c6f770000000000000000604482015290519081900360640190fd5b61138a8161137e856060015161137287604001518661146f90919063ffffffff16565b9063ffffffff61140d16565b9063ffffffff6116f016565b600654602085015160408051633419e74d60e21b81526001600160a01b03928316600482015260248101859052905193955091169163d0679d349160448082019260009290919082900301818387803b1580156113e657600080fd5b505af11580156113fa573d6000803e3d6000fd5b50505050611407836111ba565b50919050565b60008261141c57506000611469565b8282028284828161142957fe5b04146114665760405162461bcd60e51b81526004018080602001828103825260218152602001806118a96021913960400191505060405180910390fd5b90505b92915050565b600061146683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611732565b6000600660009054906101000a90046001600160a01b03166001600160a01b0316639ac1f394836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561150357600080fd5b505af1158015611517573d6000803e3d6000fd5b509495945050505050565b6006546060820151604080516337519c1960e21b81526004810192909252516001600160a01b039092169163dd4670649160248082019260009290919082900301818387803b158015610b5757600080fd5b6064900490565b600080600554600160a01b900460ff16600181111561159657fe5b14156115d2576115cb6305f5e10061137e8461137e876113726003546113726115be8d6117c9565b8e9063ffffffff61140d16565b90506115f4565b6115cb6305f5e10061137e8561137e866113726003546113726115be8d6117c9565b949350505050565b6000818311801561162457506000600554600160a01b900460ff16600181111561162257fe5b145b15611648576116418261137e86611372878463ffffffff61146f16565b905061168f565b818310801561166e57506001600554600160a01b900460ff16600181111561166c57fe5b145b1561168b576116418261137e86611372838863ffffffff61146f16565b5060005b9392505050565b600082820183811015611466576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061146683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061181d565b600081848411156117c15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561178657818101518382015260200161176e565b50505050905090810190601f1680156117b35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b8060006117e2600261137e84600163ffffffff61169616565b90505b818110156114075780611813600261137e83611807888263ffffffff6116f016565b9063ffffffff61169616565b90925090506117e5565b6000818361186c5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561178657818101518382015260200161176e565b50600083858161187857fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572496d706c696564566f6c52617465206c696d697420697320746f6f20736d616c6ca2646970667358221220e440cf89bbf316beb9ac9342e8775350ce60c0eb683fcf13d2ea3d7878a6827764736f6c63430006080033",
  "immutableReferences": {},
  "sourceMap": "904:2328:0:-:0;;;1081:176;5:9:-1;2:2;;;27:1;24;17:12;2:2;1081:176:0;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1081:176:0;;1181:28;832:17:11;852:12;-1:-1:-1;;;;;852:10:11;:12;:::i;:::-;874:6;:18;;-1:-1:-1;;;;;;874:18:11;-1:-1:-1;;;;;874:18:11;;;;;;;907:43;;874:18;;-1:-1:-1;874:18:11;907:43;;874:6;;907:43;-1:-1:-1;2075:13:4;:18;;-1:-1:-1;;;;;;2075:18:4;-1:-1:-1;;;;;2075:18:4;;;;;;2116:5;;2075:13;-1:-1:-1;;;;2103:18:4;-1:-1:-1;;;2116:5:4;-1:-1:-1;2103:18:4;;;;;;;;;;;-1:-1:-1;2164:7:4;-1:-1:-1;;;;;2164:5:4;:7;:::i;:::-;2131:22;:41;;-1:-1:-1;;;;;;2131:41:4;-1:-1:-1;;;;;2131:41:4;;;;;;;;;;-1:-1:-1;;2199:4:4;2182:14;:21;2241:3;2213:25;:31;1232:18:0::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;1225:4:0::1;:25:::0;;-1:-1:-1;;;;;;1225:25:0::1;-1:-1:-1::0;;;;;1225:25:0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;904:2328:0;;735:104:10;822:10;735:104;:::o;1033:77:11:-;1071:7;1097:6;-1:-1:-1;;;;;1097:6:11;1033:77;:::o;904:2328:0:-;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "904:2328:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;952:24:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;952:24:0;;;:::i;:::-;;;;-1:-1:-1;;;;;952:24:0;;;;;;;;;;;;;;1050:45:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1050:45:4;;;:::i;1130:29::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1130:29:4;;;:::i;:::-;;;;;;;;;;;;;;;;1101:23;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1101:23:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1101:23:4;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1101:23:4;;;;;;;-1:-1:-1;1101:23:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1101:23:4;1390:160:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1390:160:0;;;:::i;:::-;;6313:356:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6313:356:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6313:356:4;;:::i;1656:145:11:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1656:145:11;;;:::i;1033:77::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1033:77:11;;;:::i;2718:174:4:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2718:174:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2718:174:4;-1:-1:-1;;;;;2718:174:4;;:::i;4379:424::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4379:424:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4379:424:4;;:::i;1265:40::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1265:40:4;;;:::i;1660:168:0:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1660:168:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1660:168:0;;:::i;3153:1121:4:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3153:1121:4;;;;;;;;;;;;:::i;2411:169::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2411:169:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2411:169:4;;:::i;4909:206::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4909:206:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4909:206:4;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;4909:206:4;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;4909:206:4;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;4909:206:4;;-1:-1:-1;4909:206:4;-1:-1:-1;4909:206:4;:::i;1950:240:11:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1950:240:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1950:240:11;-1:-1:-1;;;;;1950:240:11;;:::i;5613:580:4:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5613:580:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5613:580:4;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:24:0;;;-1:-1:-1;;;;;952:24:0;;:::o;1050:45:4:-;;;-1:-1:-1;;;;;1050:45:4;;:::o;1130:29::-;;;;:::o;1101:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1101:23:4;;;;-1:-1:-1;;;;;1101:23:4;;;;;;;;:::o;1390:160:0:-;1247:12:11;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:11;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:11;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:11;;;;;;;;;;;;;;;1466:25:0::1;;1494:7;1466:35;1460:3;:41;1452:50;;12:1:-1;9::::0;2:12:::1;1452:50:0;1512:4;::::0;-1:-1:-1;;;;;1512:4:0::1;:22;1535:7;:5;:7::i;:::-;1512:31;;;;;;;;;;;;;-1:-1:-1::0;;;;;1512:31:0::1;-1:-1:-1::0;;;;;1512:31:0::1;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;1512:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;1512:31:0;;;;1390:160::o:0;6313:356:4:-;6364:21;6388:7;6396:8;6388:17;;;;;;;;;;;;;;;;;;6364:41;;6443:3;6423:6;:17;;;:23;6415:62;;;;;-1:-1:-1;;;6415:62:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;6511:12;6495;;;;:28;;;;;;;;;6487:61;;;;;-1:-1:-1;;;6487:61:4;;;;;;;;;;;;-1:-1:-1;;;6487:61:4;;;;;;;;;;;;;;;6558:28;;-1:-1:-1;;6558:28:4;6573:13;6558:28;;;;;;6596:19;;;;;;;;;;;;;6558:28;;6596:19;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6596:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:11;:19::i;:::-;6647:14;;;;6630:32;;;;;;;6637:8;;6630:32;;;;;;;;;;6313:356;;:::o;1656:145:11:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:11;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:11;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:11;;;;;;;;;;;;;;;1762:1:::1;1746:6:::0;;1725:40:::1;::::0;-1:-1:-1;;;;;1746:6:11;;::::1;::::0;1725:40:::1;::::0;1762:1;;1725:40:::1;1792:1;1775:19:::0;;-1:-1:-1;;;;;;1775:19:11::1;::::0;;1656:145::o;1033:77::-;1071:7;1097:6;-1:-1:-1;;;;;1097:6:11;1033:77;:::o;2718:174:4:-;1247:12:11;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:11;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:11;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:11;;;;;;;;;;;;;;;-1:-1:-1;;;;;2817:23:4;::::1;2809:32;;12:1:-1;9::::0;2:12:::1;2809:32:4;2851:22;:34:::0;;-1:-1:-1;;;;;;2851:34:4::1;-1:-1:-1::0;;;;;2851:34:4;;;::::1;::::0;;;::::1;::::0;;2718:174::o;4379:424::-;4434:21;4458:7;4466:8;4458:17;;;;;;;;;;;;;;;;;;4434:41;;4515:3;4494:6;:17;;;:24;;4486:55;;;;;-1:-1:-1;;;4486:55:4;;;;;;;;;;;;-1:-1:-1;;;4486:55:4;;;;;;;;;;;;;;;4559:13;;;;;-1:-1:-1;;;;;4559:13:4;4576:10;4559:27;4551:56;;;;;-1:-1:-1;;;4551:56:4;;;;;;;;;;;;-1:-1:-1;;;4551:56:4;;;;;;;;;;;;;;;4641:12;4625;;;;:28;;;;;;;;;4617:52;;;;;-1:-1:-1;;;4617:52:4;;;;;;;;;;;;-1:-1:-1;;;4617:52:4;;;;;;;;;;;;;;;4680:30;;-1:-1:-1;;4680:30:4;4695:15;4680:30;;;;4737:17;;;;;;;;;-1:-1:-1;;4737:17:4;;;4680:30;;4737:17;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4737:17:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:17::i;:::-;4770:26;;;;;;;;4720:34;;-1:-1:-1;4779:8:4;;4770:26;;;;;;;;;4379:424;;;:::o;1265:40::-;;;-1:-1:-1;;;;;1265:40:4;;:::o;1660:168:0:-;1247:12:11;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:11;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:11;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:11;;;;;;;;;;;;;;;1746:7:0::1;1737:5;:16;;1729:55;;;::::0;;-1:-1:-1;;;1729:55:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1794:4;::::0;:27:::1;::::0;;-1:-1:-1;;;1794:27:0;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;1794:4:0;;::::1;::::0;:20:::1;::::0;:27;;;;;:4:::1;::::0;:27;;;;;;;;:4;;:27;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;1794:27:0;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;1794:27:0;;;;1660:168:::0;:::o;3153:1121:4:-;3273:16;3302:13;3317:21;3346:74;3364:6;3384;3404;3346:4;:74::i;:::-;-1:-1:-1;3301:119:4;;-1:-1:-1;3301:119:4;-1:-1:-1;3430:20:4;;-1:-1:-1;1208:3:4;3453:18;:6;3464;3453:18;:10;:18;:::i;:::-;:35;;;;;;3430:58;;3522:1;3507:12;:16;3499:48;;;;;-1:-1:-1;;;3499:48:4;;;;;;;;;;;;-1:-1:-1;;;3499:48:4;;;;;;;;;;;;;;;3581:5;3565:13;:21;3557:54;;;;;-1:-1:-1;;;3557:54:4;;;;;;;;;;;;-1:-1:-1;;;3557:54:4;;;;;;;;;;;;;;;3639:6;3629;:16;;3621:48;;;;;-1:-1:-1;;;3621:48:4;;;;;;;;;;;;-1:-1:-1;;;3621:48:4;;;;;;;;;;;;;;;3697:7;3687:6;:17;;3679:48;;;;;-1:-1:-1;;;3679:48:4;;;;;;;;;;;;-1:-1:-1;;;3679:48:4;;;;;;;;;;;;;;;3758:5;3745:9;:18;3737:42;;;;;-1:-1:-1;;;3737:42:4;;;;;;;;;;;;-1:-1:-1;;;3737:42:4;;;;;;;;;;;;;;;3790:15;3808:37;3820:24;:5;3830:13;3820:24;:9;:24;:::i;:::-;3808:11;:37::i;:::-;3866:7;:14;;3916:181;;;;;;;;-1:-1:-1;3916:181:4;;;3970:10;3916:181;;;;;;;;;;;;;;;;;;;;;;4071:3;:12;;3916:181;;;;39:1:-1;23:18;;;45:23;;3890:217:4;;;;;;;;;;;;;3866:14;;-1:-1:-1;3790:55:4;;-1:-1:-1;3916:181:4;;3890:217;;;;;-1:-1:-1;;3890:217:4;;;;;;;;;;;;;;;;;-1:-1:-1;3890:217:4;;;;;;;-1:-1:-1;;;;;3890:217:4;;;;;-1:-1:-1;;;;;;3890:217:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4123:50;;;;;;;;;;;;;4140:10;;4130:8;;4123:50;;;;;;;;;;;4183:28;4193:7;4201:8;4193:17;;;;;;;;;;;;;;;;4183:28;;;;;;;;;4193:17;;;;;4183:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4183:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:28::i;:::-;4221:22;;:46;;-1:-1:-1;;;;;4221:22:4;;;;:46;;;;;4253:13;;4221:22;:46;:22;:46;4253:13;4221:22;:46;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4221:46:4;3153:1121;;;;;;;;;:::o;2411:169::-;1247:12:11;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:11;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:11;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:11;;;;;;;;;;;;;;;2499:4:4::1;2490:5;:13;;2482:59;;;;-1:-1:-1::0;;;2482:59:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2551:14;:22:::0;2411:169::o;4909:206::-;4996:9;4977:16;5022:87;5046:11;5042:1;:15;5022:87;;;5078:20;5085:9;;5095:1;5085:12;;;;;;;;;;;;;5078:6;:20::i;:::-;5059:3;;5022:87;;1950:240:11;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:11;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:11;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:11;;;;;;;;;;;;;;;-1:-1:-1;;;;;2038:22:11;::::1;2030:73;;;;-1:-1:-1::0;;;2030:73:11::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2139:6;::::0;;2118:38:::1;::::0;-1:-1:-1;;;;;2118:38:11;;::::1;::::0;2139:6;::::1;::::0;2118:38:::1;::::0;::::1;2166:6;:17:::0;;-1:-1:-1;;;;;;2166:17:11::1;-1:-1:-1::0;;;;;2166:17:11;;;::::1;::::0;;;::::1;::::0;;1950:240::o;5613:580:4:-;5763:13;5790:21;5825:17;5856;5898:20;5929:13;;;;;;;;;-1:-1:-1;;;;;5929:13:4;-1:-1:-1;;;;;5929:26:4;;:28;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5929:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5929:28:4;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5929:28:4;;-1:-1:-1;5984:24:4;6001:6;5984:16;:24::i;:::-;5968:40;;6030:50;6043:6;6051;6059;6067:12;6030;:50::i;:::-;6018:62;;6102:42;6115:6;6123;6131:12;6102;:42::i;:::-;6090:54;-1:-1:-1;6162:24:4;:9;6090:54;6162:24;:13;:24;:::i;:::-;6154:32;;5613:580;;;;;;;;:::o;735:104:10:-;822:10;735:104;:::o;3082:148:0:-;3153:4;;3172:14;;;;3153:34;;;-1:-1:-1;;;3153:34:0;;;;;;;;;;-1:-1:-1;;;;;3153:4:0;;;;:18;;:34;;;;;:4;;:34;;;;;;;;:4;;:34;;;2:2:-1;;;;27:1;24;17:12;2:2;3153:34:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3197:4:0;;3209:13;;;;3197:26;;;-1:-1:-1;;;3197:26:0;;;;;;;;;;-1:-1:-1;;;;;3197:4:0;;;;-1:-1:-1;3197:11:0;;-1:-1:-1;3197:26:0;;;;;:4;;:26;;;;;;;;:4;;:26;;;2:2:-1;;;;27:1;24;17:12;2522:414:0;2614:11;2641:17;2666:13;;;;;;;;;-1:-1:-1;;;;;2666:13:0;-1:-1:-1;;;;;2666:26:0;;:28;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2666:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2666:28:0;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2666:28:0;2713:13;;;;2666:28;;-1:-1:-1;2713:29:0;-1:-1:-1;2713:29:0;2705:66;;;;;-1:-1:-1;;;2705:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2790:68;2845:12;2790:50;2826:6;:13;;;2790:31;2807:6;:13;;;2790:12;:16;;:31;;;;:::i;:::-;:35;:50;:35;:50;:::i;:::-;:54;:68;:54;:68;:::i;:::-;2868:4;;2878:13;;;;2868:32;;;-1:-1:-1;;;2868:32:0;;-1:-1:-1;;;;;2868:32:0;;;;;;;;;;;;;;;2781:77;;-1:-1:-1;2868:4:0;;;:9;;:32;;;;;:4;;:32;;;;;;;;:4;;:32;;;2:2:-1;;;;27:1;24;17:12;2:2;2868:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2868:32:0;;;;2910:19;2922:6;2910:11;:19::i;:::-;2522:414;;;;:::o;2119:459:12:-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:12;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;;;2496:56:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2570:1;-1:-1:-1;2119:459:12;;;;;:::o;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;1989:150:0:-;2050:11;2073:4;;;;;;;;;-1:-1:-1;;;;;2073:4:0;-1:-1:-1;;;;;2073:16:0;;2098:6;2073:34;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2073:34:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;2126:6:0;;1989:150;-1:-1:-1;;;;;1989:150:0:o;2264:100::-;2333:4;;2343:13;;;;2333:24;;;-1:-1:-1;;;2333:24:0;;;;;;;;;;-1:-1:-1;;;;;2333:4:0;;;;:9;;:24;;;;;:4;;:24;;;;;;;;:4;;:24;;;2:2:-1;;;;27:1;24;17:12;6807:142:4;6939:3;6930:12;;;6807:142::o;7519:628::-;7672:11;;7699:10;;-1:-1:-1;;;7699:10:4;;;;:28;;;;;;;;;7695:445;;;7748:179;1208:3;7748:142;7877:12;7748:107;7848:6;7748:78;7811:14;;7748:41;7776:12;7781:6;7776:4;:12::i;:::-;7748:6;;:41;:27;:41;:::i;:179::-;7741:186;;;;7695:445;7961:179;1208:3;7961:142;8096:6;7961:113;8061:12;7961:78;8024:14;;7961:41;7989:12;7994:6;7989:4;:12::i;7695:445::-;7519:628;;;;;;:::o;8373:452::-;8502:11;8538:12;8529:6;:21;:53;;;;-1:-1:-1;8568:14:4;8554:10;;-1:-1:-1;;;8554:10:4;;;;:28;;;;;;;;;8529:53;8525:132;;;8603:54;8644:12;8603:36;8632:6;8603:24;:6;8644:12;8603:24;:10;:24;:::i;:54::-;8596:61;;;;8525:132;8680:12;8671:6;:21;:54;;;;-1:-1:-1;8710:15:4;8696:10;;-1:-1:-1;;;8696:10:4;;;;:29;;;;;;;;;8671:54;8667:133;;;8746:54;8787:12;8746:36;8775:6;8746:24;8787:12;8763:6;8746:24;:16;:24;:::i;8667:133::-;-1:-1:-1;8817:1:4;8373:452;;;;;;:::o;834:176:12:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:12;;;;;;;;;;;;;;;;;;;;;;;;;;;3033:130;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;1692:187::-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1797:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:12;;;1692:187::o;9246:197:4:-;9328:1;9293:14;9351:15;9364:1;9351:8;9328:1;9357;9351:8;:5;:8;:::i;:15::-;9339:27;;9376:60;9387:6;9383:1;:10;9376:60;;;9410:1;9413:22;9433:1;9413:15;9410:1;9413:8;:1;9410;9413:8;:5;:8;:::i;:::-;:12;:15;:12;:15;:::i;:22::-;9395:41;;-1:-1:-1;9395:41:4;-1:-1:-1;9376:60:4;;3638:338:12;3724:7;3824:12;3817:5;3809:28;;;;-1:-1:-1;;;3809:28:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3809:28:12;;3847:9;3863:1;3859;:5;;;;;;;3638:338;-1:-1:-1;;;;;3638:338:12:o",
  "source": "/**\n * SPDX-License-Identifier: GPL-3.0-or-later\n * Hegic\n * Copyright (C) 2020 Hegic Protocol\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.6.8;\nimport \"./HegicOptions.sol\";\n\n\n/**\n * @author 0mllwntrmt3\n * @title Hegic ETH Call Options\n * @notice ETH Call Options Contract\n */\ncontract HegicCallOptions is HegicOptions {\n    HegicETHPool public pool;\n\n    /**\n     * @param _priceProvider The address of ChainLink ETH/USD price feed contract\n     */\n    constructor(AggregatorInterface _priceProvider)\n        public\n        HegicOptions(_priceProvider, HegicOptions.OptionType.Call)\n    {\n        pool = new HegicETHPool();\n    }\n\n    /**\n     * @notice Can be used to update the contract in critical situations in the first 90 days after deployment\n     */\n    function transferPoolOwnership() external onlyOwner {\n        require(now < contractCreationTimestamp + 90 days);\n        pool.transferOwnership(owner());\n    }\n\n    /**\n     * @notice Used for changing the lockup period\n     * @param value New period value\n     */\n    function setLockupPeriod(uint256 value) external onlyOwner {\n        require(value <= 60 days, \"Lockup period is too large\");\n        pool.setLockupPeriod(value);\n    }\n\n    /**\n     * @notice Sends premiums to the ETH liquidity pool contract\n     * @param amount The amount of premiums that will be sent to the pool\n     */\n    function sendPremium(uint amount) internal override returns (uint locked) {\n        pool.sendPremium {value: amount}();\n        locked = amount;\n    }\n\n    /**\n     * @notice Locks the amount required for an option\n     * @param option A specific option contract\n     */\n    function lockFunds(Option memory option) internal override {\n        pool.lock(option.amount);\n    }\n\n    /**\n     * @notice Sends profits in ETH from the ETH pool to a call option holder's address\n     * @param option A specific option contract\n     */\n    function payProfit(Option memory option)\n        internal\n        override\n        returns (uint profit)\n    {\n        uint currentPrice = uint(priceProvider.latestAnswer());\n        require(option.strike <= currentPrice, \"Current price is too low\");\n        profit = currentPrice.sub(option.strike).mul(option.amount).div(currentPrice);\n        pool.send(option.holder, profit);\n        unlockFunds(option);\n    }\n\n    /**\n     * @notice Unlocks the amount that was locked in a call option contract\n     * @param option A specific option contract\n     */\n    function unlockFunds(Option memory option) internal override {\n        pool.unlockPremium(option.premium);\n        pool.unlock(option.amount);\n    }\n}\n",
  "sourcePath": "/home/tom/Desktop/Medium/defi_cefi_bridge/tontine/hedge-contracts-v1/contracts/HegicCallOptions.sol",
  "ast": {
    "absolutePath": "/home/tom/Desktop/Medium/defi_cefi_bridge/tontine/hedge-contracts-v1/contracts/HegicCallOptions.sol",
    "exportedSymbols": {
      "HegicCallOptions": [
        183
      ]
    },
    "id": 184,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "749:22:0"
      },
      {
        "absolutePath": "/home/tom/Desktop/Medium/defi_cefi_bridge/tontine/hedge-contracts-v1/contracts/HegicOptions.sol",
        "file": "./HegicOptions.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 184,
        "sourceUnit": 2197,
        "src": "772:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "HegicOptions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2196,
              "src": "933:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HegicOptions_$2196",
                "typeString": "contract HegicOptions"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "933:12:0"
          }
        ],
        "contractDependencies": [
          1092,
          2196,
          2966,
          3075
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "803:100:0",
          "text": "@author 0mllwntrmt3\n@title Hegic ETH Call Options\n@notice ETH Call Options Contract"
        },
        "fullyImplemented": true,
        "id": 183,
        "linearizedBaseContracts": [
          183,
          2196,
          3075,
          2966
        ],
        "name": "HegicCallOptions",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 7,
            "mutability": "mutable",
            "name": "pool",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 183,
            "src": "952:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_HegicETHPool_$1092",
              "typeString": "contract HegicETHPool"
            },
            "typeName": {
              "contractScope": null,
              "id": 6,
              "name": "HegicETHPool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1092,
              "src": "952:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                "typeString": "contract HegicETHPool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "1215:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 19,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1225:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                        "typeString": "contract HegicETHPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1232:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_HegicETHPool_$1092_$",
                          "typeString": "function () returns (contract HegicETHPool)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 20,
                          "name": "HegicETHPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1092,
                          "src": "1236:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                            "typeString": "contract HegicETHPool"
                          }
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1232:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                        "typeString": "contract HegicETHPool"
                      }
                    },
                    "src": "1225:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                      "typeString": "contract HegicETHPool"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "1225:25:0"
                }
              ]
            },
            "documentation": {
              "id": 8,
              "nodeType": "StructuredDocumentation",
              "src": "983:93:0",
              "text": "@param _priceProvider The address of ChainLink ETH/USD price feed contract"
            },
            "id": 26,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 13,
                    "name": "_priceProvider",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "1165:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorInterface_$2939",
                      "typeString": "contract AggregatorInterface"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 14,
                        "name": "HegicOptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "1181:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HegicOptions_$2196_$",
                          "typeString": "type(contract HegicOptions)"
                        }
                      },
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "OptionType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1601,
                      "src": "1181:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_OptionType_$1601_$",
                        "typeString": "type(enum HegicOptions.OptionType)"
                      }
                    },
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Call",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1181:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OptionType_$1601",
                      "typeString": "enum HegicOptions.OptionType"
                    }
                  }
                ],
                "id": 17,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12,
                  "name": "HegicOptions",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2196,
                  "src": "1152:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HegicOptions_$2196_$",
                    "typeString": "type(contract HegicOptions)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1152:58:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_priceProvider",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 26,
                  "src": "1093:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AggregatorInterface_$2939",
                    "typeString": "contract AggregatorInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9,
                    "name": "AggregatorInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2939,
                    "src": "1093:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorInterface_$2939",
                      "typeString": "contract AggregatorInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1092:36:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1215:0:0"
            },
            "scope": 183,
            "src": "1081:176:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "1442:108:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 33,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "1460:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 34,
                            "name": "contractCreationTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1568,
                            "src": "1466:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3930",
                            "id": 35,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1494:7:0",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_7776000_by_1",
                              "typeString": "int_const 7776000"
                            },
                            "value": "90"
                          },
                          "src": "1466:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1460:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 32,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1452:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1452:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3011,
                          "src": "1535:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1535:7:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 40,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1512:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                          "typeString": "contract HegicETHPool"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3074,
                      "src": "1512:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:31:0"
                }
              ]
            },
            "documentation": {
              "id": 27,
              "nodeType": "StructuredDocumentation",
              "src": "1263:122:0",
              "text": "@notice Can be used to update the contract in critical situations in the first 90 days after deployment"
            },
            "functionSelector": "410fa5d9",
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 30,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 29,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3024,
                  "src": "1432:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1432:9:0"
              }
            ],
            "name": "transferPoolOwnership",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:2:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1442:0:0"
            },
            "scope": 183,
            "src": "1390:160:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "1719:109:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 57,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "1737:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3630",
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1746:7:0",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5184000_by_1",
                            "typeString": "int_const 5184000"
                          },
                          "value": "60"
                        },
                        "src": "1737:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6f636b757020706572696f6420697320746f6f206c61726765",
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1755:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b59d3b9e113ae7b5a5e9cb5a18f3bc7a49bd30743be53ef336ec7938bb2c0502",
                          "typeString": "literal_string \"Lockup period is too large\""
                        },
                        "value": "Lockup period is too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b59d3b9e113ae7b5a5e9cb5a18f3bc7a49bd30743be53ef336ec7938bb2c0502",
                          "typeString": "literal_string \"Lockup period is too large\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1729:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1815:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1794:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                          "typeString": "contract HegicETHPool"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setLockupPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 710,
                      "src": "1794:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:27:0"
                }
              ]
            },
            "documentation": {
              "id": 49,
              "nodeType": "StructuredDocumentation",
              "src": "1556:99:0",
              "text": "@notice Used for changing the lockup period\n@param value New period value"
            },
            "functionSelector": "c771c390",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 54,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 53,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3024,
                  "src": "1709:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1709:9:0"
              }
            ],
            "name": "setLockupPeriod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 70,
                  "src": "1685:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1684:15:0"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1719:0:0"
            },
            "scope": 183,
            "src": "1660:168:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2134
            ],
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "2063:76:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 79,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2073:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                            "typeString": "contract HegicETHPool"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sendPremium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 953,
                        "src": "2073:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "2098:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2073:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 86,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "2117:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2126:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2117:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:15:0"
                }
              ]
            },
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "1834:150:0",
              "text": "@notice Sends premiums to the ETH liquidity pool contract\n@param amount The amount of premiums that will be sent to the pool"
            },
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendPremium",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 75,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2032:8:0"
            },
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "2010:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2010:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2009:13:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "locked",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "2050:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2050:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2049:13:0"
            },
            "scope": 183,
            "src": "1989:150:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2146
            ],
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "2323:41:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 101,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "2343:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                            "typeString": "struct HegicOptions.Option memory"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1609,
                        "src": "2343:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2333:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                          "typeString": "contract HegicETHPool"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 915,
                      "src": "2333:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:24:0"
                }
              ]
            },
            "documentation": {
              "id": 92,
              "nodeType": "StructuredDocumentation",
              "src": "2145:114:0",
              "text": "@notice Locks the amount required for an option\n@param option A specific option contract"
            },
            "id": 106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockFunds",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 96,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2314:8:0"
            },
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "option",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 106,
                  "src": "2283:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                    "typeString": "struct HegicOptions.Option"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 93,
                    "name": "Option",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1614,
                    "src": "2283:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Option_$1614_storage_ptr",
                      "typeString": "struct HegicOptions.Option"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2282:22:0"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2323:0:0"
            },
            "scope": 183,
            "src": "2264:100:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2141
            ],
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "2631:305:0",
              "statements": [
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "currentPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 159,
                      "src": "2641:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2641:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 123,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 119,
                            "name": "priceProvider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1570,
                            "src": "2666:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorInterface_$2939",
                              "typeString": "contract AggregatorInterface"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "latestAnswer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2898,
                          "src": "2666:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                            "typeString": "function () view external returns (int256)"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2666:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2661:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2661:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2661:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2641:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "option",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "2713:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                              "typeString": "struct HegicOptions.Option memory"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "strike",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1607,
                          "src": "2713:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 127,
                          "name": "currentPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "2730:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2713:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43757272656e7420707269636520697320746f6f206c6f77",
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2744:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0abecfc6008e72e62dd637bc2e7f9589fc2649cf65938553e48f1d74cb45aa22",
                          "typeString": "literal_string \"Current price is too low\""
                        },
                        "value": "Current price is too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0abecfc6008e72e62dd637bc2e7f9589fc2649cf65938553e48f1d74cb45aa22",
                          "typeString": "literal_string \"Current price is too low\""
                        }
                      ],
                      "id": 124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2705:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2705:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2705:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 132,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2781:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 143,
                          "name": "currentPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "2845:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 139,
                                "name": "option",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "2826:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                                  "typeString": "struct HegicOptions.Option memory"
                                }
                              },
                              "id": 140,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1609,
                              "src": "2826:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 135,
                                    "name": "option",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 109,
                                    "src": "2807:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                                      "typeString": "struct HegicOptions.Option memory"
                                    }
                                  },
                                  "id": 136,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "strike",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1607,
                                  "src": "2807:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 133,
                                  "name": "currentPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 116,
                                  "src": "2790:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3121,
                                "src": "2790:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2790:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3184,
                            "src": "2790:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2790:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3201,
                        "src": "2790:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2790:68:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2781:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "2781:77:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 150,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "2878:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                            "typeString": "struct HegicOptions.Option memory"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "holder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1605,
                        "src": "2878:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2893:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2868:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                          "typeString": "contract HegicETHPool"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1009,
                      "src": "2868:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256) external"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2868:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2868:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "option",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "2922:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                          "typeString": "struct HegicOptions.Option memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                          "typeString": "struct HegicOptions.Option memory"
                        }
                      ],
                      "id": 155,
                      "name": "unlockFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        182
                      ],
                      "referencedDeclaration": 182,
                      "src": "2910:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Option_$1614_memory_ptr_$returns$__$",
                        "typeString": "function (struct HegicOptions.Option memory)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2910:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "2910:19:0"
                }
              ]
            },
            "documentation": {
              "id": 107,
              "nodeType": "StructuredDocumentation",
              "src": "2370:147:0",
              "text": "@notice Sends profits in ETH from the ETH pool to a call option holder's address\n@param option A specific option contract"
            },
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 111,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2588:8:0"
            },
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "option",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 160,
                  "src": "2541:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                    "typeString": "struct HegicOptions.Option"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 108,
                    "name": "Option",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1614,
                    "src": "2541:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Option_$1614_storage_ptr",
                      "typeString": "struct HegicOptions.Option"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2540:22:0"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "profit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 160,
                  "src": "2614:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2614:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2613:13:0"
            },
            "scope": 183,
            "src": "2522:414:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2151
            ],
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "3143:87:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 170,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "3172:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                            "typeString": "struct HegicOptions.Option memory"
                          }
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "premium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1611,
                        "src": "3172:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3153:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                          "typeString": "contract HegicETHPool"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unlockPremium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 976,
                      "src": "3153:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3153:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "3153:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "3209:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                            "typeString": "struct HegicOptions.Option memory"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1609,
                        "src": "3209:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3197:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                          "typeString": "contract HegicETHPool"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 938,
                      "src": "3197:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3197:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "3197:26:0"
                }
              ]
            },
            "documentation": {
              "id": 161,
              "nodeType": "StructuredDocumentation",
              "src": "2942:135:0",
              "text": "@notice Unlocks the amount that was locked in a call option contract\n@param option A specific option contract"
            },
            "id": 182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockFunds",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 165,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3134:8:0"
            },
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "option",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 182,
                  "src": "3103:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                    "typeString": "struct HegicOptions.Option"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 162,
                    "name": "Option",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1614,
                    "src": "3103:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Option_$1614_storage_ptr",
                      "typeString": "struct HegicOptions.Option"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3102:22:0"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3143:0:0"
            },
            "scope": 183,
            "src": "3082:148:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 184,
        "src": "904:2328:0"
      }
    ],
    "src": "749:2484:0"
  },
  "legacyAST": {
    "absolutePath": "/home/tom/Desktop/Medium/defi_cefi_bridge/tontine/hedge-contracts-v1/contracts/HegicCallOptions.sol",
    "exportedSymbols": {
      "HegicCallOptions": [
        183
      ]
    },
    "id": 184,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "749:22:0"
      },
      {
        "absolutePath": "/home/tom/Desktop/Medium/defi_cefi_bridge/tontine/hedge-contracts-v1/contracts/HegicOptions.sol",
        "file": "./HegicOptions.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 184,
        "sourceUnit": 2197,
        "src": "772:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "HegicOptions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2196,
              "src": "933:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HegicOptions_$2196",
                "typeString": "contract HegicOptions"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "933:12:0"
          }
        ],
        "contractDependencies": [
          1092,
          2196,
          2966,
          3075
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "803:100:0",
          "text": "@author 0mllwntrmt3\n@title Hegic ETH Call Options\n@notice ETH Call Options Contract"
        },
        "fullyImplemented": true,
        "id": 183,
        "linearizedBaseContracts": [
          183,
          2196,
          3075,
          2966
        ],
        "name": "HegicCallOptions",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 7,
            "mutability": "mutable",
            "name": "pool",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 183,
            "src": "952:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_HegicETHPool_$1092",
              "typeString": "contract HegicETHPool"
            },
            "typeName": {
              "contractScope": null,
              "id": 6,
              "name": "HegicETHPool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1092,
              "src": "952:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                "typeString": "contract HegicETHPool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "1215:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 19,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1225:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                        "typeString": "contract HegicETHPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1232:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_HegicETHPool_$1092_$",
                          "typeString": "function () returns (contract HegicETHPool)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 20,
                          "name": "HegicETHPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1092,
                          "src": "1236:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                            "typeString": "contract HegicETHPool"
                          }
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1232:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                        "typeString": "contract HegicETHPool"
                      }
                    },
                    "src": "1225:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                      "typeString": "contract HegicETHPool"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "1225:25:0"
                }
              ]
            },
            "documentation": {
              "id": 8,
              "nodeType": "StructuredDocumentation",
              "src": "983:93:0",
              "text": "@param _priceProvider The address of ChainLink ETH/USD price feed contract"
            },
            "id": 26,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 13,
                    "name": "_priceProvider",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "1165:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorInterface_$2939",
                      "typeString": "contract AggregatorInterface"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 14,
                        "name": "HegicOptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "1181:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HegicOptions_$2196_$",
                          "typeString": "type(contract HegicOptions)"
                        }
                      },
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "OptionType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1601,
                      "src": "1181:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_OptionType_$1601_$",
                        "typeString": "type(enum HegicOptions.OptionType)"
                      }
                    },
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Call",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1181:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OptionType_$1601",
                      "typeString": "enum HegicOptions.OptionType"
                    }
                  }
                ],
                "id": 17,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12,
                  "name": "HegicOptions",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2196,
                  "src": "1152:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HegicOptions_$2196_$",
                    "typeString": "type(contract HegicOptions)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1152:58:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_priceProvider",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 26,
                  "src": "1093:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AggregatorInterface_$2939",
                    "typeString": "contract AggregatorInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9,
                    "name": "AggregatorInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2939,
                    "src": "1093:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorInterface_$2939",
                      "typeString": "contract AggregatorInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1092:36:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1215:0:0"
            },
            "scope": 183,
            "src": "1081:176:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "1442:108:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 33,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "1460:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 34,
                            "name": "contractCreationTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1568,
                            "src": "1466:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3930",
                            "id": 35,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1494:7:0",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_7776000_by_1",
                              "typeString": "int_const 7776000"
                            },
                            "value": "90"
                          },
                          "src": "1466:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1460:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 32,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1452:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1452:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3011,
                          "src": "1535:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1535:7:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 40,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1512:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                          "typeString": "contract HegicETHPool"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3074,
                      "src": "1512:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:31:0"
                }
              ]
            },
            "documentation": {
              "id": 27,
              "nodeType": "StructuredDocumentation",
              "src": "1263:122:0",
              "text": "@notice Can be used to update the contract in critical situations in the first 90 days after deployment"
            },
            "functionSelector": "410fa5d9",
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 30,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 29,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3024,
                  "src": "1432:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1432:9:0"
              }
            ],
            "name": "transferPoolOwnership",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:2:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1442:0:0"
            },
            "scope": 183,
            "src": "1390:160:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "1719:109:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 57,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "1737:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3630",
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1746:7:0",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5184000_by_1",
                            "typeString": "int_const 5184000"
                          },
                          "value": "60"
                        },
                        "src": "1737:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6f636b757020706572696f6420697320746f6f206c61726765",
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1755:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b59d3b9e113ae7b5a5e9cb5a18f3bc7a49bd30743be53ef336ec7938bb2c0502",
                          "typeString": "literal_string \"Lockup period is too large\""
                        },
                        "value": "Lockup period is too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b59d3b9e113ae7b5a5e9cb5a18f3bc7a49bd30743be53ef336ec7938bb2c0502",
                          "typeString": "literal_string \"Lockup period is too large\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1729:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1815:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1794:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                          "typeString": "contract HegicETHPool"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setLockupPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 710,
                      "src": "1794:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:27:0"
                }
              ]
            },
            "documentation": {
              "id": 49,
              "nodeType": "StructuredDocumentation",
              "src": "1556:99:0",
              "text": "@notice Used for changing the lockup period\n@param value New period value"
            },
            "functionSelector": "c771c390",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 54,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 53,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3024,
                  "src": "1709:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1709:9:0"
              }
            ],
            "name": "setLockupPeriod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 70,
                  "src": "1685:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1684:15:0"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1719:0:0"
            },
            "scope": 183,
            "src": "1660:168:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2134
            ],
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "2063:76:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 79,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2073:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                            "typeString": "contract HegicETHPool"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sendPremium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 953,
                        "src": "2073:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "2098:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2073:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 86,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "2117:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2126:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2117:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:15:0"
                }
              ]
            },
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "1834:150:0",
              "text": "@notice Sends premiums to the ETH liquidity pool contract\n@param amount The amount of premiums that will be sent to the pool"
            },
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendPremium",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 75,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2032:8:0"
            },
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "2010:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2010:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2009:13:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "locked",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 91,
                  "src": "2050:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2050:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2049:13:0"
            },
            "scope": 183,
            "src": "1989:150:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2146
            ],
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "2323:41:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 101,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "2343:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                            "typeString": "struct HegicOptions.Option memory"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1609,
                        "src": "2343:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2333:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                          "typeString": "contract HegicETHPool"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 915,
                      "src": "2333:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:24:0"
                }
              ]
            },
            "documentation": {
              "id": 92,
              "nodeType": "StructuredDocumentation",
              "src": "2145:114:0",
              "text": "@notice Locks the amount required for an option\n@param option A specific option contract"
            },
            "id": 106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockFunds",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 96,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2314:8:0"
            },
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "option",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 106,
                  "src": "2283:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                    "typeString": "struct HegicOptions.Option"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 93,
                    "name": "Option",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1614,
                    "src": "2283:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Option_$1614_storage_ptr",
                      "typeString": "struct HegicOptions.Option"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2282:22:0"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2323:0:0"
            },
            "scope": 183,
            "src": "2264:100:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2141
            ],
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "2631:305:0",
              "statements": [
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "currentPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 159,
                      "src": "2641:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2641:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 123,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 119,
                            "name": "priceProvider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1570,
                            "src": "2666:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorInterface_$2939",
                              "typeString": "contract AggregatorInterface"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "latestAnswer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2898,
                          "src": "2666:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                            "typeString": "function () view external returns (int256)"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2666:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2661:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2661:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2661:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2641:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "option",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "2713:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                              "typeString": "struct HegicOptions.Option memory"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "strike",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1607,
                          "src": "2713:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 127,
                          "name": "currentPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "2730:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2713:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43757272656e7420707269636520697320746f6f206c6f77",
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2744:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0abecfc6008e72e62dd637bc2e7f9589fc2649cf65938553e48f1d74cb45aa22",
                          "typeString": "literal_string \"Current price is too low\""
                        },
                        "value": "Current price is too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0abecfc6008e72e62dd637bc2e7f9589fc2649cf65938553e48f1d74cb45aa22",
                          "typeString": "literal_string \"Current price is too low\""
                        }
                      ],
                      "id": 124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2705:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2705:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2705:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 132,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2781:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 143,
                          "name": "currentPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "2845:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 139,
                                "name": "option",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "2826:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                                  "typeString": "struct HegicOptions.Option memory"
                                }
                              },
                              "id": 140,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1609,
                              "src": "2826:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 135,
                                    "name": "option",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 109,
                                    "src": "2807:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                                      "typeString": "struct HegicOptions.Option memory"
                                    }
                                  },
                                  "id": 136,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "strike",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1607,
                                  "src": "2807:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 133,
                                  "name": "currentPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 116,
                                  "src": "2790:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3121,
                                "src": "2790:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2790:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3184,
                            "src": "2790:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2790:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3201,
                        "src": "2790:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2790:68:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2781:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "2781:77:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 150,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "2878:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                            "typeString": "struct HegicOptions.Option memory"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "holder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1605,
                        "src": "2878:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2893:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2868:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                          "typeString": "contract HegicETHPool"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1009,
                      "src": "2868:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256) external"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2868:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2868:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "option",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "2922:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                          "typeString": "struct HegicOptions.Option memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                          "typeString": "struct HegicOptions.Option memory"
                        }
                      ],
                      "id": 155,
                      "name": "unlockFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        182
                      ],
                      "referencedDeclaration": 182,
                      "src": "2910:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Option_$1614_memory_ptr_$returns$__$",
                        "typeString": "function (struct HegicOptions.Option memory)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2910:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "2910:19:0"
                }
              ]
            },
            "documentation": {
              "id": 107,
              "nodeType": "StructuredDocumentation",
              "src": "2370:147:0",
              "text": "@notice Sends profits in ETH from the ETH pool to a call option holder's address\n@param option A specific option contract"
            },
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 111,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2588:8:0"
            },
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "option",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 160,
                  "src": "2541:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                    "typeString": "struct HegicOptions.Option"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 108,
                    "name": "Option",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1614,
                    "src": "2541:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Option_$1614_storage_ptr",
                      "typeString": "struct HegicOptions.Option"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2540:22:0"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "profit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 160,
                  "src": "2614:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2614:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2613:13:0"
            },
            "scope": 183,
            "src": "2522:414:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2151
            ],
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "3143:87:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 170,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "3172:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                            "typeString": "struct HegicOptions.Option memory"
                          }
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "premium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1611,
                        "src": "3172:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3153:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                          "typeString": "contract HegicETHPool"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unlockPremium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 976,
                      "src": "3153:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3153:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "3153:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "option",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "3209:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                            "typeString": "struct HegicOptions.Option memory"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1609,
                        "src": "3209:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3197:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HegicETHPool_$1092",
                          "typeString": "contract HegicETHPool"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 938,
                      "src": "3197:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3197:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "3197:26:0"
                }
              ]
            },
            "documentation": {
              "id": 161,
              "nodeType": "StructuredDocumentation",
              "src": "2942:135:0",
              "text": "@notice Unlocks the amount that was locked in a call option contract\n@param option A specific option contract"
            },
            "id": 182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockFunds",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 165,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3134:8:0"
            },
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "option",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 182,
                  "src": "3103:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Option_$1614_memory_ptr",
                    "typeString": "struct HegicOptions.Option"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 162,
                    "name": "Option",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1614,
                    "src": "3103:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Option_$1614_storage_ptr",
                      "typeString": "struct HegicOptions.Option"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3102:22:0"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3143:0:0"
            },
            "scope": 183,
            "src": "3082:148:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 184,
        "src": "904:2328:0"
      }
    ],
    "src": "749:2484:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.8+commit.0bbfe453.Emscripten.clang"
  },
  "networks": {
    "1597677376171": {
      "events": {
        "0x9acccf962da4ed9c3db3a1beedb70b0d4c3f6a69c170baca7198a74548b5ef4e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "settlementFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalFee",
              "type": "uint256"
            }
          ],
          "name": "Create",
          "type": "event"
        },
        "0x0084fe51c7cb34b132b7b6eb5d5a87a489f8d6d284758d00a0402c1bad9a0def": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            }
          ],
          "name": "Exercise",
          "type": "event"
        },
        "0x5f36a4a575e512eb69d6d28c3b0ff98cca7ba50ad5bf04e14094ad1d425e0d31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "premium",
              "type": "uint256"
            }
          ],
          "name": "Expire",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x39a9364166032fd6Bdf9Aa44378100eC51D13e65",
      "transactionHash": "0x436937014e8ac8c28fc173a2de67ff2db4a931ff711b43cd61bcff3fdfdf426f"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-17T15:19:03.247Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "0mllwntrmt3",
    "methods": {
      "constructor": {
        "params": {
          "_priceProvider": "The address of ChainLink ETH/USD price feed contract"
        }
      },
      "create(uint256,uint256,uint256)": {
        "params": {
          "amount": "Option amount",
          "period": "Option period in seconds (1 days <= period <= 4 weeks)",
          "strike": "Strike price of the option"
        },
        "returns": {
          "optionID": "Created option's ID"
        }
      },
      "exercise(uint256)": {
        "params": {
          "optionID": "ID of your option"
        }
      },
      "fees(uint256,uint256,uint256)": {
        "params": {
          "amount": "Option amount",
          "period": "Option period in seconds (1 days <= period <= 4 weeks)",
          "strike": "Strike price of the option"
        },
        "returns": {
          "periodFee": "Option period fee amount",
          "settlementFee": "Amount to be distributed to the HEGIC token holders",
          "strikeFee": "Amount that covers the price difference in the ITM options",
          "total": "Total price to be paid"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setImpliedVolRate(uint256)": {
        "params": {
          "value": "New IVRate value"
        }
      },
      "setLockupPeriod(uint256)": {
        "params": {
          "value": "New period value"
        }
      },
      "setSettlementFeeRecipient(address)": {
        "params": {
          "recipient": "New settlementFee recipient address"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unlock(uint256)": {
        "params": {
          "optionID": "ID of the option"
        }
      },
      "unlockAll(uint256[])": {
        "params": {
          "optionIDs": "array of options"
        }
      }
    },
    "title": "Hegic ETH Call Options"
  },
  "userdoc": {
    "methods": {
      "create(uint256,uint256,uint256)": {
        "notice": "Creates a new option"
      },
      "exercise(uint256)": {
        "notice": "Exercises an active option"
      },
      "fees(uint256,uint256,uint256)": {
        "notice": "Used for getting the actual options prices"
      },
      "setImpliedVolRate(uint256)": {
        "notice": "Used for adjusting the options prices while balancing asset's implied volatility rate"
      },
      "setLockupPeriod(uint256)": {
        "notice": "Used for changing the lockup period"
      },
      "setSettlementFeeRecipient(address)": {
        "notice": "Used for changing settlementFeeRecipient"
      },
      "transferPoolOwnership()": {
        "notice": "Can be used to update the contract in critical situations in the first 90 days after deployment"
      },
      "unlock(uint256)": {
        "notice": "Unlock funds locked in the expired options"
      },
      "unlockAll(uint256[])": {
        "notice": "Unlocks an array of options"
      }
    },
    "notice": "ETH Call Options Contract"
  }
}